FPML_TAGS = {
    "bullionPhysicalLeg": {
        "type": "complexType",
        "description": "The physical leg of a Commodity Forward Transaction for which the underlyer is Bullion.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "bullionType": {
                "type": "simpleType",
                "description": "The type of Bullion underlying a Bullion Transaction.",
                "python_type": "unknownType",
                "children": {}
            },
            "deliveryLocation": {
                "type": "complexType",
                "description": "The physical delivery location for the transaction.",
                "python_type": "unknownType",
                "children": {}
            },
            "physicalQuantity": {
                "type": "complexType",
                "description": "The Quantity per Delivery Period.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantityFrequency": {
                        "type": "complexType",
                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "physicalQuantitySchedule": {
                "type": "complexType",
                "description": "Allows the documentation of a shaped quantity trade where the quantity changes over the life\n                            of the transaction.",
                "python_type": "unknownType",
                "children": {
                    "quantityStep": {
                        "type": "complexType",
                        "description": "The quantity per Calculation Period. There must be a quantity specified for each Calculation\n                        Period, regardless of whether the quantity changes or remains the same between periods.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Delivery Periods defined elsewhere.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined elsewhere.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "totalPhysicalQuantity": {
                "type": "complexType",
                "description": "The Total Quantity of the commodity to be delivered.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementDate": {
                "type": "complexType",
                "description": "Date on which the bullion will settle.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "coalPhysicalLeg": {
        "type": "complexType",
        "description": "Physically settled coal leg.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "deliveryPeriods": {
                "type": "complexType",
                "description": "The period during which delivery/deliveries of Coal Products may be scheduled.\n                                Equivalent to Nomination Period(s) for US Coal.",
                "python_type": "unknownType",
                "children": {
                    "periods": {
                        "type": "complexType",
                        "description": "The Delivery Periods for this leg of the swap. This type is only intended to be used if the\n                        Delivery Periods differ from the Calculation Periods on the fixed or floating leg. If\n                        DeliveryPeriods mirror another leg, then the calculationPeriodsReference element should be used\n                        to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can\n                        be used to point to the Calculation Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "periodsSchedule": {
                        "type": "complexType",
                        "description": "The Delivery Periods for this leg of the swap. This type is only intended to be used if the\n                        Delivery Periods differ from the Calculation Periods on the fixed or floating leg. If\n                        DeliveryPeriods mirror another leg, then the calculationPeriodsReference element should be used\n                        to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can\n                        be used to point to the Calculation Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "balanceOfFirstPeriod": {
                                "type": "simpleType",
                                "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "coal": {
                "type": "complexType",
                "description": "The specification of the Coal Product to be delivered.",
                "python_type": "unknownType",
                "children": {
                    "type": {
                        "type": "complexType",
                        "description": "The type of coal product to be delivered by reference to a pre-defined specification. For\n                            contracts under SCoTA terms this is the quality specification code (e.g. \"DES ARA\")",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "coalProductSpecifications": {
                        "type": "complexType",
                        "description": "The type of coal product to be delivered specified in full.",
                        "python_type": "unknownType",
                        "children": {
                            "standardQuality": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "moisture": {
                                        "type": "complexType",
                                        "description": "The moisture content of the coal product.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "ash": {
                                        "type": "complexType",
                                        "description": "The ash content of the coal product.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "sulfur": {
                                        "type": "complexType",
                                        "description": "The sulfur/sulphur content of the coal product.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "SO2": {
                                        "type": "complexType",
                                        "description": "The sulfur/sulphur dioxide content of the coal product.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "volatile": {
                                        "type": "complexType",
                                        "description": "The volatile content of the coal product.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "BTUperLB": {
                                        "type": "complexType",
                                        "description": "The number of British Thermal Units per Pound of the coal product.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "topSize": {
                                        "type": "complexType",
                                        "description": "The smallest sieve opening that will result in less than 5% of a sample of the coal product\n                        remaining.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "finesPassingScreen": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "grindability": {
                                        "type": "complexType",
                                        "description": "The Hardgrove Grindability Index value of the coal to be delivered.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "ashFusionTemperature": {
                                        "type": "complexType",
                                        "description": "The temperature at which the ash form of the coal product fuses completely in accordance with\n                        the ASTM International D1857 Standard Test Methodology.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "initialDeformation": {
                                        "type": "complexType",
                                        "description": "The temperature at which an ash cone shows evidence of deformation.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "softeningHeightWidth": {
                                        "type": "complexType",
                                        "description": "The temperature at which the height of an ash cone equals its width. (Softening temperature).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "softeningHeightHalfWidth": {
                                        "type": "complexType",
                                        "description": "The temperature at which the height of an ash cone equals half its width. (Hemisphere\n                        temperature).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "fluid": {
                                        "type": "complexType",
                                        "description": "The temperature at which the ash cone flattens.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "standardContent": {
                                                "type": "simpleType",
                                                "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rejectionLimit": {
                                                "type": "simpleType",
                                                "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "standardQualitySchedule": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "StandardQualityStep": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "moisture": {
                                                "type": "complexType",
                                                "description": "The moisture content of the coal product.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "ash": {
                                                "type": "complexType",
                                                "description": "The ash content of the coal product.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "sulfur": {
                                                "type": "complexType",
                                                "description": "The sulfur/sulphur content of the coal product.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "SO2": {
                                                "type": "complexType",
                                                "description": "The sulfur/sulphur dioxide content of the coal product.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "volatile": {
                                                "type": "complexType",
                                                "description": "The volatile content of the coal product.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "BTUperLB": {
                                                "type": "complexType",
                                                "description": "The number of British Thermal Units per Pound of the coal product.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "topSize": {
                                                "type": "complexType",
                                                "description": "The smallest sieve opening that will result in less than 5% of a sample of the coal product\n                        remaining.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "finesPassingScreen": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "grindability": {
                                                "type": "complexType",
                                                "description": "The Hardgrove Grindability Index value of the coal to be delivered.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "ashFusionTemperature": {
                                                "type": "complexType",
                                                "description": "The temperature at which the ash form of the coal product fuses completely in accordance with\n                        the ASTM International D1857 Standard Test Methodology.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "initialDeformation": {
                                                "type": "complexType",
                                                "description": "The temperature at which an ash cone shows evidence of deformation.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "softeningHeightWidth": {
                                                "type": "complexType",
                                                "description": "The temperature at which the height of an ash cone equals its width. (Softening temperature).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "softeningHeightHalfWidth": {
                                                "type": "complexType",
                                                "description": "The temperature at which the height of an ash cone equals half its width. (Hemisphere\n                        temperature).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "fluid": {
                                                "type": "complexType",
                                                "description": "The temperature at which the ash cone flattens.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "standardContent": {
                                                        "type": "simpleType",
                                                        "description": "The actual content of the quality characteristics of the Coal Product Shipment expected by\n                            the Buyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rejectionLimit": {
                                                        "type": "simpleType",
                                                        "description": "The actual limits of the quality characteristics of the Coal Product above or below which\n                            the Buyer may reject a Shipment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "deliveryPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Delivery Periods defined elsewhere.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined elsewhere.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "source": {
                        "type": "complexType",
                        "description": "The SCoTA cargo origin, mining region, mine(s), mining complex(es), loadout(s) or river dock(s)\n                        or other point(s) of origin that Seller and Buyer agree are acceptable origins for the Coal\n                        Product. For International Coal transactions, this is the Origin of the Coal Product.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "sCoTASpecifications": {
                        "type": "simpleType",
                        "description": "Indicates whether type and source refer to globalCOAL SCoTA specifications.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "btuQualityAdjustment": {
                        "type": "complexType",
                        "description": "The Quality Adjustment formula to be used where the Actual Shipment BTU/Lb value differs from\n                        the Standard BTU/Lb value.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "so2QualityAdjustment": {
                        "type": "complexType",
                        "description": "The Quality Adjustment formula to be used where the Actual Shipment SO2/MMBTU value differs from\n                        the Standard SO2/MMBTU value.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryConditions": {
                "type": "complexType",
                "description": "The physical delivery conditions for the transaction.",
                "python_type": "unknownType",
                "children": {
                    "deliveryPoint": {
                        "type": "complexType",
                        "description": "The point at which the Coal Product will be delivered and received.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryAtSource": {
                        "type": "simpleType",
                        "description": "The point at which the Coal Product as a reference to the Source of the Coal Product. This\n                            should be a reference to the source element within product.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantityVariationAdjustment": {
                        "type": "simpleType",
                        "description": "If true, indicates that QVA is applicable. If false, indicates that QVA is inapplicable.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "transportationEquipment": {
                        "type": "complexType",
                        "description": "The transportation equipment with which the Coal Product will be delivered and received.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "risk": {
                        "type": "complexType",
                        "description": "Specifies how the risk associated with the delivery is assigned.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryQuantity": {
                "type": "complexType",
                "description": "The different options for specifying the quantity.",
                "python_type": "unknownType",
                "children": {
                    "physicalQuantity": {
                        "type": "complexType",
                        "description": "The Quantity per Delivery Period.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "physicalQuantitySchedule": {
                        "type": "complexType",
                        "description": "Allows the documentation of a shaped quantity trade where the quantity changes over the life\n                            of the transaction.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityStep": {
                                "type": "complexType",
                                "description": "The quantity per Calculation Period. There must be a quantity specified for each Calculation\n                        Period, regardless of whether the quantity changes or remains the same between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantityUnit": {
                                        "type": "complexType",
                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityFrequency": {
                                        "type": "complexType",
                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "Amount of commodity per quantity frequency.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Delivery Periods defined elsewhere.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined elsewhere.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "totalPhysicalQuantity": {
                        "type": "complexType",
                        "description": "The Total Quantity of the commodity to be delivered.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "commodityBasketOption": {
        "type": "complexType",
        "description": "Defines a commodity basket option product.",
        "python_type": "unknownType",
        "children": {
            "primaryAssetClass": {
                "type": "complexType",
                "description": "A classification of the most important risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "secondaryAssetClass": {
                "type": "complexType",
                "description": "A classification of additional risk classes of the trade, if any. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productType": {
                "type": "complexType",
                "description": "A classification of the type of product. FpML defines a simple product categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productId": {
                "type": "complexType",
                "description": "A product reference identifier. The product ID is an identifier that describes the key economic characteristics of the trade type, with the exception of concepts such as size (notional, quantity, number of units) and price (fixed rate, strike, etc.) that are negotiated for each transaction. It can be used to hold identifiers such as the \"UPI\" (universal product identifier) required by certain regulatory reporting rules. It can also be used to hold identifiers of benchmark products or product temnplates used by certain trading systems or facilities. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
                "python_type": "unknownType",
                "children": {}
            },
            "assetClass": {
                "type": "complexType",
                "description": "A classification of the risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "buyerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that buys this instrument, ie. pays for this instrument and receives the rights defined by it. See 2000 ISDA definitions Article 11.1 (b). In the case of FRAs this the fixed rate payer.",
                "python_type": "unknownType",
                "children": {}
            },
            "buyerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that buys this instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "sellerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that sells (\"writes\") this instrument, i.e. that grants the rights defined by this instrument and in return receives a payment for it. See 2000 ISDA definitions Article 11.1 (a). In the case of FRAs this is the floating rate payer.",
                "python_type": "unknownType",
                "children": {}
            },
            "sellerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that sells this instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "optionType": {
                "type": "simpleType",
                "description": "The type of option transaction.",
                "python_type": "unknownType",
                "children": {}
            },
            "effectiveDate": {
                "type": "complexType",
                "description": "The effective date of the Commodity Option Transaction. Note that the Termination/Expiration\n                        Date should be specified in expirationDate within the CommodityAmericanExercise type or the\n                        CommodityEuropeanExercise type, as applicable.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "terminationDate": {
                "type": "complexType",
                "description": "Specifies the termination date of the Commodity Option Transaction. In some confirmations this\n                        will be indicated as the second date in \"Option Term\" or \"Term\". Note: If provided,\n                        terminationDate should not be before specified expirationDate within the\n                        CommodityAmericanExercise type or the CommodityEuropeanExercise type.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "calculationPeriodsSchedule": {
                "type": "complexType",
                "description": "A parametric representation of the Calculation Periods of the Commodity Option Transaction.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "balanceOfFirstPeriod": {
                        "type": "simpleType",
                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriods": {
                "type": "complexType",
                "description": "An absolute representation of the Calculation Period start dates of the Commodity Option\n                            Transaction.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "notionalQuantityBasket": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "underlying": {
                        "type": "complexType",
                        "description": "Indicates the role of the option buyer with regard to this underlyer.",
                        "python_type": "unknownType",
                        "children": {
                            "direction": {
                                "type": "simpleType",
                                "description": "Indicates the role of the option buyer with regard to this underlyer.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "commodity": {
                                "type": "complexType",
                                "description": "Specifies the underlying component. At the time of the initial schema design, only underlyers of\n                        type Commodity are supported; the choice group in the future could offer the possibility of\n                        adding other types later.",
                                "python_type": "unknownType",
                                "children": {
                                    "instrumentId": {
                                        "type": "complexType",
                                        "description": "Identification of the underlying asset, using public and/or private identifiers.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "instrumentType": {
                                        "type": "complexType",
                                        "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "description": {
                                        "type": "simpleType",
                                        "description": "Long name of the underlying asset.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commodityBase": {
                                        "type": "complexType",
                                        "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commodityDetails": {
                                        "type": "complexType",
                                        "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "unit": {
                                        "type": "complexType",
                                        "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "exchangeId": {
                                        "type": "complexType",
                                        "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "publication": {
                                        "type": "complexType",
                                        "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "rateSource": {
                                                "type": "complexType",
                                                "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePage": {
                                                "type": "complexType",
                                                "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePageHeading": {
                                                "type": "simpleType",
                                                "description": "The heading for the rate source on a given rate source page or screen.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "specifiedPrice": {
                                        "type": "simpleType",
                                        "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryDates": {
                                        "type": "simpleType",
                                        "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryNearby": {
                                        "type": "complexType",
                                        "description": "A container for the parametric representation of nearby contracts.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "deliveryNearbyMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryNearbyType": {
                                                "type": "simpleType",
                                                "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "deliveryDate": {
                                        "type": "complexType",
                                        "description": "The Delivery Date is a fixed, single day.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "deliveryDateYearMonth": {
                                        "type": "simpleType",
                                        "description": "The Delivery Date is a fixed, single month.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryDateRollConvention": {
                                        "type": "complexType",
                                        "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "deliveryDateExpirationConvention": {
                                        "type": "complexType",
                                        "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "multiplier": {
                                        "type": "simpleType",
                                        "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "pricingDates": {
                                "type": "complexType",
                                "description": "The dates on which the option will price.",
                                "python_type": "unknownType",
                                "children": {
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "lag": {
                                        "type": "complexType",
                                        "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "lagDuration": {
                                                "type": "complexType",
                                                "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "firstObservationDateOffset": {
                                                "type": "complexType",
                                                "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "The type of day on which pricing occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayDistribution": {
                                        "type": "complexType",
                                        "description": "The method by which the pricing days are distributed across the pricing period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayCount": {
                                        "type": "simpleType",
                                        "description": "The number of days over which pricing should take place.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayOfWeek": {
                                        "type": "simpleType",
                                        "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayNumber": {
                                        "type": "simpleType",
                                        "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCalendar": {
                                        "type": "complexType",
                                        "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calendarSource": {
                                        "type": "simpleType",
                                        "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "settlementPeriods": {
                                        "type": "complexType",
                                        "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "duration": {
                                                "type": "simpleType",
                                                "description": "The length of each Settlement Period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "applicableDay": {
                                                "type": "simpleType",
                                                "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "startTime": {
                                                "type": "complexType",
                                                "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "time": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "hourMinuteTime": {
                                                                "type": "simpleType",
                                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "location": {
                                                                "type": "complexType",
                                                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "complexType",
                                                        "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "endTime": {
                                                "type": "complexType",
                                                "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "time": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "hourMinuteTime": {
                                                                "type": "simpleType",
                                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "location": {
                                                                "type": "complexType",
                                                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "complexType",
                                                        "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "timeDuration": {
                                                "type": "simpleType",
                                                "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "excludeHolidays": {
                                                "type": "complexType",
                                                "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "includeHolidays": {
                                                "type": "complexType",
                                                "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "settlementPeriodsReference": {
                                        "type": "complexType",
                                        "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "pricingDates": {
                                        "type": "complexType",
                                        "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "averagingMethod": {
                                "type": "simpleType",
                                "description": "The Method of Averaging if there is more than one Pricing Date.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "fx": {
                                "type": "complexType",
                                "description": "FX observations to be used to convert the observed Commodity Reference Price to the\n                                Settlement Currency.",
                                "python_type": "unknownType",
                                "children": {
                                    "primaryRateSource": {
                                        "type": "complexType",
                                        "description": "The primary source for where the rate observation will occur. Will typically be either a page or\n                        a reference bank published rate.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "rateSource": {
                                                "type": "complexType",
                                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePage": {
                                                "type": "complexType",
                                                "description": "A specific page for the rate source for obtaining a market rate.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePageHeading": {
                                                "type": "simpleType",
                                                "description": "The heading for the rate source on a given rate source page.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "secondaryRateSource": {
                                        "type": "complexType",
                                        "description": "An alternative, or secondary, source for where the rate observation will occur. Will typically\n                        be either a page or a reference bank published rate.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "rateSource": {
                                                "type": "complexType",
                                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePage": {
                                                "type": "complexType",
                                                "description": "A specific page for the rate source for obtaining a market rate.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePageHeading": {
                                                "type": "simpleType",
                                                "description": "The heading for the rate source on a given rate source page.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "fxType": {
                                        "type": "complexType",
                                        "description": "A type to identify how the FX rate will be applied. This is intended to differentiate between\n                        the various methods for applying FX to the floating price such as a daily calculation, or\n                        averaging the FX and applying the average at the end of each CalculationPeriod.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "averagingMethod": {
                                        "type": "simpleType",
                                        "description": "The parties may specify a Method of Averaging when averaging of the FX rate is applicable.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "fixingTime": {
                                        "type": "complexType",
                                        "description": "The time at which the spot currency exchange rate will be observed. It is specified as a\n                                time in a specific business center, e.g. 11:00am London time.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "hourMinuteTime": {
                                                "type": "simpleType",
                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "fxObservationDates": {
                                        "type": "complexType",
                                        "description": "A list of the fx observation dates for a given Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "The type of day on which pricing occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayDistribution": {
                                        "type": "complexType",
                                        "description": "The method by which the pricing days are distributed across the pricing period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayCount": {
                                        "type": "simpleType",
                                        "description": "The number of days over which pricing should take place.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayOfWeek": {
                                        "type": "simpleType",
                                        "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayNumber": {
                                        "type": "simpleType",
                                        "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "lag": {
                                        "type": "complexType",
                                        "description": "The pricing period per calculation period if the pricing days do not wholly fall within the\n                        respective calculation period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "lagDuration": {
                                                "type": "complexType",
                                                "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "firstObservationDateOffset": {
                                                "type": "complexType",
                                                "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "lagReference": {
                                        "type": "complexType",
                                        "description": "Allows a lag to reference one already defined elsewhere in the trade.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "conversionFactor": {
                                "type": "simpleType",
                                "description": "If the Notional Quantity is specified in a unit that does not match the unit in which\n                                the Commodity Reference Price is quoted, the scaling or conversion factor used to\n                                convert the Commodity Reference Price unit into the Notional Quantity unit should be\n                                stated here. If there is no conversion, this element is not intended to be used.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "notionalQuantitySchedule": {
                                "type": "complexType",
                                "description": "Allows the documentation of a shaped notional trade where the notional changes over the\n                                life of the transaction.",
                                "python_type": "unknownType",
                                "children": {
                                    "notionalStep": {
                                        "type": "complexType",
                                        "description": "The Notional Quantity per Calculation Period. There must be a Notional Quantity specified\n                            for each Calculation Period, regardless of whether the quantity changes or remains the same\n                            between periods.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "settlementPeriodsNotionalQuantitySchedule": {
                                        "type": "complexType",
                                        "description": "For an electricity transaction, the Notional Quantity schedule for a one or more groups of\n                            Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                            different groups of Settlement Periods, this element should be repeated.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "settlementPeriodsNotionalQuantityStep": {
                                                "type": "complexType",
                                                "description": "For an electricity transaction, the Notional Quantity for a given Calculation Period during the\n                        life of the trade which applies to the range(s) of Settlement Periods referenced by\n                        settlementPeriodsReference. There must be a settlementPeriodsNotionalQuantityStep specified for\n                        each Calculation Period, regardless of whether the NotionalQuantity changes or remains the same\n                        between periods.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "quantityUnit": {
                                                        "type": "complexType",
                                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quantityFrequency": {
                                                        "type": "complexType",
                                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quantity": {
                                                        "type": "simpleType",
                                                        "description": "Amount of commodity per quantity frequency.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "settlementPeriodsReference": {
                                                "type": "complexType",
                                                "description": "The range(s) of Settlement Periods to which the Fixed Price steps apply.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "notionalQuantity": {
                                "type": "complexType",
                                "description": "The Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantityUnit": {
                                        "type": "complexType",
                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityFrequency": {
                                        "type": "complexType",
                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "Amount of commodity per quantity frequency.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsNotionalQuantity": {
                                "type": "complexType",
                                "description": "For an electricity transaction, the Notional Quantity for a one or more groups of\n                                Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                                different groups of Settlement Periods, this element should be repeated.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantityUnit": {
                                        "type": "complexType",
                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityFrequency": {
                                        "type": "complexType",
                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "Amount of commodity per quantity frequency.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "settlementPeriodsReference": {
                                        "type": "complexType",
                                        "description": "The range(s) of Settlement Periods to which the Notional Quantity applies.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "totalNotionalQuantity": {
                                "type": "simpleType",
                                "description": "The Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a quantity defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "notionalAmountBasket": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "underlying": {
                        "type": "complexType",
                        "description": "Indicates the role of the option buyer with regard to this underlyer.",
                        "python_type": "unknownType",
                        "children": {
                            "direction": {
                                "type": "simpleType",
                                "description": "Indicates the role of the option buyer with regard to this underlyer.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "commodity": {
                                "type": "complexType",
                                "description": "Specifies the underlying component. At the time of the initial schema design, only underlyers of\n                        type Commodity are supported; the choice group in the future could offer the possibility of\n                        adding other types later.",
                                "python_type": "unknownType",
                                "children": {
                                    "instrumentId": {
                                        "type": "complexType",
                                        "description": "Identification of the underlying asset, using public and/or private identifiers.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "instrumentType": {
                                        "type": "complexType",
                                        "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "description": {
                                        "type": "simpleType",
                                        "description": "Long name of the underlying asset.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commodityBase": {
                                        "type": "complexType",
                                        "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commodityDetails": {
                                        "type": "complexType",
                                        "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "unit": {
                                        "type": "complexType",
                                        "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "exchangeId": {
                                        "type": "complexType",
                                        "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "publication": {
                                        "type": "complexType",
                                        "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "rateSource": {
                                                "type": "complexType",
                                                "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePage": {
                                                "type": "complexType",
                                                "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePageHeading": {
                                                "type": "simpleType",
                                                "description": "The heading for the rate source on a given rate source page or screen.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "specifiedPrice": {
                                        "type": "simpleType",
                                        "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryDates": {
                                        "type": "simpleType",
                                        "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryNearby": {
                                        "type": "complexType",
                                        "description": "A container for the parametric representation of nearby contracts.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "deliveryNearbyMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryNearbyType": {
                                                "type": "simpleType",
                                                "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "deliveryDate": {
                                        "type": "complexType",
                                        "description": "The Delivery Date is a fixed, single day.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "deliveryDateYearMonth": {
                                        "type": "simpleType",
                                        "description": "The Delivery Date is a fixed, single month.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryDateRollConvention": {
                                        "type": "complexType",
                                        "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "deliveryDateExpirationConvention": {
                                        "type": "complexType",
                                        "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "multiplier": {
                                        "type": "simpleType",
                                        "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "pricingDates": {
                                "type": "complexType",
                                "description": "The dates on which the option will price.",
                                "python_type": "unknownType",
                                "children": {
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "lag": {
                                        "type": "complexType",
                                        "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "lagDuration": {
                                                "type": "complexType",
                                                "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "firstObservationDateOffset": {
                                                "type": "complexType",
                                                "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "The type of day on which pricing occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayDistribution": {
                                        "type": "complexType",
                                        "description": "The method by which the pricing days are distributed across the pricing period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayCount": {
                                        "type": "simpleType",
                                        "description": "The number of days over which pricing should take place.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayOfWeek": {
                                        "type": "simpleType",
                                        "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayNumber": {
                                        "type": "simpleType",
                                        "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCalendar": {
                                        "type": "complexType",
                                        "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calendarSource": {
                                        "type": "simpleType",
                                        "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "settlementPeriods": {
                                        "type": "complexType",
                                        "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "duration": {
                                                "type": "simpleType",
                                                "description": "The length of each Settlement Period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "applicableDay": {
                                                "type": "simpleType",
                                                "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "startTime": {
                                                "type": "complexType",
                                                "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "time": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "hourMinuteTime": {
                                                                "type": "simpleType",
                                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "location": {
                                                                "type": "complexType",
                                                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "complexType",
                                                        "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "endTime": {
                                                "type": "complexType",
                                                "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "time": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "hourMinuteTime": {
                                                                "type": "simpleType",
                                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "location": {
                                                                "type": "complexType",
                                                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "complexType",
                                                        "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "timeDuration": {
                                                "type": "simpleType",
                                                "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "excludeHolidays": {
                                                "type": "complexType",
                                                "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "includeHolidays": {
                                                "type": "complexType",
                                                "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "settlementPeriodsReference": {
                                        "type": "complexType",
                                        "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "pricingDates": {
                                        "type": "complexType",
                                        "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "averagingMethod": {
                                "type": "simpleType",
                                "description": "The Method of Averaging if there is more than one Pricing Date.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "constituentWeight": {
                                "type": "simpleType",
                                "description": "If the Notional Quantity is specified in a unit that does not match the unit in which\n                                the Commodity Reference Price is quoted, the scaling or conversion factor used to\n                                convert the Commodity Reference Price unit into the Notional Quantity unit should be\n                                stated here. If there is no conversion, this element is not intended to be used.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "notionalAmount": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "strikePriceUnderlyingReference": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "strikePriceBasketReference": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "strikePricePerUnit": {
                "type": "complexType",
                "description": "The currency amount of the strike price per unit.",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "strikePricePerUnitSchedule": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "strikePricePerUnitStep": {
                        "type": "complexType",
                        "description": "The strike price per unit per Calculation Period. There must be a strike price per unit\n                        specified for each Calculation Period, regardless of whether the price changes or remains the\n                        same between periods.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "floatingStrikePricePerUnit": {
                "type": "complexType",
                "description": "The currency amount of the strike price per unit.",
                "python_type": "unknownType",
                "children": {
                    "pricingDates": {
                        "type": "complexType",
                        "description": "Commodity Pricing Dates.",
                        "python_type": "unknownType",
                        "children": {
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCalendar": {
                                "type": "complexType",
                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calendarSource": {
                                "type": "simpleType",
                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementPeriods": {
                                "type": "complexType",
                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                "python_type": "unknownType",
                                "children": {
                                    "duration": {
                                        "type": "simpleType",
                                        "description": "The length of each Settlement Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "applicableDay": {
                                        "type": "simpleType",
                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "startTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "endTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "timeDuration": {
                                        "type": "simpleType",
                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "excludeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "includeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "pricingDates": {
                                "type": "complexType",
                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "averagingMethod": {
                        "type": "simpleType",
                        "description": "The parties may specify a Method of Averaging where more than one pricing Dates is being\n                        specified as being applicable.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "conversionFactor": {
                        "type": "simpleType",
                        "description": "If the Notional Quantity is specified in units that do not match the units in which the\n                        Commodity Reference Price is quoted, the scaling or conversion factor used to convert the\n                        Commodity Reference Price units into the Notional Quantity units should be stated here. If there\n                        is no conversion, this element is not intended to be used.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "rounding": {
                        "type": "complexType",
                        "description": "Rounding direction and precision for price values.",
                        "python_type": "unknownType",
                        "children": {
                            "roundingDirection": {
                                "type": "simpleType",
                                "description": "Specifies the rounding direction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "precision": {
                                "type": "simpleType",
                                "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "spread": {
                        "type": "complexType",
                        "description": "The spread over or under the Commodity Reference Price for this leg of the trade.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "spreadConversionFactor": {
                                "type": "simpleType",
                                "description": "spreadConversionFactor should be used when the unit of measure of the Commodity\n                                Reference Price and the unit of measure in which the spread is quoted are different. The\n                                value of spreadConversionFactor is the number of units of measure in which the spread is\n                                quoted per unit of measure of the Commodity Reference Price.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "spreadUnit": {
                                "type": "complexType",
                                "description": "spreadUnit should be used when the unit of measure of the Commodity Reference Price and\n                                the unit of measure in which the spread is quoted are different. The value of spreadUnit\n                                is the unit of measure in which the spread is quoted.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "spreadSchedule": {
                        "type": "complexType",
                        "description": "The spread over or under the Commodity Reference Price for this leg of the trade for each\n                            Calculation Period.",
                        "python_type": "unknownType",
                        "children": {
                            "spreadStep": {
                                "type": "complexType",
                                "description": "The spread per Calculation Period. There must be a spread step specified for each Calculation\n                        Period, regardless of whether the spread changes or remains the same between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "spreadConversionFactor": {
                                        "type": "simpleType",
                                        "description": "spreadConversionFactor should be used when the unit of measure of the Commodity\n                                Reference Price and the unit of measure in which the spread is quoted are different. The\n                                value of spreadConversionFactor is the number of units of measure in which the spread is\n                                quoted per unit of measure of the Commodity Reference Price.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "spreadUnit": {
                                        "type": "complexType",
                                        "description": "spreadUnit should be used when the unit of measure of the Commodity Reference Price and\n                                the unit of measure in which the spread is quoted are different. The value of spreadUnit\n                                is the unit of measure in which the spread is quoted.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "spreadPercentage": {
                        "type": "simpleType",
                        "description": "The spread percentage over or under the Commodity Reference Price for this leg of the trade.\n                            A value expressed in percentage units i.e. 5 means 5%.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "fx": {
                        "type": "complexType",
                        "description": "Defines how observations of FX prices are to be used to calculate a factor with which to convert\n                        the observed Commodity Reference Price to the Settlement Currency.",
                        "python_type": "unknownType",
                        "children": {
                            "primaryRateSource": {
                                "type": "complexType",
                                "description": "The primary source for where the rate observation will occur. Will typically be either a page or\n                        a reference bank published rate.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "secondaryRateSource": {
                                "type": "complexType",
                                "description": "An alternative, or secondary, source for where the rate observation will occur. Will typically\n                        be either a page or a reference bank published rate.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fxType": {
                                "type": "complexType",
                                "description": "A type to identify how the FX rate will be applied. This is intended to differentiate between\n                        the various methods for applying FX to the floating price such as a daily calculation, or\n                        averaging the FX and applying the average at the end of each CalculationPeriod.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "averagingMethod": {
                                "type": "simpleType",
                                "description": "The parties may specify a Method of Averaging when averaging of the FX rate is applicable.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "fixingTime": {
                                "type": "complexType",
                                "description": "The time at which the spot currency exchange rate will be observed. It is specified as a\n                                time in a specific business center, e.g. 11:00am London time.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fxObservationDates": {
                                "type": "complexType",
                                "description": "A list of the fx observation dates for a given Calculation Period.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within the\n                        respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "lagReference": {
                                "type": "complexType",
                                "description": "Allows a lag to reference one already defined elsewhere in the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "commodity": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "instrumentId": {
                                "type": "complexType",
                                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "instrumentType": {
                                "type": "complexType",
                                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "description": {
                                "type": "simpleType",
                                "description": "Long name of the underlying asset.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "commodityBase": {
                                "type": "complexType",
                                "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "commodityDetails": {
                                "type": "complexType",
                                "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "unit": {
                                "type": "complexType",
                                "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "exchangeId": {
                                "type": "complexType",
                                "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "publication": {
                                "type": "complexType",
                                "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page or screen.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "specifiedPrice": {
                                "type": "simpleType",
                                "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryDates": {
                                "type": "simpleType",
                                "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryNearby": {
                                "type": "complexType",
                                "description": "A container for the parametric representation of nearby contracts.",
                                "python_type": "unknownType",
                                "children": {
                                    "deliveryNearbyMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryNearbyType": {
                                        "type": "simpleType",
                                        "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryDate": {
                                "type": "complexType",
                                "description": "The Delivery Date is a fixed, single day.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryDateYearMonth": {
                                "type": "simpleType",
                                "description": "The Delivery Date is a fixed, single month.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryDateRollConvention": {
                                "type": "complexType",
                                "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryDateExpirationConvention": {
                                "type": "complexType",
                                "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "multiplier": {
                                "type": "simpleType",
                                "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "floatingStrikePricePerUnitSchedule": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "balanceOfFirstPeriod": {
                        "type": "simpleType",
                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "exercise": {
                "type": "complexType",
                "description": "The parameters for defining how the commodity option can be exercised and how it is\n                                settled.",
                "python_type": "unknownType",
                "children": {
                    "americanExercise": {
                        "type": "complexType",
                        "description": "The parameters for defining the exercise period for an American style option together with\n                            the rules governing the quantity of the commodity that can be exercised on any given\n                            exercise date.",
                        "python_type": "unknownType",
                        "children": {
                            "exercisePeriod": {
                                "type": "complexType",
                                "description": "Describes the American exercise periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "commencementDate": {
                                        "type": "complexType",
                                        "description": "The first day of the exercise period for an American style option.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "adjustableDate": {
                                                "type": "complexType",
                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "relativeDate": {
                                                "type": "complexType",
                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "dateRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expirationDate": {
                                        "type": "complexType",
                                        "description": "The last day within an exercise period for an American style option. For a European style option\n                        it is the only day within the exercise period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "adjustableDate": {
                                                "type": "complexType",
                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "relativeDate": {
                                                "type": "complexType",
                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "dateRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "exerciseFrequency": {
                                "type": "complexType",
                                "description": "The exercise frequency for the strip.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "latestExerciseTime": {
                                "type": "complexType",
                                "description": "For a Bermuda or American style option, the latest time on an exercise business day\n                                    (excluding the expiration date) within the exercise period that notice can be given\n                                    by the buyer to the seller or seller's agent. Notice of exercise given after this\n                                    time will be deemed to have been given on the next exercise business day.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "latestExerciseTimeDetermination": {
                                "type": "complexType",
                                "description": "Latest exercise time determination method.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "expirationTime": {
                                "type": "complexType",
                                "description": "The specific time of day on which the option expires.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "multipleExercise": {
                                "type": "complexType",
                                "description": "The presence of this element indicates that the option may be partially exercised. It is\n                                not applicable to European or Asian options.",
                                "python_type": "unknownType",
                                "children": {
                                    "integralMultipleQuantity": {
                                        "type": "complexType",
                                        "description": "The integral multiple quantity defines a lower limit of the Notional Quantity that can be\n                        exercised and also defines a unit multiple of the Notional Quantity that can be exercised, i.e.\n                        only integer multiples of this Notional Quantity can be exercised.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "minimumNotionalQuantity": {
                                        "type": "complexType",
                                        "description": "The minimum Notional Quantity that can be exercised on a given Exercise Date. See\n                        multipleExercise.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "europeanExercise": {
                        "type": "complexType",
                        "description": "The parameters for defining the expiration date and time for a European or Asian style\n                            option. For an Asian style option the expiration date is equivalent to the termination date.",
                        "python_type": "unknownType",
                        "children": {
                            "expirationDate": {
                                "type": "complexType",
                                "description": "The last day within an exercise period for an American style option. For a European\n                                    style option it is the only day within the exercise period. For an averaging option\n                                    this is equivalent to the Termination Date.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDate": {
                                        "type": "complexType",
                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDate": {
                                        "type": "complexType",
                                        "description": "A date specified as an offset to another date (the anchor date).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "exerciseFrequency": {
                                "type": "complexType",
                                "description": "The exercise frequency for the strip.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "expirationTime": {
                                "type": "complexType",
                                "description": "The specific time of day on which the option expires.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "automaticExercise": {
                        "type": "simpleType",
                        "description": "Specifies whether or not Automatic Exercise applies to a Commodity Option Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "writtenConfirmation": {
                        "type": "simpleType",
                        "description": "Specifies whether or not Written Confirmation applies to a Commodity Option Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "settlementCurrency": {
                        "type": "complexType",
                        "description": "The currency into which the Commodity Option Transaction will settle. If this is not the same as\n                        the currency in which the Commodity Reference Price is quoted, then an FX determination method\n                        should also be specified.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "relativePaymentDates": {
                        "type": "complexType",
                        "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                        "python_type": "unknownType",
                        "children": {
                            "payRelativeTo": {
                                "type": "simpleType",
                                "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payRelativeToEvent": {
                                "type": "complexType",
                                "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "paymentDaysOffset": {
                                "type": "complexType",
                                "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "paymentDates": {
                        "type": "complexType",
                        "description": "Dates on which payments will be made.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDates": {
                                "type": "complexType",
                                "description": "A series of adjustable dates",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A series of dates specified as a repeating sequence from a base date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "masterAgreementPaymentDates": {
                        "type": "simpleType",
                        "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "premium": {
                "type": "complexType",
                "description": "The option premium payable by the buyer to the seller.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "paymentDate": {
                        "type": "complexType",
                        "description": "The payment date, which can be expressed as either an adjustable or relative date.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDate": {
                                "type": "complexType",
                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A date specified as an offset to another date (the anchor date).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "paymentAmount": {
                        "type": "complexType",
                        "description": "Non negative payment amount.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "premiumPerUnit": {
                        "type": "complexType",
                        "description": "The currency amount of premium to be paid per Unit of the Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "commonPricing": {
                "type": "simpleType",
                "description": "If Common Pricing is elected (\u201ctrue\u201d) for a Transaction with referencing more than\n                        one Commodity Reference Price then no date will be a Pricing Date unless such a date is a day on\n                        which all Commodity Reference Prices are scheduled to be published.",
                "python_type": "unknownType",
                "children": {}
            },
            "marketDisruption": {
                "type": "complexType",
                "description": "Contains contract terms related to triggers and responses to market disruptions as defined in\n                        the 1993 or 2005 Commodity Definitions.",
                "python_type": "unknownType",
                "children": {
                    "marketDisruptionEvents": {
                        "type": "simpleType",
                        "description": "If Market disruption Events are stated to be Applicable then the default Market\n                                Disruption Events of Section 7.4(d)(i) of the ISDA Commodity Definitions shall apply\n                                unless specific Market Disruption Events are stated hereunder, in which case these shall\n                                override the ISDA defaults. If Market Disruption Events are stated to be Not Applicable,\n                                Market Disruption Events are not applicable to the trade at all. It is also possible to\n                                reference the Market Disruption Events set out in the relevant Master Agreement\n                                governing the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "additionalMarketDisruptionEvent": {
                        "type": "complexType",
                        "description": "To be used when marketDisruptionEvents is set to \"Applicable\" and additional market\n                                disruption events(s) apply to the default market disruption events of Section 7.4(d)(i)\n                                of the ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "marketDisruptionEvent": {
                        "type": "complexType",
                        "description": "Market disruption event(s) that apply. Note that these should only be specified if the\n                            default market disruption events of Section 7.4(d)(i) of the ISDA Commodity Definitions are\n                            to be overridden.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallbacks": {
                        "type": "simpleType",
                        "description": "To be used where disruption fallbacks are set out in the relevant Master Agreement governing\n                            the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallback": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "fallback": {
                                "type": "complexType",
                                "description": "Disruption fallback that applies to the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "sequence": {
                                "type": "simpleType",
                                "description": "Sequence in which the reference to the disruption fallback should be applied.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "fallbackReferencePrice": {
                        "type": "complexType",
                        "description": "A fallback commodity reference price for use when relying on Disruption Fallbacks in Section\n                        7.5(d)(i) of the ISDA Commodity Definitions or have selected \"Fallback Reference Price\" as a\n                        disruptionFallback.",
                        "python_type": "unknownType",
                        "children": {
                            "singleUnderlyer": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has only one asset component.",
                                "python_type": "unknownType",
                                "children": {
                                    "underlyingAsset": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dividendPayout": {
                                        "type": "complexType",
                                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "dividendPayoutRatio": {
                                                "type": "simpleType",
                                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioNonCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutConditions": {
                                                "type": "simpleType",
                                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming dividend payment or payments.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "couponPayment": {
                                        "type": "complexType",
                                        "description": "The next upcoming coupon payment.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "paymentDate": {
                                                "type": "simpleType",
                                                "description": "The date that the dividend or coupon is due.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "complexType",
                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "accruedInterest": {
                                                "type": "complexType",
                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averageDailyTradingVolume": {
                                        "type": "complexType",
                                        "description": "The average amount of individual securities traded in a day or over a specified amount of time.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "limitationPercentage": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation percentage in Average Daily trading volume. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "limitationPeriod": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation period for Average Daily trading volume in number of days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "depositoryReceipt": {
                                        "type": "simpleType",
                                        "description": "A Depository Receipt is a negotiable certificate issued by a trust company or security depository. This element is used to represent whether a Depository Receipt is applicable or not to the underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "basket": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has multiple asset components.",
                                "python_type": "unknownType",
                                "children": {
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketConstituent": {
                                        "type": "complexType",
                                        "description": "Describes each of the components of the basket.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "payerPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "payerAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "underlyingAsset": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "constituentWeight": {
                                                "type": "complexType",
                                                "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "openUnits": {
                                                        "type": "simpleType",
                                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketPercentage": {
                                                        "type": "simpleType",
                                                        "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketAmount": {
                                                        "type": "complexType",
                                                        "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dividendPayout": {
                                                "type": "complexType",
                                                "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "dividendPayoutRatio": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioNonCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutConditions": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming dividend payment or payments.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerPrice": {
                                                "type": "complexType",
                                                "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "commission": {
                                                        "type": "complexType",
                                                        "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "commissionDenomination": {
                                                                "type": "simpleType",
                                                                "description": "The type of units used to express a commission.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionAmount": {
                                                                "type": "simpleType",
                                                                "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionPerTrade": {
                                                                "type": "simpleType",
                                                                "description": "The total commission per trade.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "FX Rates that have been used to convert commissions to a single currency.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "determinationMethod": {
                                                        "type": "complexType",
                                                        "description": "Specifies the method according to which an amount or a date is determined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "grossPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, before commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "netPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, net of commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterestPrice": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "fxConversion": {
                                                        "type": "complexType",
                                                        "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "amountRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "Specifies a currency conversion rate.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "amountRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "cleanNetPrice": {
                                                        "type": "simpleType",
                                                        "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quotationCharacteristics": {
                                                        "type": "complexType",
                                                        "description": "Allows information about how the price was quoted to be provided.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "measureType": {
                                                                "type": "complexType",
                                                                "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quoteUnits": {
                                                                "type": "complexType",
                                                                "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "side": {
                                                                "type": "simpleType",
                                                                "description": "The side (bid/mid/ask) of the measure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currencyType": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "timing": {
                                                                "type": "complexType",
                                                                "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "A city or other business center.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "exchangeId": {
                                                                "type": "complexType",
                                                                "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "informationSource": {
                                                                "type": "complexType",
                                                                "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "rateSource": {
                                                                        "type": "complexType",
                                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePage": {
                                                                        "type": "complexType",
                                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePageHeading": {
                                                                        "type": "simpleType",
                                                                        "description": "The heading for the rate source on a given rate source page.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "pricingModel": {
                                                                "type": "complexType",
                                                                "description": ".",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "time": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was observed or when a calculated value was generated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "valuationDate": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was computed.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "expiryTime": {
                                                                "type": "simpleType",
                                                                "description": "When does the quote cease to be valid.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "cashflowType": {
                                                                "type": "complexType",
                                                                "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerNotional": {
                                                "type": "complexType",
                                                "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerSpread": {
                                                "type": "complexType",
                                                "description": "Provides a link to the spread schedule used for this underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "couponPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming coupon payment.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerFinancing": {
                                                "type": "complexType",
                                                "description": "Financing terms associated with this underlyer",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "legIdentifier": {
                                                        "type": "complexType",
                                                        "description": "Version aware identification of this leg.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "legId": {
                                                                "type": "complexType",
                                                                "description": "Identity of this leg.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "version": {
                                                                "type": "simpleType",
                                                                "description": "The version number",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "effectiveDate": {
                                                                "type": "complexType",
                                                                "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "payerPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "payerAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "effectiveDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "terminationDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "fixedRate": {
                                                        "type": "simpleType",
                                                        "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "spreadSchedule": {
                                                        "type": "complexType",
                                                        "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "initialValue": {
                                                                "type": "simpleType",
                                                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "step": {
                                                                "type": "complexType",
                                                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "stepDate": {
                                                                        "type": "simpleType",
                                                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "stepValue": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "type": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerLoanRate": {
                                                "type": "complexType",
                                                "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lossOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then loss of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "maximumStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "increasedCostOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then increased cost of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "initialStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerCollateral": {
                                                "type": "complexType",
                                                "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "independentAmount": {
                                                        "type": "complexType",
                                                        "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "payerPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "payerAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "paymentDetail": {
                                                                "type": "complexType",
                                                                "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "paymentDate": {
                                                                        "type": "complexType",
                                                                        "description": "Payment date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "adjustableDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "unadjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date subject to adjustment.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dateAdjustments": {
                                                                                        "type": "complexType",
                                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessDayConvention": {
                                                                                                "type": "simpleType",
                                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCentersReference": {
                                                                                                "type": "complexType",
                                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCenters": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessCenter": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "relativeDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "periodMultiplier": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "period": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dayType": {
                                                                                        "type": "simpleType",
                                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "dateRelativeTo": {
                                                                                        "type": "complexType",
                                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentAmount": {
                                                                        "type": "complexType",
                                                                        "description": "A fixed payment amount.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentRule": {
                                                                        "type": "complexType",
                                                                        "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "basketDivisor": {
                                        "type": "simpleType",
                                        "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketVersion": {
                                        "type": "simpleType",
                                        "description": "Basket version, used to record changes in basket composition or weights",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketName": {
                                        "type": "complexType",
                                        "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketId": {
                                        "type": "complexType",
                                        "description": "A CDS basket identifier",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketCurrency": {
                                        "type": "complexType",
                                        "description": "Specifies the currency for this basket.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "maximumNumberOfDaysOfDisruption": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. If omitted , the number of days specified in Section 7.6(a) of\n                        the Definitions will apply.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceMaterialityPercentage": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. To be used where a price materiality percentage applies to the\n                        \"Price Source Disruption\" event and this event has been specified by setting marketDisruption to\n                        true or including it in additionalMarketDisruptionEvent. A value expressed in percentage units\n                        i.e. 5 means 5%.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumFuturesContracts": {
                        "type": "simpleType",
                        "description": "1993 Commodity Definitions only. Specifies the Mimum Futures Contracts level that dictates\n                        whether or not a \"De Minimis Trading\" event has occurred. Only relevant if 'De Minimis Trading'\n                        has been specified in marketDisruptionEvent or additionalMarketDisruptionEvent.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementDisruption": {
                "type": "simpleType",
                "description": "Describes contract terms related to the consequences of Bullion Settlement Disruption Events.",
                "python_type": "unknownType",
                "children": {}
            },
            "rounding": {
                "type": "complexType",
                "description": "Rounding direction and precision for amounts.",
                "python_type": "unknownType",
                "children": {
                    "roundingDirection": {
                        "type": "simpleType",
                        "description": "Specifies the rounding direction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "precision": {
                        "type": "simpleType",
                        "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "commodityDigitalOption": {
        "type": "complexType",
        "description": "Defines a commodity digital option product.",
        "python_type": "unknownType",
        "children": {
            "primaryAssetClass": {
                "type": "complexType",
                "description": "A classification of the most important risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "secondaryAssetClass": {
                "type": "complexType",
                "description": "A classification of additional risk classes of the trade, if any. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productType": {
                "type": "complexType",
                "description": "A classification of the type of product. FpML defines a simple product categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productId": {
                "type": "complexType",
                "description": "A product reference identifier. The product ID is an identifier that describes the key economic characteristics of the trade type, with the exception of concepts such as size (notional, quantity, number of units) and price (fixed rate, strike, etc.) that are negotiated for each transaction. It can be used to hold identifiers such as the \"UPI\" (universal product identifier) required by certain regulatory reporting rules. It can also be used to hold identifiers of benchmark products or product temnplates used by certain trading systems or facilities. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
                "python_type": "unknownType",
                "children": {}
            },
            "assetClass": {
                "type": "complexType",
                "description": "A classification of the risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "buyerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that buys this instrument, ie. pays for this instrument and receives the rights defined by it. See 2000 ISDA definitions Article 11.1 (b). In the case of FRAs this the fixed rate payer.",
                "python_type": "unknownType",
                "children": {}
            },
            "buyerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that buys this instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "sellerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that sells (\"writes\") this instrument, i.e. that grants the rights defined by this instrument and in return receives a payment for it. See 2000 ISDA definitions Article 11.1 (a). In the case of FRAs this is the floating rate payer.",
                "python_type": "unknownType",
                "children": {}
            },
            "sellerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that sells this instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "optionType": {
                "type": "simpleType",
                "description": "The type of option transaction.",
                "python_type": "unknownType",
                "children": {}
            },
            "commodity": {
                "type": "complexType",
                "description": "Specifies the underlying instrument. Usual content is an ISDA Commodity Reference Price\n                                Name. The 'commodity' underlyer component is specified using a reference to the\n                                'commodity' asset (see description above at the Commodity Underlyer section).",
                "python_type": "unknownType",
                "children": {
                    "instrumentId": {
                        "type": "complexType",
                        "description": "Identification of the underlying asset, using public and/or private identifiers.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "instrumentType": {
                        "type": "complexType",
                        "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "description": {
                        "type": "simpleType",
                        "description": "Long name of the underlying asset.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodityBase": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodityDetails": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "unit": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "exchangeId": {
                        "type": "complexType",
                        "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "publication": {
                        "type": "complexType",
                        "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                        "python_type": "unknownType",
                        "children": {
                            "rateSource": {
                                "type": "complexType",
                                "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePage": {
                                "type": "complexType",
                                "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePageHeading": {
                                "type": "simpleType",
                                "description": "The heading for the rate source on a given rate source page or screen.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "specifiedPrice": {
                        "type": "simpleType",
                        "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryDates": {
                        "type": "simpleType",
                        "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryNearby": {
                        "type": "complexType",
                        "description": "A container for the parametric representation of nearby contracts.",
                        "python_type": "unknownType",
                        "children": {
                            "deliveryNearbyMultiplier": {
                                "type": "simpleType",
                                "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryNearbyType": {
                                "type": "simpleType",
                                "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDate": {
                        "type": "complexType",
                        "description": "The Delivery Date is a fixed, single day.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDateYearMonth": {
                        "type": "simpleType",
                        "description": "The Delivery Date is a fixed, single month.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryDateRollConvention": {
                        "type": "complexType",
                        "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDateExpirationConvention": {
                        "type": "complexType",
                        "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "multiplier": {
                        "type": "simpleType",
                        "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "effectiveDate": {
                "type": "complexType",
                "description": "The effective date of the Commodity Option Transaction. Note that the Termination/Expiration\n                        Date should be specified in expirationDate within the CommodityAmericanExercise type or the\n                        CommodityEuropeanExercise type, as applicable.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "terminationDate": {
                "type": "complexType",
                "description": "Specifies the termination date of the Commodity Option Transaction. In some confirmations this\n                        will be indicated as the second date in \"Option Term\" or \"Term\". Note: If provided,\n                        terminationDate should not be before specified expirationDate within the\n                        CommodityAmericanExercise type or the CommodityEuropeanExercise type.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "calculationPeriodsSchedule": {
                "type": "complexType",
                "description": "A parametric representation of the Calculation Periods of the Commodity Option Transaction.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "balanceOfFirstPeriod": {
                        "type": "simpleType",
                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriods": {
                "type": "complexType",
                "description": "An absolute representation of the Calculation Period start dates of the Commodity Option\n                            Transaction.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "pricingDates": {
                "type": "complexType",
                "description": "The dates on which the option will price.",
                "python_type": "unknownType",
                "children": {
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "lag": {
                        "type": "complexType",
                        "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                        "python_type": "unknownType",
                        "children": {
                            "lagDuration": {
                                "type": "complexType",
                                "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "firstObservationDateOffset": {
                                "type": "complexType",
                                "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "dayType": {
                        "type": "simpleType",
                        "description": "The type of day on which pricing occurs.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayDistribution": {
                        "type": "complexType",
                        "description": "The method by which the pricing days are distributed across the pricing period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayCount": {
                        "type": "simpleType",
                        "description": "The number of days over which pricing should take place.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayOfWeek": {
                        "type": "simpleType",
                        "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayNumber": {
                        "type": "simpleType",
                        "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessDayConvention": {
                        "type": "simpleType",
                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCalendar": {
                        "type": "complexType",
                        "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calendarSource": {
                        "type": "simpleType",
                        "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "settlementPeriods": {
                        "type": "complexType",
                        "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                        "python_type": "unknownType",
                        "children": {
                            "duration": {
                                "type": "simpleType",
                                "description": "The length of each Settlement Period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "applicableDay": {
                                "type": "simpleType",
                                "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "startTime": {
                                "type": "complexType",
                                "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "time": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "hourMinuteTime": {
                                                "type": "simpleType",
                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "location": {
                                                "type": "complexType",
                                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "offset": {
                                        "type": "complexType",
                                        "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "endTime": {
                                "type": "complexType",
                                "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                "python_type": "unknownType",
                                "children": {
                                    "time": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "hourMinuteTime": {
                                                "type": "simpleType",
                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "location": {
                                                "type": "complexType",
                                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "offset": {
                                        "type": "complexType",
                                        "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "timeDuration": {
                                "type": "simpleType",
                                "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "excludeHolidays": {
                                "type": "complexType",
                                "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "includeHolidays": {
                                "type": "complexType",
                                "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "settlementPeriodsReference": {
                        "type": "complexType",
                        "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "pricingDates": {
                        "type": "complexType",
                        "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "averagingMethod": {
                "type": "simpleType",
                "description": "The Method of Averaging if there is more than one Pricing Date.",
                "python_type": "unknownType",
                "children": {}
            },
            "digital": {
                "type": "complexType",
                "description": "The barrier and cash payout features of the digital option.",
                "python_type": "unknownType",
                "children": {
                    "trigger": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "levelQuantity": {
                                "type": "simpleType",
                                "description": "The amount used the specify the barrier in terms of an quantity of commodity or a change\n                                in the quantity of commodity. In confirmations this is often described as the \"Strike\n                                Volume\" or \"Strike Quantity\".",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "levelUnit": {
                                "type": "complexType",
                                "description": "The units (e.g. BCF) used to specify the barrier in terms of an quantity of commodity or\n                                change in the quantity of commodity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "levelPercentage": {
                                "type": "simpleType",
                                "description": "A barrier expressed as a percentage of notional quantity or commodity price level. A value\n                            expressed in percentage units i.e. 5 means 5%.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "levelPrice": {
                                "type": "complexType",
                                "description": "A barrier expressed as a price level.",
                                "python_type": "unknownType",
                                "children": {
                                    "price": {
                                        "type": "simpleType",
                                        "description": "The Fixed Price.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "priceCurrency": {
                                        "type": "complexType",
                                        "description": "The currency used to specify the fixed price or level in terms of a price per unit of commodity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "priceUnit": {
                                        "type": "complexType",
                                        "description": "The unit of measure used to specify the fixed price or level in terms of a price per unit of\n                        commodity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "triggerType": {
                                "type": "simpleType",
                                "description": "For barrier options: the specification of how an option will trigger or expire based on the\n                        position of the spot rate relative to the trigger level. For trades with selectable notionals:\n                        the specification of the conditions where one of the alternative notional values would apply.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "featurePaymentAmount": {
                        "type": "complexType",
                        "description": "The cash payment that is made when the digital barrier is breached.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The positive monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "notionalAmount": {
                "type": "complexType",
                "description": "Volume contracted when volume is specified as a currency-denominated amount.",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "notionalQuantity": {
                "type": "complexType",
                "description": "The volume contracted when the volume is specified as a quantity of commodity.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantityFrequency": {
                        "type": "complexType",
                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "totalNotionalQuantity": {
                "type": "simpleType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "exercise": {
                "type": "complexType",
                "description": "The parameters for defining how the commodity option can be exercised and how it is\n                                settled.",
                "python_type": "unknownType",
                "children": {
                    "americanExercise": {
                        "type": "complexType",
                        "description": "The parameters for defining the expiration date for an American option.",
                        "python_type": "unknownType",
                        "children": {
                            "exercisePeriod": {
                                "type": "complexType",
                                "description": "Describes the American exercise periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "commencementDate": {
                                        "type": "complexType",
                                        "description": "The first day of the exercise period for an American style option.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "adjustableDate": {
                                                "type": "complexType",
                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "relativeDate": {
                                                "type": "complexType",
                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "dateRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expirationDate": {
                                        "type": "complexType",
                                        "description": "The last day within an exercise period for an American style option. For a European style option\n                        it is the only day within the exercise period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "adjustableDate": {
                                                "type": "complexType",
                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "relativeDate": {
                                                "type": "complexType",
                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "dateRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "exerciseFrequency": {
                                "type": "complexType",
                                "description": "The exercise frequency for the strip.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "latestExerciseTime": {
                                "type": "complexType",
                                "description": "For a Bermuda or American style option, the latest time on an exercise business day\n                                    (excluding the expiration date) within the exercise period that notice can be given\n                                    by the buyer to the seller or seller's agent. Notice of exercise given after this\n                                    time will be deemed to have been given on the next exercise business day.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "latestExerciseTimeDetermination": {
                                "type": "complexType",
                                "description": "Latest exercise time determination method.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "expirationTime": {
                                "type": "complexType",
                                "description": "The specific time of day on which the option expires.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "multipleExercise": {
                                "type": "complexType",
                                "description": "The presence of this element indicates that the option may be partially exercised. It is\n                                not applicable to European or Asian options.",
                                "python_type": "unknownType",
                                "children": {
                                    "integralMultipleQuantity": {
                                        "type": "complexType",
                                        "description": "The integral multiple quantity defines a lower limit of the Notional Quantity that can be\n                        exercised and also defines a unit multiple of the Notional Quantity that can be exercised, i.e.\n                        only integer multiples of this Notional Quantity can be exercised.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "minimumNotionalQuantity": {
                                        "type": "complexType",
                                        "description": "The minimum Notional Quantity that can be exercised on a given Exercise Date. See\n                        multipleExercise.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "europeanExercise": {
                        "type": "complexType",
                        "description": "The parameters for defining the expiration date and time for a European or Asian style\n                            option. For an Asian style option the expiration date is equivalent to the termination date.",
                        "python_type": "unknownType",
                        "children": {
                            "expirationDate": {
                                "type": "complexType",
                                "description": "The last day within an exercise period for an American style option. For a European\n                                    style option it is the only day within the exercise period. For an averaging option\n                                    this is equivalent to the Termination Date.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDate": {
                                        "type": "complexType",
                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDate": {
                                        "type": "complexType",
                                        "description": "A date specified as an offset to another date (the anchor date).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "exerciseFrequency": {
                                "type": "complexType",
                                "description": "The exercise frequency for the strip.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "expirationTime": {
                                "type": "complexType",
                                "description": "The specific time of day on which the option expires.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "automaticExercise": {
                        "type": "simpleType",
                        "description": "Specifies whether or not Automatic Exercise applies to a Commodity Option Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "writtenConfirmation": {
                        "type": "simpleType",
                        "description": "Specifies whether or not Written Confirmation applies to a Commodity Option Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "relativePaymentDates": {
                        "type": "complexType",
                        "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                        "python_type": "unknownType",
                        "children": {
                            "payRelativeTo": {
                                "type": "simpleType",
                                "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payRelativeToEvent": {
                                "type": "complexType",
                                "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "paymentDaysOffset": {
                                "type": "complexType",
                                "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "paymentDates": {
                        "type": "complexType",
                        "description": "Dates on which payments will be made.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDates": {
                                "type": "complexType",
                                "description": "A series of adjustable dates",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A series of dates specified as a repeating sequence from a base date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "masterAgreementPaymentDates": {
                        "type": "simpleType",
                        "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "premium": {
                "type": "complexType",
                "description": "The option premium payable by the buyer to the seller.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "paymentDate": {
                        "type": "complexType",
                        "description": "The payment date, which can be expressed as either an adjustable or relative date.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDate": {
                                "type": "complexType",
                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A date specified as an offset to another date (the anchor date).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "paymentAmount": {
                        "type": "complexType",
                        "description": "Non negative payment amount.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "premiumPerUnit": {
                        "type": "complexType",
                        "description": "The currency amount of premium to be paid per Unit of the Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "commonPricing": {
                "type": "simpleType",
                "description": "If Common Pricing is elected (\u201ctrue\u201d) for a Transaction with referencing more than\n                        one Commodity Reference Price then no date will be a Pricing Date unless such a date is a day on\n                        which all Commodity Reference Prices are scheduled to be published.",
                "python_type": "unknownType",
                "children": {}
            },
            "marketDisruption": {
                "type": "complexType",
                "description": "Contains contract terms related to triggers and responses to market disruptions as defined in\n                        the 1993 or 2005 Commodity Definitions.",
                "python_type": "unknownType",
                "children": {
                    "marketDisruptionEvents": {
                        "type": "simpleType",
                        "description": "If Market disruption Events are stated to be Applicable then the default Market\n                                Disruption Events of Section 7.4(d)(i) of the ISDA Commodity Definitions shall apply\n                                unless specific Market Disruption Events are stated hereunder, in which case these shall\n                                override the ISDA defaults. If Market Disruption Events are stated to be Not Applicable,\n                                Market Disruption Events are not applicable to the trade at all. It is also possible to\n                                reference the Market Disruption Events set out in the relevant Master Agreement\n                                governing the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "additionalMarketDisruptionEvent": {
                        "type": "complexType",
                        "description": "To be used when marketDisruptionEvents is set to \"Applicable\" and additional market\n                                disruption events(s) apply to the default market disruption events of Section 7.4(d)(i)\n                                of the ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "marketDisruptionEvent": {
                        "type": "complexType",
                        "description": "Market disruption event(s) that apply. Note that these should only be specified if the\n                            default market disruption events of Section 7.4(d)(i) of the ISDA Commodity Definitions are\n                            to be overridden.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallbacks": {
                        "type": "simpleType",
                        "description": "To be used where disruption fallbacks are set out in the relevant Master Agreement governing\n                            the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallback": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "fallback": {
                                "type": "complexType",
                                "description": "Disruption fallback that applies to the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "sequence": {
                                "type": "simpleType",
                                "description": "Sequence in which the reference to the disruption fallback should be applied.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "fallbackReferencePrice": {
                        "type": "complexType",
                        "description": "A fallback commodity reference price for use when relying on Disruption Fallbacks in Section\n                        7.5(d)(i) of the ISDA Commodity Definitions or have selected \"Fallback Reference Price\" as a\n                        disruptionFallback.",
                        "python_type": "unknownType",
                        "children": {
                            "singleUnderlyer": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has only one asset component.",
                                "python_type": "unknownType",
                                "children": {
                                    "underlyingAsset": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dividendPayout": {
                                        "type": "complexType",
                                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "dividendPayoutRatio": {
                                                "type": "simpleType",
                                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioNonCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutConditions": {
                                                "type": "simpleType",
                                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming dividend payment or payments.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "couponPayment": {
                                        "type": "complexType",
                                        "description": "The next upcoming coupon payment.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "paymentDate": {
                                                "type": "simpleType",
                                                "description": "The date that the dividend or coupon is due.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "complexType",
                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "accruedInterest": {
                                                "type": "complexType",
                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averageDailyTradingVolume": {
                                        "type": "complexType",
                                        "description": "The average amount of individual securities traded in a day or over a specified amount of time.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "limitationPercentage": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation percentage in Average Daily trading volume. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "limitationPeriod": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation period for Average Daily trading volume in number of days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "depositoryReceipt": {
                                        "type": "simpleType",
                                        "description": "A Depository Receipt is a negotiable certificate issued by a trust company or security depository. This element is used to represent whether a Depository Receipt is applicable or not to the underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "basket": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has multiple asset components.",
                                "python_type": "unknownType",
                                "children": {
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketConstituent": {
                                        "type": "complexType",
                                        "description": "Describes each of the components of the basket.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "payerPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "payerAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "underlyingAsset": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "constituentWeight": {
                                                "type": "complexType",
                                                "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "openUnits": {
                                                        "type": "simpleType",
                                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketPercentage": {
                                                        "type": "simpleType",
                                                        "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketAmount": {
                                                        "type": "complexType",
                                                        "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dividendPayout": {
                                                "type": "complexType",
                                                "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "dividendPayoutRatio": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioNonCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutConditions": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming dividend payment or payments.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerPrice": {
                                                "type": "complexType",
                                                "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "commission": {
                                                        "type": "complexType",
                                                        "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "commissionDenomination": {
                                                                "type": "simpleType",
                                                                "description": "The type of units used to express a commission.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionAmount": {
                                                                "type": "simpleType",
                                                                "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionPerTrade": {
                                                                "type": "simpleType",
                                                                "description": "The total commission per trade.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "FX Rates that have been used to convert commissions to a single currency.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "determinationMethod": {
                                                        "type": "complexType",
                                                        "description": "Specifies the method according to which an amount or a date is determined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "grossPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, before commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "netPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, net of commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterestPrice": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "fxConversion": {
                                                        "type": "complexType",
                                                        "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "amountRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "Specifies a currency conversion rate.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "amountRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "cleanNetPrice": {
                                                        "type": "simpleType",
                                                        "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quotationCharacteristics": {
                                                        "type": "complexType",
                                                        "description": "Allows information about how the price was quoted to be provided.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "measureType": {
                                                                "type": "complexType",
                                                                "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quoteUnits": {
                                                                "type": "complexType",
                                                                "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "side": {
                                                                "type": "simpleType",
                                                                "description": "The side (bid/mid/ask) of the measure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currencyType": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "timing": {
                                                                "type": "complexType",
                                                                "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "A city or other business center.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "exchangeId": {
                                                                "type": "complexType",
                                                                "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "informationSource": {
                                                                "type": "complexType",
                                                                "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "rateSource": {
                                                                        "type": "complexType",
                                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePage": {
                                                                        "type": "complexType",
                                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePageHeading": {
                                                                        "type": "simpleType",
                                                                        "description": "The heading for the rate source on a given rate source page.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "pricingModel": {
                                                                "type": "complexType",
                                                                "description": ".",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "time": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was observed or when a calculated value was generated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "valuationDate": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was computed.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "expiryTime": {
                                                                "type": "simpleType",
                                                                "description": "When does the quote cease to be valid.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "cashflowType": {
                                                                "type": "complexType",
                                                                "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerNotional": {
                                                "type": "complexType",
                                                "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerSpread": {
                                                "type": "complexType",
                                                "description": "Provides a link to the spread schedule used for this underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "couponPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming coupon payment.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerFinancing": {
                                                "type": "complexType",
                                                "description": "Financing terms associated with this underlyer",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "legIdentifier": {
                                                        "type": "complexType",
                                                        "description": "Version aware identification of this leg.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "legId": {
                                                                "type": "complexType",
                                                                "description": "Identity of this leg.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "version": {
                                                                "type": "simpleType",
                                                                "description": "The version number",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "effectiveDate": {
                                                                "type": "complexType",
                                                                "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "payerPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "payerAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "effectiveDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "terminationDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "fixedRate": {
                                                        "type": "simpleType",
                                                        "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "spreadSchedule": {
                                                        "type": "complexType",
                                                        "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "initialValue": {
                                                                "type": "simpleType",
                                                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "step": {
                                                                "type": "complexType",
                                                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "stepDate": {
                                                                        "type": "simpleType",
                                                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "stepValue": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "type": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerLoanRate": {
                                                "type": "complexType",
                                                "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lossOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then loss of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "maximumStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "increasedCostOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then increased cost of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "initialStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerCollateral": {
                                                "type": "complexType",
                                                "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "independentAmount": {
                                                        "type": "complexType",
                                                        "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "payerPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "payerAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "paymentDetail": {
                                                                "type": "complexType",
                                                                "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "paymentDate": {
                                                                        "type": "complexType",
                                                                        "description": "Payment date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "adjustableDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "unadjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date subject to adjustment.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dateAdjustments": {
                                                                                        "type": "complexType",
                                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessDayConvention": {
                                                                                                "type": "simpleType",
                                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCentersReference": {
                                                                                                "type": "complexType",
                                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCenters": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessCenter": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "relativeDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "periodMultiplier": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "period": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dayType": {
                                                                                        "type": "simpleType",
                                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "dateRelativeTo": {
                                                                                        "type": "complexType",
                                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentAmount": {
                                                                        "type": "complexType",
                                                                        "description": "A fixed payment amount.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentRule": {
                                                                        "type": "complexType",
                                                                        "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "basketDivisor": {
                                        "type": "simpleType",
                                        "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketVersion": {
                                        "type": "simpleType",
                                        "description": "Basket version, used to record changes in basket composition or weights",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketName": {
                                        "type": "complexType",
                                        "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketId": {
                                        "type": "complexType",
                                        "description": "A CDS basket identifier",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketCurrency": {
                                        "type": "complexType",
                                        "description": "Specifies the currency for this basket.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "maximumNumberOfDaysOfDisruption": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. If omitted , the number of days specified in Section 7.6(a) of\n                        the Definitions will apply.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceMaterialityPercentage": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. To be used where a price materiality percentage applies to the\n                        \"Price Source Disruption\" event and this event has been specified by setting marketDisruption to\n                        true or including it in additionalMarketDisruptionEvent. A value expressed in percentage units\n                        i.e. 5 means 5%.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumFuturesContracts": {
                        "type": "simpleType",
                        "description": "1993 Commodity Definitions only. Specifies the Mimum Futures Contracts level that dictates\n                        whether or not a \"De Minimis Trading\" event has occurred. Only relevant if 'De Minimis Trading'\n                        has been specified in marketDisruptionEvent or additionalMarketDisruptionEvent.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementDisruption": {
                "type": "simpleType",
                "description": "Describes contract terms related to the consequences of Bullion Settlement Disruption Events.",
                "python_type": "unknownType",
                "children": {}
            },
            "rounding": {
                "type": "complexType",
                "description": "Rounding direction and precision for amounts.",
                "python_type": "unknownType",
                "children": {
                    "roundingDirection": {
                        "type": "simpleType",
                        "description": "Specifies the rounding direction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "precision": {
                        "type": "simpleType",
                        "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "commodityForward": {
        "type": "complexType",
        "description": "Defines a commodity forward product.",
        "python_type": "unknownType",
        "children": {
            "primaryAssetClass": {
                "type": "complexType",
                "description": "A classification of the most important risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "secondaryAssetClass": {
                "type": "complexType",
                "description": "A classification of additional risk classes of the trade, if any. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productType": {
                "type": "complexType",
                "description": "A classification of the type of product. FpML defines a simple product categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productId": {
                "type": "complexType",
                "description": "A product reference identifier. The product ID is an identifier that describes the key economic characteristics of the trade type, with the exception of concepts such as size (notional, quantity, number of units) and price (fixed rate, strike, etc.) that are negotiated for each transaction. It can be used to hold identifiers such as the \"UPI\" (universal product identifier) required by certain regulatory reporting rules. It can also be used to hold identifiers of benchmark products or product temnplates used by certain trading systems or facilities. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
                "python_type": "unknownType",
                "children": {}
            },
            "assetClass": {
                "type": "complexType",
                "description": "A classification of the risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "valueDate": {
                "type": "complexType",
                "description": "Specifies the value date of the Commodity Forward Transaction. This is the day on which\n                                both the cash and the physical commodity settle.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "fixedLeg": {
                "type": "complexType",
                "description": "The fixed leg of a Commodity Forward Transaction.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "fixedPrice": {
                        "type": "complexType",
                        "description": "Fixed price on which fixed payments are based.",
                        "python_type": "unknownType",
                        "children": {
                            "price": {
                                "type": "simpleType",
                                "description": "The Fixed Price.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "priceCurrency": {
                                "type": "complexType",
                                "description": "The currency used to specify the fixed price or level in terms of a price per unit of commodity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "priceUnit": {
                                "type": "complexType",
                                "description": "The unit of measure used to specify the fixed price or level in terms of a price per unit of\n                        commodity.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "totalPrice": {
                        "type": "complexType",
                        "description": "The total amount of the fixed payment for all units of the underlying commodity.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "quantityReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to a quantity defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "relativePaymentDates": {
                        "type": "complexType",
                        "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                        "python_type": "unknownType",
                        "children": {
                            "payRelativeTo": {
                                "type": "simpleType",
                                "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payRelativeToEvent": {
                                "type": "complexType",
                                "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "paymentDaysOffset": {
                                "type": "complexType",
                                "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "paymentDates": {
                        "type": "complexType",
                        "description": "Dates on which payments will be made.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDates": {
                                "type": "complexType",
                                "description": "A series of adjustable dates",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A series of dates specified as a repeating sequence from a base date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "masterAgreementPaymentDates": {
                        "type": "simpleType",
                        "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "averagePriceLeg": {
                "type": "complexType",
                "description": "Specifies the calculated floating price leg of a Commodity Forward Transaction.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationDates": {
                        "type": "complexType",
                        "description": "The Calculation Period dates for this leg of the trade where the Calculation Periods are all one\n                        day long. Only dates explicitly included determine the Calculation Periods and there is a\n                        Calculation Period for each date specified. As such one-day Calculation Period are typical a\n                        physically-settled emissions or metals trades it is expected that this element will not be used\n                        in performance swaps.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriods": {
                        "type": "complexType",
                        "description": "The Calculation Period start dates for this leg of the swap. This type is only intended to be\n                        used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg,\n                        then the calculationPeriodsReference element should be used to point to the Calculation Periods\n                        on that leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsSchedule": {
                        "type": "complexType",
                        "description": "The Calculation Periods for this leg of the swap. This type is only intended to be used if the\n                        Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the\n                        calculationPeriodsReference element should be used to point to the Calculation Periods on the\n                        other leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "balanceOfFirstPeriod": {
                                "type": "simpleType",
                                "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodity": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "instrumentId": {
                                "type": "complexType",
                                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "instrumentType": {
                                "type": "complexType",
                                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "description": {
                                "type": "simpleType",
                                "description": "Long name of the underlying asset.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "commodityBase": {
                                "type": "complexType",
                                "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "commodityDetails": {
                                "type": "complexType",
                                "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "unit": {
                                "type": "complexType",
                                "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "exchangeId": {
                                "type": "complexType",
                                "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "publication": {
                                "type": "complexType",
                                "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page or screen.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "specifiedPrice": {
                                "type": "simpleType",
                                "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryDates": {
                                "type": "simpleType",
                                "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryNearby": {
                                "type": "complexType",
                                "description": "A container for the parametric representation of nearby contracts.",
                                "python_type": "unknownType",
                                "children": {
                                    "deliveryNearbyMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryNearbyType": {
                                        "type": "simpleType",
                                        "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryDate": {
                                "type": "complexType",
                                "description": "The Delivery Date is a fixed, single day.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryDateYearMonth": {
                                "type": "simpleType",
                                "description": "The Delivery Date is a fixed, single month.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryDateRollConvention": {
                                "type": "complexType",
                                "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryDateExpirationConvention": {
                                "type": "complexType",
                                "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "multiplier": {
                                "type": "simpleType",
                                "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "quantityReference": {
                        "type": "complexType",
                        "description": "A pointer to a specification of quantity defined elsewhere.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "pricingStartDate": {
                        "type": "complexType",
                        "description": "Defines the Start of the Pricing period. PricingStartDate is optional when discrete\n                                pricingDates are supplied and is not recommended to be included. Should they coexist,\n                                pricingStartDate is expected to be the same as the earliest pricing date or earlier for\n                                a Term deal as the discrete dates will take precedence.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculation": {
                        "type": "complexType",
                        "description": "Captures details relevant to the calculation of the floating price.",
                        "python_type": "unknownType",
                        "children": {
                            "pricingDates": {
                                "type": "complexType",
                                "description": "Commodity Pricing Dates.",
                                "python_type": "unknownType",
                                "children": {
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "lag": {
                                        "type": "complexType",
                                        "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "lagDuration": {
                                                "type": "complexType",
                                                "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "firstObservationDateOffset": {
                                                "type": "complexType",
                                                "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "The type of day on which pricing occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayDistribution": {
                                        "type": "complexType",
                                        "description": "The method by which the pricing days are distributed across the pricing period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayCount": {
                                        "type": "simpleType",
                                        "description": "The number of days over which pricing should take place.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayOfWeek": {
                                        "type": "simpleType",
                                        "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayNumber": {
                                        "type": "simpleType",
                                        "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCalendar": {
                                        "type": "complexType",
                                        "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calendarSource": {
                                        "type": "simpleType",
                                        "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "settlementPeriods": {
                                        "type": "complexType",
                                        "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "duration": {
                                                "type": "simpleType",
                                                "description": "The length of each Settlement Period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "applicableDay": {
                                                "type": "simpleType",
                                                "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "startTime": {
                                                "type": "complexType",
                                                "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "time": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "hourMinuteTime": {
                                                                "type": "simpleType",
                                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "location": {
                                                                "type": "complexType",
                                                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "complexType",
                                                        "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "endTime": {
                                                "type": "complexType",
                                                "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "time": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "hourMinuteTime": {
                                                                "type": "simpleType",
                                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "location": {
                                                                "type": "complexType",
                                                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "offset": {
                                                        "type": "complexType",
                                                        "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "timeDuration": {
                                                "type": "simpleType",
                                                "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "excludeHolidays": {
                                                "type": "complexType",
                                                "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "includeHolidays": {
                                                "type": "complexType",
                                                "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "settlementPeriodsReference": {
                                        "type": "complexType",
                                        "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "pricingDates": {
                                        "type": "complexType",
                                        "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "averagingMethod": {
                                "type": "simpleType",
                                "description": "The parties may specify a Method of Averaging where more than one pricing Dates is being\n                        specified as being applicable.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "conversionFactor": {
                                "type": "simpleType",
                                "description": "If the Notional Quantity is specified in units that do not match the units in which the\n                        Commodity Reference Price is quoted, the scaling or conversion factor used to convert the\n                        Commodity Reference Price units into the Notional Quantity units should be stated here. If there\n                        is no conversion, this element is not intended to be used.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rounding": {
                                "type": "complexType",
                                "description": "Rounding direction and precision for price values.",
                                "python_type": "unknownType",
                                "children": {
                                    "roundingDirection": {
                                        "type": "simpleType",
                                        "description": "Specifies the rounding direction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "precision": {
                                        "type": "simpleType",
                                        "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "spread": {
                                "type": "complexType",
                                "description": "The spread over or under the Commodity Reference Price for this leg of the trade.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "spreadConversionFactor": {
                                        "type": "simpleType",
                                        "description": "spreadConversionFactor should be used when the unit of measure of the Commodity\n                                Reference Price and the unit of measure in which the spread is quoted are different. The\n                                value of spreadConversionFactor is the number of units of measure in which the spread is\n                                quoted per unit of measure of the Commodity Reference Price.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "spreadUnit": {
                                        "type": "complexType",
                                        "description": "spreadUnit should be used when the unit of measure of the Commodity Reference Price and\n                                the unit of measure in which the spread is quoted are different. The value of spreadUnit\n                                is the unit of measure in which the spread is quoted.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "spreadSchedule": {
                                "type": "complexType",
                                "description": "The spread over or under the Commodity Reference Price for this leg of the trade for each\n                            Calculation Period.",
                                "python_type": "unknownType",
                                "children": {
                                    "spreadStep": {
                                        "type": "complexType",
                                        "description": "The spread per Calculation Period. There must be a spread step specified for each Calculation\n                        Period, regardless of whether the spread changes or remains the same between periods.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which an amount is denominated.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "simpleType",
                                                "description": "The monetary quantity in currency units.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "spreadConversionFactor": {
                                                "type": "simpleType",
                                                "description": "spreadConversionFactor should be used when the unit of measure of the Commodity\n                                Reference Price and the unit of measure in which the spread is quoted are different. The\n                                value of spreadConversionFactor is the number of units of measure in which the spread is\n                                quoted per unit of measure of the Commodity Reference Price.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "spreadUnit": {
                                                "type": "complexType",
                                                "description": "spreadUnit should be used when the unit of measure of the Commodity Reference Price and\n                                the unit of measure in which the spread is quoted are different. The value of spreadUnit\n                                is the unit of measure in which the spread is quoted.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "spreadPercentage": {
                                "type": "simpleType",
                                "description": "The spread percentage over or under the Commodity Reference Price for this leg of the trade.\n                            A value expressed in percentage units i.e. 5 means 5%.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "fx": {
                                "type": "complexType",
                                "description": "Defines how observations of FX prices are to be used to calculate a factor with which to convert\n                        the observed Commodity Reference Price to the Settlement Currency.",
                                "python_type": "unknownType",
                                "children": {
                                    "primaryRateSource": {
                                        "type": "complexType",
                                        "description": "The primary source for where the rate observation will occur. Will typically be either a page or\n                        a reference bank published rate.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "rateSource": {
                                                "type": "complexType",
                                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePage": {
                                                "type": "complexType",
                                                "description": "A specific page for the rate source for obtaining a market rate.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePageHeading": {
                                                "type": "simpleType",
                                                "description": "The heading for the rate source on a given rate source page.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "secondaryRateSource": {
                                        "type": "complexType",
                                        "description": "An alternative, or secondary, source for where the rate observation will occur. Will typically\n                        be either a page or a reference bank published rate.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "rateSource": {
                                                "type": "complexType",
                                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePage": {
                                                "type": "complexType",
                                                "description": "A specific page for the rate source for obtaining a market rate.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePageHeading": {
                                                "type": "simpleType",
                                                "description": "The heading for the rate source on a given rate source page.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "fxType": {
                                        "type": "complexType",
                                        "description": "A type to identify how the FX rate will be applied. This is intended to differentiate between\n                        the various methods for applying FX to the floating price such as a daily calculation, or\n                        averaging the FX and applying the average at the end of each CalculationPeriod.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "averagingMethod": {
                                        "type": "simpleType",
                                        "description": "The parties may specify a Method of Averaging when averaging of the FX rate is applicable.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "fixingTime": {
                                        "type": "complexType",
                                        "description": "The time at which the spot currency exchange rate will be observed. It is specified as a\n                                time in a specific business center, e.g. 11:00am London time.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "hourMinuteTime": {
                                                "type": "simpleType",
                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "fxObservationDates": {
                                        "type": "complexType",
                                        "description": "A list of the fx observation dates for a given Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "The type of day on which pricing occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayDistribution": {
                                        "type": "complexType",
                                        "description": "The method by which the pricing days are distributed across the pricing period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayCount": {
                                        "type": "simpleType",
                                        "description": "The number of days over which pricing should take place.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayOfWeek": {
                                        "type": "simpleType",
                                        "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayNumber": {
                                        "type": "simpleType",
                                        "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "lag": {
                                        "type": "complexType",
                                        "description": "The pricing period per calculation period if the pricing days do not wholly fall within the\n                        respective calculation period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "lagDuration": {
                                                "type": "complexType",
                                                "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "firstObservationDateOffset": {
                                                "type": "complexType",
                                                "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "lagReference": {
                                        "type": "complexType",
                                        "description": "Allows a lag to reference one already defined elsewhere in the trade.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "relativePaymentDates": {
                        "type": "complexType",
                        "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                        "python_type": "unknownType",
                        "children": {
                            "payRelativeTo": {
                                "type": "simpleType",
                                "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payRelativeToEvent": {
                                "type": "complexType",
                                "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "paymentDaysOffset": {
                                "type": "complexType",
                                "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "paymentDates": {
                        "type": "complexType",
                        "description": "Dates on which payments will be made.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDates": {
                                "type": "complexType",
                                "description": "A series of adjustable dates",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A series of dates specified as a repeating sequence from a base date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "masterAgreementPaymentDates": {
                        "type": "simpleType",
                        "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "commodityForwardLeg": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "commonPricing": {
                "type": "simpleType",
                "description": "If Common Pricing is elected (\u201ctrue\u201d) for a Transaction with referencing more than\n                        one Commodity Reference Price then no date will be a Pricing Date unless such a date is a day on\n                        which all Commodity Reference Prices are scheduled to be published.",
                "python_type": "unknownType",
                "children": {}
            },
            "marketDisruption": {
                "type": "complexType",
                "description": "Contains contract terms related to triggers and responses to market disruptions as defined in\n                        the 1993 or 2005 Commodity Definitions.",
                "python_type": "unknownType",
                "children": {
                    "marketDisruptionEvents": {
                        "type": "simpleType",
                        "description": "If Market disruption Events are stated to be Applicable then the default Market\n                                Disruption Events of Section 7.4(d)(i) of the ISDA Commodity Definitions shall apply\n                                unless specific Market Disruption Events are stated hereunder, in which case these shall\n                                override the ISDA defaults. If Market Disruption Events are stated to be Not Applicable,\n                                Market Disruption Events are not applicable to the trade at all. It is also possible to\n                                reference the Market Disruption Events set out in the relevant Master Agreement\n                                governing the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "additionalMarketDisruptionEvent": {
                        "type": "complexType",
                        "description": "To be used when marketDisruptionEvents is set to \"Applicable\" and additional market\n                                disruption events(s) apply to the default market disruption events of Section 7.4(d)(i)\n                                of the ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "marketDisruptionEvent": {
                        "type": "complexType",
                        "description": "Market disruption event(s) that apply. Note that these should only be specified if the\n                            default market disruption events of Section 7.4(d)(i) of the ISDA Commodity Definitions are\n                            to be overridden.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallbacks": {
                        "type": "simpleType",
                        "description": "To be used where disruption fallbacks are set out in the relevant Master Agreement governing\n                            the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallback": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "fallback": {
                                "type": "complexType",
                                "description": "Disruption fallback that applies to the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "sequence": {
                                "type": "simpleType",
                                "description": "Sequence in which the reference to the disruption fallback should be applied.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "fallbackReferencePrice": {
                        "type": "complexType",
                        "description": "A fallback commodity reference price for use when relying on Disruption Fallbacks in Section\n                        7.5(d)(i) of the ISDA Commodity Definitions or have selected \"Fallback Reference Price\" as a\n                        disruptionFallback.",
                        "python_type": "unknownType",
                        "children": {
                            "singleUnderlyer": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has only one asset component.",
                                "python_type": "unknownType",
                                "children": {
                                    "underlyingAsset": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dividendPayout": {
                                        "type": "complexType",
                                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "dividendPayoutRatio": {
                                                "type": "simpleType",
                                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioNonCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutConditions": {
                                                "type": "simpleType",
                                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming dividend payment or payments.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "couponPayment": {
                                        "type": "complexType",
                                        "description": "The next upcoming coupon payment.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "paymentDate": {
                                                "type": "simpleType",
                                                "description": "The date that the dividend or coupon is due.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "complexType",
                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "accruedInterest": {
                                                "type": "complexType",
                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averageDailyTradingVolume": {
                                        "type": "complexType",
                                        "description": "The average amount of individual securities traded in a day or over a specified amount of time.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "limitationPercentage": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation percentage in Average Daily trading volume. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "limitationPeriod": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation period for Average Daily trading volume in number of days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "depositoryReceipt": {
                                        "type": "simpleType",
                                        "description": "A Depository Receipt is a negotiable certificate issued by a trust company or security depository. This element is used to represent whether a Depository Receipt is applicable or not to the underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "basket": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has multiple asset components.",
                                "python_type": "unknownType",
                                "children": {
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketConstituent": {
                                        "type": "complexType",
                                        "description": "Describes each of the components of the basket.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "payerPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "payerAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "underlyingAsset": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "constituentWeight": {
                                                "type": "complexType",
                                                "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "openUnits": {
                                                        "type": "simpleType",
                                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketPercentage": {
                                                        "type": "simpleType",
                                                        "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketAmount": {
                                                        "type": "complexType",
                                                        "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dividendPayout": {
                                                "type": "complexType",
                                                "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "dividendPayoutRatio": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioNonCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutConditions": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming dividend payment or payments.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerPrice": {
                                                "type": "complexType",
                                                "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "commission": {
                                                        "type": "complexType",
                                                        "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "commissionDenomination": {
                                                                "type": "simpleType",
                                                                "description": "The type of units used to express a commission.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionAmount": {
                                                                "type": "simpleType",
                                                                "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionPerTrade": {
                                                                "type": "simpleType",
                                                                "description": "The total commission per trade.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "FX Rates that have been used to convert commissions to a single currency.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "determinationMethod": {
                                                        "type": "complexType",
                                                        "description": "Specifies the method according to which an amount or a date is determined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "grossPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, before commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "netPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, net of commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterestPrice": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "fxConversion": {
                                                        "type": "complexType",
                                                        "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "amountRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "Specifies a currency conversion rate.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "amountRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "cleanNetPrice": {
                                                        "type": "simpleType",
                                                        "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quotationCharacteristics": {
                                                        "type": "complexType",
                                                        "description": "Allows information about how the price was quoted to be provided.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "measureType": {
                                                                "type": "complexType",
                                                                "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quoteUnits": {
                                                                "type": "complexType",
                                                                "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "side": {
                                                                "type": "simpleType",
                                                                "description": "The side (bid/mid/ask) of the measure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currencyType": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "timing": {
                                                                "type": "complexType",
                                                                "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "A city or other business center.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "exchangeId": {
                                                                "type": "complexType",
                                                                "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "informationSource": {
                                                                "type": "complexType",
                                                                "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "rateSource": {
                                                                        "type": "complexType",
                                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePage": {
                                                                        "type": "complexType",
                                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePageHeading": {
                                                                        "type": "simpleType",
                                                                        "description": "The heading for the rate source on a given rate source page.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "pricingModel": {
                                                                "type": "complexType",
                                                                "description": ".",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "time": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was observed or when a calculated value was generated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "valuationDate": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was computed.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "expiryTime": {
                                                                "type": "simpleType",
                                                                "description": "When does the quote cease to be valid.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "cashflowType": {
                                                                "type": "complexType",
                                                                "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerNotional": {
                                                "type": "complexType",
                                                "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerSpread": {
                                                "type": "complexType",
                                                "description": "Provides a link to the spread schedule used for this underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "couponPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming coupon payment.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerFinancing": {
                                                "type": "complexType",
                                                "description": "Financing terms associated with this underlyer",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "legIdentifier": {
                                                        "type": "complexType",
                                                        "description": "Version aware identification of this leg.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "legId": {
                                                                "type": "complexType",
                                                                "description": "Identity of this leg.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "version": {
                                                                "type": "simpleType",
                                                                "description": "The version number",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "effectiveDate": {
                                                                "type": "complexType",
                                                                "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "payerPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "payerAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "effectiveDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "terminationDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "fixedRate": {
                                                        "type": "simpleType",
                                                        "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "spreadSchedule": {
                                                        "type": "complexType",
                                                        "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "initialValue": {
                                                                "type": "simpleType",
                                                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "step": {
                                                                "type": "complexType",
                                                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "stepDate": {
                                                                        "type": "simpleType",
                                                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "stepValue": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "type": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerLoanRate": {
                                                "type": "complexType",
                                                "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lossOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then loss of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "maximumStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "increasedCostOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then increased cost of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "initialStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerCollateral": {
                                                "type": "complexType",
                                                "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "independentAmount": {
                                                        "type": "complexType",
                                                        "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "payerPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "payerAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "paymentDetail": {
                                                                "type": "complexType",
                                                                "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "paymentDate": {
                                                                        "type": "complexType",
                                                                        "description": "Payment date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "adjustableDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "unadjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date subject to adjustment.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dateAdjustments": {
                                                                                        "type": "complexType",
                                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessDayConvention": {
                                                                                                "type": "simpleType",
                                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCentersReference": {
                                                                                                "type": "complexType",
                                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCenters": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessCenter": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "relativeDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "periodMultiplier": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "period": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dayType": {
                                                                                        "type": "simpleType",
                                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "dateRelativeTo": {
                                                                                        "type": "complexType",
                                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentAmount": {
                                                                        "type": "complexType",
                                                                        "description": "A fixed payment amount.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentRule": {
                                                                        "type": "complexType",
                                                                        "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "basketDivisor": {
                                        "type": "simpleType",
                                        "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketVersion": {
                                        "type": "simpleType",
                                        "description": "Basket version, used to record changes in basket composition or weights",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketName": {
                                        "type": "complexType",
                                        "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketId": {
                                        "type": "complexType",
                                        "description": "A CDS basket identifier",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketCurrency": {
                                        "type": "complexType",
                                        "description": "Specifies the currency for this basket.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "maximumNumberOfDaysOfDisruption": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. If omitted , the number of days specified in Section 7.6(a) of\n                        the Definitions will apply.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceMaterialityPercentage": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. To be used where a price materiality percentage applies to the\n                        \"Price Source Disruption\" event and this event has been specified by setting marketDisruption to\n                        true or including it in additionalMarketDisruptionEvent. A value expressed in percentage units\n                        i.e. 5 means 5%.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumFuturesContracts": {
                        "type": "simpleType",
                        "description": "1993 Commodity Definitions only. Specifies the Mimum Futures Contracts level that dictates\n                        whether or not a \"De Minimis Trading\" event has occurred. Only relevant if 'De Minimis Trading'\n                        has been specified in marketDisruptionEvent or additionalMarketDisruptionEvent.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementDisruption": {
                "type": "simpleType",
                "description": "Describes contract terms related to the consequences of Bullion Settlement Disruption Events.",
                "python_type": "unknownType",
                "children": {}
            },
            "rounding": {
                "type": "complexType",
                "description": "Rounding direction and precision for amounts.",
                "python_type": "unknownType",
                "children": {
                    "roundingDirection": {
                        "type": "simpleType",
                        "description": "Specifies the rounding direction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "precision": {
                        "type": "simpleType",
                        "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "commodityForwardLeg": {
        "type": "complexType",
        "description": "Defines the substitutable commodity forward leg.",
        "python_type": "unknownType",
        "children": {}
    },
    "commodityInterestLeg": {
        "type": "complexType",
        "description": "Specifies the fixed payments of a commodity performance swap. Sometimes also referred to as the fee.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationDates": {
                "type": "complexType",
                "description": "The Calculation Period dates for this leg of the trade where the Calculation Periods are all one\n                        day long. Only dates explicitly included determine the Calculation Periods and there is a\n                        Calculation Period for each date specified. As such one-day Calculation Period are typical a\n                        physically-settled emissions or metals trades it is expected that this element will not be used\n                        in performance swaps.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriods": {
                "type": "complexType",
                "description": "The Calculation Period start dates for this leg of the swap. This type is only intended to be\n                        used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg,\n                        then the calculationPeriodsReference element should be used to point to the Calculation Periods\n                        on that leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriodsSchedule": {
                "type": "complexType",
                "description": "The Calculation Periods for this leg of the swap. This type is only intended to be used if the\n                        Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the\n                        calculationPeriodsReference element should be used to point to the Calculation Periods on the\n                        other leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "balanceOfFirstPeriod": {
                        "type": "simpleType",
                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriodsReference": {
                "type": "complexType",
                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationPeriodsScheduleReference": {
                "type": "complexType",
                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationPeriodsDatesReference": {
                "type": "complexType",
                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "relativePaymentDates": {
                "type": "complexType",
                "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                "python_type": "unknownType",
                "children": {
                    "payRelativeTo": {
                        "type": "simpleType",
                        "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payRelativeToEvent": {
                        "type": "complexType",
                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "paymentDaysOffset": {
                        "type": "complexType",
                        "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "businessCentersReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenters": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "businessCenter": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "paymentDates": {
                "type": "complexType",
                "description": "Dates on which payments will be made.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDates": {
                        "type": "complexType",
                        "description": "A series of adjustable dates",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A series of dates specified as a repeating sequence from a base date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "masterAgreementPaymentDates": {
                "type": "simpleType",
                "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                "python_type": "unknownType",
                "children": {}
            },
            "notionalAmount": {
                "type": "complexType",
                "description": "Specifies the notional amount of a commodity performance type swap. It is a\n                                    currency-denominated value (i.e. price-times-quantity). In confirmations is also\n                                    referred to as the Notional Quantity (sic, expressed in currency units), Notional\n                                    Amount, Equity Notional Amount and, in the case of reinvesting swaps, Initial\n                                    Notional Amount.",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "reinvestmentFeature": {
                        "type": "simpleType",
                        "description": "This element indicates whether the notional amount (or equivalent) is constant across\n                                each Calculation Period or whether the notional amount in each Calculation Period\n                                (\"false\") is the notional amount in the previous period multiplied by 1 + commodity\n                                index return in the current period (\"true\"). In cases where reinstementFeature = true\n                                the 'amount' element is the Initial Notional Amount (or equivalent).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "notionalAmountReference": {
                "type": "complexType",
                "description": "A reference to the Return swap notional amount defined in another leg of the return\n                                    swap.",
                "python_type": "unknownType",
                "children": {}
            },
            "commodityFixedInterestCalculation": {
                "type": "complexType",
                "description": "Specifies the interest payment amount on a return swap. This amount may be referred to\n                                as the interest amount or the fee amount. Used when the interest (a.k.a. \"Fee\") is\n                                calculated very simply: notional amount * (rate * (number of days in Calculation Period\n                                / number of days assumed in the the year)).",
                "python_type": "unknownType",
                "children": {
                    "fixedRate": {
                        "type": "complexType",
                        "description": "The calculation period fixed rate or \"fee\" rate. A per annum rate, expressed as a decimal. A\n                        fixed rate of 5% would be represented as 0.05. When multiplied by the Notional Amount and the\n                        number of calendar days in the Calculation Period divided by the calendar days basis, is the\n                        fixed amount payed per Calculation Period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayCountFraction": {
                        "type": "complexType",
                        "description": "Specifies the basis for the adjustment of a rate from an annual rate to a rate appropriate for\n                        the Calculation Period: e.g. the number of calendar days in the Calculation Period divided by\n                        the calendar days basis e.g. actual number of days in the Calculation Period divided by 365.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "commodityOption": {
        "type": "complexType",
        "description": "Defines a commodity option product. The product support for financially-settled exercises or exercise\n                into physical forward contracts written on precious and non-precious metals. options in FpML is based on\n                the creation of a 'commodityOption' product. The product references the 'commodity' underlyer in order\n                to support the underlying asset of the option.",
        "python_type": "unknownType",
        "children": {
            "primaryAssetClass": {
                "type": "complexType",
                "description": "A classification of the most important risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "secondaryAssetClass": {
                "type": "complexType",
                "description": "A classification of additional risk classes of the trade, if any. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productType": {
                "type": "complexType",
                "description": "A classification of the type of product. FpML defines a simple product categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productId": {
                "type": "complexType",
                "description": "A product reference identifier. The product ID is an identifier that describes the key economic characteristics of the trade type, with the exception of concepts such as size (notional, quantity, number of units) and price (fixed rate, strike, etc.) that are negotiated for each transaction. It can be used to hold identifiers such as the \"UPI\" (universal product identifier) required by certain regulatory reporting rules. It can also be used to hold identifiers of benchmark products or product temnplates used by certain trading systems or facilities. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
                "python_type": "unknownType",
                "children": {}
            },
            "assetClass": {
                "type": "complexType",
                "description": "A classification of the risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "buyerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that buys this instrument, ie. pays for this instrument and receives the rights defined by it. See 2000 ISDA definitions Article 11.1 (b). In the case of FRAs this the fixed rate payer.",
                "python_type": "unknownType",
                "children": {}
            },
            "buyerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that buys this instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "sellerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that sells (\"writes\") this instrument, i.e. that grants the rights defined by this instrument and in return receives a payment for it. See 2000 ISDA definitions Article 11.1 (a). In the case of FRAs this is the floating rate payer.",
                "python_type": "unknownType",
                "children": {}
            },
            "sellerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that sells this instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "optionType": {
                "type": "simpleType",
                "description": "The type of option transaction.",
                "python_type": "unknownType",
                "children": {}
            },
            "commodity": {
                "type": "complexType",
                "description": "Specifies the underlying instrument. Usual content is an ISDA Commodity Reference Price Name.\n                        The 'commodity' underlyer component is specified using a reference to the 'commodity' asset (see\n                        description above at the Commodity Underlyer section).",
                "python_type": "unknownType",
                "children": {
                    "instrumentId": {
                        "type": "complexType",
                        "description": "Identification of the underlying asset, using public and/or private identifiers.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "instrumentType": {
                        "type": "complexType",
                        "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "description": {
                        "type": "simpleType",
                        "description": "Long name of the underlying asset.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodityBase": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodityDetails": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "unit": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "exchangeId": {
                        "type": "complexType",
                        "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "publication": {
                        "type": "complexType",
                        "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                        "python_type": "unknownType",
                        "children": {
                            "rateSource": {
                                "type": "complexType",
                                "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePage": {
                                "type": "complexType",
                                "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePageHeading": {
                                "type": "simpleType",
                                "description": "The heading for the rate source on a given rate source page or screen.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "specifiedPrice": {
                        "type": "simpleType",
                        "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryDates": {
                        "type": "simpleType",
                        "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryNearby": {
                        "type": "complexType",
                        "description": "A container for the parametric representation of nearby contracts.",
                        "python_type": "unknownType",
                        "children": {
                            "deliveryNearbyMultiplier": {
                                "type": "simpleType",
                                "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryNearbyType": {
                                "type": "simpleType",
                                "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDate": {
                        "type": "complexType",
                        "description": "The Delivery Date is a fixed, single day.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDateYearMonth": {
                        "type": "simpleType",
                        "description": "The Delivery Date is a fixed, single month.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryDateRollConvention": {
                        "type": "complexType",
                        "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDateExpirationConvention": {
                        "type": "complexType",
                        "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "multiplier": {
                        "type": "simpleType",
                        "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "effectiveDate": {
                "type": "complexType",
                "description": "Effective date of an option.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "terminationDate": {
                "type": "complexType",
                "description": "Specifies the termination date of the Commodity Option Transaction. In some confirmations this\n                        will be indicated as the second date in \"Option Term\" or \"Term\". Note: If provided,\n                        terminationDate should not be before specified expirationDate within the\n                        CommodityAmericanExercise type or the CommodityEuropeanExercise type.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "calculationPeriodsSchedule": {
                "type": "complexType",
                "description": "A parametric representation of the Calculation Periods of the Commodity Option Transaction.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "balanceOfFirstPeriod": {
                        "type": "simpleType",
                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriods": {
                "type": "complexType",
                "description": "An absolute representation of the Calculation Period start dates of the Commodity Option\n                            Transaction.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "pricingDates": {
                "type": "complexType",
                "description": "The dates on which the option will price.",
                "python_type": "unknownType",
                "children": {
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "lag": {
                        "type": "complexType",
                        "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                        "python_type": "unknownType",
                        "children": {
                            "lagDuration": {
                                "type": "complexType",
                                "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "firstObservationDateOffset": {
                                "type": "complexType",
                                "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "dayType": {
                        "type": "simpleType",
                        "description": "The type of day on which pricing occurs.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayDistribution": {
                        "type": "complexType",
                        "description": "The method by which the pricing days are distributed across the pricing period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayCount": {
                        "type": "simpleType",
                        "description": "The number of days over which pricing should take place.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayOfWeek": {
                        "type": "simpleType",
                        "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayNumber": {
                        "type": "simpleType",
                        "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessDayConvention": {
                        "type": "simpleType",
                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCalendar": {
                        "type": "complexType",
                        "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calendarSource": {
                        "type": "simpleType",
                        "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "settlementPeriods": {
                        "type": "complexType",
                        "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                        "python_type": "unknownType",
                        "children": {
                            "duration": {
                                "type": "simpleType",
                                "description": "The length of each Settlement Period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "applicableDay": {
                                "type": "simpleType",
                                "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "startTime": {
                                "type": "complexType",
                                "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "time": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "hourMinuteTime": {
                                                "type": "simpleType",
                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "location": {
                                                "type": "complexType",
                                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "offset": {
                                        "type": "complexType",
                                        "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "endTime": {
                                "type": "complexType",
                                "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                "python_type": "unknownType",
                                "children": {
                                    "time": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "hourMinuteTime": {
                                                "type": "simpleType",
                                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "location": {
                                                "type": "complexType",
                                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "offset": {
                                        "type": "complexType",
                                        "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "timeDuration": {
                                "type": "simpleType",
                                "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "excludeHolidays": {
                                "type": "complexType",
                                "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "includeHolidays": {
                                "type": "complexType",
                                "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "settlementPeriodsReference": {
                        "type": "complexType",
                        "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "pricingDates": {
                        "type": "complexType",
                        "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "averagingMethod": {
                "type": "simpleType",
                "description": "The Method of Averaging if there is more than one Pricing Date.",
                "python_type": "unknownType",
                "children": {}
            },
            "barrier": {
                "type": "complexType",
                "description": "Defines a commodity option barrier product feature.",
                "python_type": "unknownType",
                "children": {
                    "knock": {
                        "type": "simpleType",
                        "description": "The knock feature of a commodity barrier option.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "featurePaymentAmount": {
                        "type": "complexType",
                        "description": "In the case of barrier options where the option automatically expires and the barrier is\n                            breached in such a way to to result in a \"knock-out\" vent, this amount is paid to the the\n                            option holder so as to refund or rebate a portion of any premium paid.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The positive monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "trigger": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "levelQuantity": {
                                "type": "simpleType",
                                "description": "The amount used the specify the barrier in terms of an quantity of commodity or a change\n                                in the quantity of commodity. In confirmations this is often described as the \"Strike\n                                Volume\" or \"Strike Quantity\".",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "levelUnit": {
                                "type": "complexType",
                                "description": "The units (e.g. BCF) used to specify the barrier in terms of an quantity of commodity or\n                                change in the quantity of commodity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "levelPercentage": {
                                "type": "simpleType",
                                "description": "A barrier expressed as a percentage of notional quantity or commodity price level. A value\n                            expressed in percentage units i.e. 5 means 5%.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "levelPrice": {
                                "type": "complexType",
                                "description": "A barrier expressed as a price level.",
                                "python_type": "unknownType",
                                "children": {
                                    "price": {
                                        "type": "simpleType",
                                        "description": "The Fixed Price.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "priceCurrency": {
                                        "type": "complexType",
                                        "description": "The currency used to specify the fixed price or level in terms of a price per unit of commodity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "priceUnit": {
                                        "type": "complexType",
                                        "description": "The unit of measure used to specify the fixed price or level in terms of a price per unit of\n                        commodity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "triggerType": {
                                "type": "simpleType",
                                "description": "For barrier options: the specification of how an option will trigger or expire based on the\n                        position of the spot rate relative to the trigger level. For trades with selectable notionals:\n                        the specification of the conditions where one of the alternative notional values would apply.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "notionalQuantitySchedule": {
                "type": "complexType",
                "description": "Allows the documentation of a shaped notional trade where the notional changes over the\n                                life of the transaction.",
                "python_type": "unknownType",
                "children": {
                    "notionalStep": {
                        "type": "complexType",
                        "description": "The Notional Quantity per Calculation Period. There must be a Notional Quantity specified\n                            for each Calculation Period, regardless of whether the quantity changes or remains the same\n                            between periods.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "settlementPeriodsNotionalQuantitySchedule": {
                        "type": "complexType",
                        "description": "For an electricity transaction, the Notional Quantity schedule for a one or more groups of\n                            Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                            different groups of Settlement Periods, this element should be repeated.",
                        "python_type": "unknownType",
                        "children": {
                            "settlementPeriodsNotionalQuantityStep": {
                                "type": "complexType",
                                "description": "For an electricity transaction, the Notional Quantity for a given Calculation Period during the\n                        life of the trade which applies to the range(s) of Settlement Periods referenced by\n                        settlementPeriodsReference. There must be a settlementPeriodsNotionalQuantityStep specified for\n                        each Calculation Period, regardless of whether the NotionalQuantity changes or remains the same\n                        between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantityUnit": {
                                        "type": "complexType",
                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityFrequency": {
                                        "type": "complexType",
                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "Amount of commodity per quantity frequency.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "The range(s) of Settlement Periods to which the Fixed Price steps apply.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "notionalQuantity": {
                "type": "complexType",
                "description": "The Notional Quantity.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantityFrequency": {
                        "type": "complexType",
                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementPeriodsNotionalQuantity": {
                "type": "complexType",
                "description": "For an electricity transaction, the Notional Quantity for a one or more groups of\n                                Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                                different groups of Settlement Periods, this element should be repeated.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantityFrequency": {
                        "type": "complexType",
                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "settlementPeriodsReference": {
                        "type": "complexType",
                        "description": "The range(s) of Settlement Periods to which the Notional Quantity applies.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "totalNotionalQuantity": {
                "type": "simpleType",
                "description": "The Total Notional Quantity.",
                "python_type": "unknownType",
                "children": {}
            },
            "quantityReference": {
                "type": "complexType",
                "description": "A pointer style reference to a quantity defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "exercise": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "americanExercise": {
                        "type": "complexType",
                        "description": "The parameters for defining the expiration date for an American option.",
                        "python_type": "unknownType",
                        "children": {
                            "exercisePeriod": {
                                "type": "complexType",
                                "description": "Describes the American exercise periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "commencementDate": {
                                        "type": "complexType",
                                        "description": "The first day of the exercise period for an American style option.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "adjustableDate": {
                                                "type": "complexType",
                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "relativeDate": {
                                                "type": "complexType",
                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "dateRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expirationDate": {
                                        "type": "complexType",
                                        "description": "The last day within an exercise period for an American style option. For a European style option\n                        it is the only day within the exercise period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "adjustableDate": {
                                                "type": "complexType",
                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "relativeDate": {
                                                "type": "complexType",
                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "dateRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "exerciseFrequency": {
                                "type": "complexType",
                                "description": "The exercise frequency for the strip.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "latestExerciseTime": {
                                "type": "complexType",
                                "description": "For a Bermuda or American style option, the latest time on an exercise business day\n                                    (excluding the expiration date) within the exercise period that notice can be given\n                                    by the buyer to the seller or seller's agent. Notice of exercise given after this\n                                    time will be deemed to have been given on the next exercise business day.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "latestExerciseTimeDetermination": {
                                "type": "complexType",
                                "description": "Latest exercise time determination method.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "expirationTime": {
                                "type": "complexType",
                                "description": "The specific time of day on which the option expires.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "multipleExercise": {
                                "type": "complexType",
                                "description": "The presence of this element indicates that the option may be partially exercised. It is\n                                not applicable to European or Asian options.",
                                "python_type": "unknownType",
                                "children": {
                                    "integralMultipleQuantity": {
                                        "type": "complexType",
                                        "description": "The integral multiple quantity defines a lower limit of the Notional Quantity that can be\n                        exercised and also defines a unit multiple of the Notional Quantity that can be exercised, i.e.\n                        only integer multiples of this Notional Quantity can be exercised.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "minimumNotionalQuantity": {
                                        "type": "complexType",
                                        "description": "The minimum Notional Quantity that can be exercised on a given Exercise Date. See\n                        multipleExercise.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "europeanExercise": {
                        "type": "complexType",
                        "description": "The parameters for defining the expiration date and time for a European or Asian style\n                            option. For an Asian style option the expiration date is equivalent to the termination date.",
                        "python_type": "unknownType",
                        "children": {
                            "expirationDate": {
                                "type": "complexType",
                                "description": "The last day within an exercise period for an American style option. For a European\n                                    style option it is the only day within the exercise period. For an averaging option\n                                    this is equivalent to the Termination Date.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDate": {
                                        "type": "complexType",
                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDate": {
                                        "type": "complexType",
                                        "description": "A date specified as an offset to another date (the anchor date).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "exerciseFrequency": {
                                "type": "complexType",
                                "description": "The exercise frequency for the strip.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "expirationTime": {
                                "type": "complexType",
                                "description": "The specific time of day on which the option expires.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "automaticExercise": {
                        "type": "simpleType",
                        "description": "Specifies whether or not Automatic Exercise applies to a Commodity Option Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "writtenConfirmation": {
                        "type": "simpleType",
                        "description": "Specifies whether or not Written Confirmation applies to a Commodity Option Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "settlementCurrency": {
                        "type": "complexType",
                        "description": "The currency into which the Commodity Option Transaction will settle. If this is not the same as\n                        the currency in which the Commodity Reference Price is quoted, then an FX determination method\n                        should also be specified.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "fx": {
                        "type": "complexType",
                        "description": "FX observations to be used to convert the observed Commodity Reference Price to the Settlement\n                        Currency.",
                        "python_type": "unknownType",
                        "children": {
                            "primaryRateSource": {
                                "type": "complexType",
                                "description": "The primary source for where the rate observation will occur. Will typically be either a page or\n                        a reference bank published rate.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "secondaryRateSource": {
                                "type": "complexType",
                                "description": "An alternative, or secondary, source for where the rate observation will occur. Will typically\n                        be either a page or a reference bank published rate.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fxType": {
                                "type": "complexType",
                                "description": "A type to identify how the FX rate will be applied. This is intended to differentiate between\n                        the various methods for applying FX to the floating price such as a daily calculation, or\n                        averaging the FX and applying the average at the end of each CalculationPeriod.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "averagingMethod": {
                                "type": "simpleType",
                                "description": "The parties may specify a Method of Averaging when averaging of the FX rate is applicable.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "fixingTime": {
                                "type": "complexType",
                                "description": "The time at which the spot currency exchange rate will be observed. It is specified as a\n                                time in a specific business center, e.g. 11:00am London time.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fxObservationDates": {
                                "type": "complexType",
                                "description": "A list of the fx observation dates for a given Calculation Period.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within the\n                        respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "lagReference": {
                                "type": "complexType",
                                "description": "Allows a lag to reference one already defined elsewhere in the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "conversionFactor": {
                        "type": "simpleType",
                        "description": "If the Notional Quantity is specified in a unit that does not match the unit in which the\n                        Commodity Reference Price is quoted, the scaling or conversion factor used to convert the\n                        Commodity Reference Price unit into the Notional Quantity unit should be stated here. If there\n                        is no conversion, this element is not intended to be used.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "relativePaymentDates": {
                        "type": "complexType",
                        "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                        "python_type": "unknownType",
                        "children": {
                            "payRelativeTo": {
                                "type": "simpleType",
                                "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payRelativeToEvent": {
                                "type": "complexType",
                                "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "paymentDaysOffset": {
                                "type": "complexType",
                                "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "paymentDates": {
                        "type": "complexType",
                        "description": "Dates on which payments will be made.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDates": {
                                "type": "complexType",
                                "description": "A series of adjustable dates",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A series of dates specified as a repeating sequence from a base date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "masterAgreementPaymentDates": {
                        "type": "simpleType",
                        "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "strikePricePerUnit": {
                "type": "complexType",
                "description": "The currency amount of the strike price per unit.",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "strikePricePerUnitSchedule": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "strikePricePerUnitStep": {
                        "type": "complexType",
                        "description": "The strike price per unit per Calculation Period. There must be a strike price per unit\n                        specified for each Calculation Period, regardless of whether the price changes or remains the\n                        same between periods.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "floatingStrikePricePerUnit": {
                "type": "complexType",
                "description": "The currency amount of the strike price per unit.",
                "python_type": "unknownType",
                "children": {
                    "pricingDates": {
                        "type": "complexType",
                        "description": "Commodity Pricing Dates.",
                        "python_type": "unknownType",
                        "children": {
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCalendar": {
                                "type": "complexType",
                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calendarSource": {
                                "type": "simpleType",
                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementPeriods": {
                                "type": "complexType",
                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                "python_type": "unknownType",
                                "children": {
                                    "duration": {
                                        "type": "simpleType",
                                        "description": "The length of each Settlement Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "applicableDay": {
                                        "type": "simpleType",
                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "startTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "endTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "timeDuration": {
                                        "type": "simpleType",
                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "excludeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "includeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "pricingDates": {
                                "type": "complexType",
                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "averagingMethod": {
                        "type": "simpleType",
                        "description": "The parties may specify a Method of Averaging where more than one pricing Dates is being\n                        specified as being applicable.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "conversionFactor": {
                        "type": "simpleType",
                        "description": "If the Notional Quantity is specified in units that do not match the units in which the\n                        Commodity Reference Price is quoted, the scaling or conversion factor used to convert the\n                        Commodity Reference Price units into the Notional Quantity units should be stated here. If there\n                        is no conversion, this element is not intended to be used.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "rounding": {
                        "type": "complexType",
                        "description": "Rounding direction and precision for price values.",
                        "python_type": "unknownType",
                        "children": {
                            "roundingDirection": {
                                "type": "simpleType",
                                "description": "Specifies the rounding direction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "precision": {
                                "type": "simpleType",
                                "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "spread": {
                        "type": "complexType",
                        "description": "The spread over or under the Commodity Reference Price for this leg of the trade.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "spreadConversionFactor": {
                                "type": "simpleType",
                                "description": "spreadConversionFactor should be used when the unit of measure of the Commodity\n                                Reference Price and the unit of measure in which the spread is quoted are different. The\n                                value of spreadConversionFactor is the number of units of measure in which the spread is\n                                quoted per unit of measure of the Commodity Reference Price.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "spreadUnit": {
                                "type": "complexType",
                                "description": "spreadUnit should be used when the unit of measure of the Commodity Reference Price and\n                                the unit of measure in which the spread is quoted are different. The value of spreadUnit\n                                is the unit of measure in which the spread is quoted.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "spreadSchedule": {
                        "type": "complexType",
                        "description": "The spread over or under the Commodity Reference Price for this leg of the trade for each\n                            Calculation Period.",
                        "python_type": "unknownType",
                        "children": {
                            "spreadStep": {
                                "type": "complexType",
                                "description": "The spread per Calculation Period. There must be a spread step specified for each Calculation\n                        Period, regardless of whether the spread changes or remains the same between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "spreadConversionFactor": {
                                        "type": "simpleType",
                                        "description": "spreadConversionFactor should be used when the unit of measure of the Commodity\n                                Reference Price and the unit of measure in which the spread is quoted are different. The\n                                value of spreadConversionFactor is the number of units of measure in which the spread is\n                                quoted per unit of measure of the Commodity Reference Price.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "spreadUnit": {
                                        "type": "complexType",
                                        "description": "spreadUnit should be used when the unit of measure of the Commodity Reference Price and\n                                the unit of measure in which the spread is quoted are different. The value of spreadUnit\n                                is the unit of measure in which the spread is quoted.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "spreadPercentage": {
                        "type": "simpleType",
                        "description": "The spread percentage over or under the Commodity Reference Price for this leg of the trade.\n                            A value expressed in percentage units i.e. 5 means 5%.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "fx": {
                        "type": "complexType",
                        "description": "Defines how observations of FX prices are to be used to calculate a factor with which to convert\n                        the observed Commodity Reference Price to the Settlement Currency.",
                        "python_type": "unknownType",
                        "children": {
                            "primaryRateSource": {
                                "type": "complexType",
                                "description": "The primary source for where the rate observation will occur. Will typically be either a page or\n                        a reference bank published rate.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "secondaryRateSource": {
                                "type": "complexType",
                                "description": "An alternative, or secondary, source for where the rate observation will occur. Will typically\n                        be either a page or a reference bank published rate.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fxType": {
                                "type": "complexType",
                                "description": "A type to identify how the FX rate will be applied. This is intended to differentiate between\n                        the various methods for applying FX to the floating price such as a daily calculation, or\n                        averaging the FX and applying the average at the end of each CalculationPeriod.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "averagingMethod": {
                                "type": "simpleType",
                                "description": "The parties may specify a Method of Averaging when averaging of the FX rate is applicable.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "fixingTime": {
                                "type": "complexType",
                                "description": "The time at which the spot currency exchange rate will be observed. It is specified as a\n                                time in a specific business center, e.g. 11:00am London time.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fxObservationDates": {
                                "type": "complexType",
                                "description": "A list of the fx observation dates for a given Calculation Period.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within the\n                        respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "lagReference": {
                                "type": "complexType",
                                "description": "Allows a lag to reference one already defined elsewhere in the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "commodity": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "instrumentId": {
                                "type": "complexType",
                                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "instrumentType": {
                                "type": "complexType",
                                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "description": {
                                "type": "simpleType",
                                "description": "Long name of the underlying asset.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "commodityBase": {
                                "type": "complexType",
                                "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "commodityDetails": {
                                "type": "complexType",
                                "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "unit": {
                                "type": "complexType",
                                "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "exchangeId": {
                                "type": "complexType",
                                "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "publication": {
                                "type": "complexType",
                                "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page or screen.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "specifiedPrice": {
                                "type": "simpleType",
                                "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryDates": {
                                "type": "simpleType",
                                "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryNearby": {
                                "type": "complexType",
                                "description": "A container for the parametric representation of nearby contracts.",
                                "python_type": "unknownType",
                                "children": {
                                    "deliveryNearbyMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryNearbyType": {
                                        "type": "simpleType",
                                        "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryDate": {
                                "type": "complexType",
                                "description": "The Delivery Date is a fixed, single day.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryDateYearMonth": {
                                "type": "simpleType",
                                "description": "The Delivery Date is a fixed, single month.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryDateRollConvention": {
                                "type": "complexType",
                                "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryDateExpirationConvention": {
                                "type": "complexType",
                                "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "multiplier": {
                                "type": "simpleType",
                                "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "floatingStrikePricePerUnitSchedule": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "balanceOfFirstPeriod": {
                        "type": "simpleType",
                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "commoditySwap": {
                "type": "complexType",
                "description": "DEPRECATED. Defines a commodity swap product.",
                "python_type": "unknownType",
                "children": {
                    "primaryAssetClass": {
                        "type": "complexType",
                        "description": "A classification of the most important risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "secondaryAssetClass": {
                        "type": "complexType",
                        "description": "A classification of additional risk classes of the trade, if any. FpML defines a simple asset class categorization using a coding scheme.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "productType": {
                        "type": "complexType",
                        "description": "A classification of the type of product. FpML defines a simple product categorization using a coding scheme.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "productId": {
                        "type": "complexType",
                        "description": "A product reference identifier. The product ID is an identifier that describes the key economic characteristics of the trade type, with the exception of concepts such as size (notional, quantity, number of units) and price (fixed rate, strike, etc.) that are negotiated for each transaction. It can be used to hold identifiers such as the \"UPI\" (universal product identifier) required by certain regulatory reporting rules. It can also be used to hold identifiers of benchmark products or product temnplates used by certain trading systems or facilities. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "assetClass": {
                        "type": "complexType",
                        "description": "A classification of the risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "effectiveDate": {
                        "type": "complexType",
                        "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date\n                        specified somewhere else in the document (through the relativeDate component), this element will\n                        typically point to the effective date of the other leg of the swap.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDate": {
                                "type": "complexType",
                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A date specified as an offset to another date (the anchor date).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "terminationDate": {
                        "type": "complexType",
                        "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date\n                        specified somewhere else in the document (through the relativeDate component), this element will\n                        typically point to the termination date of the other leg of the swap.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDate": {
                                "type": "complexType",
                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A date specified as an offset to another date (the anchor date).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "settlementCurrency": {
                        "type": "complexType",
                        "description": "The currency into which the Commodity Swap Transaction will settle. If this is not the same as\n                        the currency in which the Commodity Reference Price is quoted on a given floating leg of the\n                        Commodity Swap Transaction, then an FX rate should also be specified for that leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commoditySwapLeg": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "weatherLeg": {
                        "type": "complexType",
                        "description": "A weather leg element of a Commodity Swap defines Weather Index Swap transactions. Weather\n                            Index Swap transactions are OTC derivative transactions which settle financially based on an\n                            index calculated from observations of temperature, precipitation and other weather-related\n                            measurements at weather stations throughout the world. Sub-Annex C of the 2005 ISDA\n                            Commodity Definitions provides definitions and terms for a number of types of weather\n                            indices. These indices include: HDD (heating degree days), CDD (cooling degree days), CPD\n                            (critical precipitation days). Weather Index Swap transactions result in a cash flow to one\n                            of the two counterparties each Calculation Period depending on the relationship between the\n                            Settlement Level and the Weather Index Level. A Weather Index swap transaction always\n                            consists of a commodity swap element as a parent to two weatherLeg elements.",
                        "python_type": "unknownType",
                        "children": {
                            "payerPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payerAccountReference": {
                                "type": "complexType",
                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "receiverPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "receiverAccountReference": {
                                "type": "complexType",
                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherIndexLevel": {
                                "type": "complexType",
                                "description": "Defining the Weather Index Level or Weather Index Strike Level.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "This is the Reference Level. The CDD, HDD or HDD Reference Level is specified as the number of\n                        (amount of) Weather Index Units specified by the parties in the related Confirmation.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "unit": {
                                        "type": "complexType",
                                        "description": "Weather Index Unit derived from one of the following variable methods of determination: Cooling\n                        Degree Day (CDD), Heating Degree Day (HDD), Critical Precipitation Day (CPD) as defined in\n                        Section 11.15 of the 2005 ISDA Commodity Definitions and User Guide.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "weatherCalculationPeriods": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "calculationPeriod": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "calculationPeriodFirstDay": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodEndDay": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "weatherCalculationPeriodsReference": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherNotionalAmount": {
                                "type": "complexType",
                                "description": "Defines the price per weather index unit.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The non negative monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "calculation": {
                                "type": "complexType",
                                "description": "Defines details relevant to the calculation of the aggregate weather index amount.",
                                "python_type": "unknownType",
                                "children": {
                                    "settlementLevel": {
                                        "type": "simpleType",
                                        "description": "The Settlement Level means either the cumulative number of Weather Index Units for each day in\n                        the Calculation Period (Cumulative) or the cumulative number of Weather Index Units for each day\n                        in the Calculation Period divided by the number of days in the Calculation Period (Average) or\n                        the maximum number of Weather Index Units for any day in the Calculation Period (Maximum) or the\n                        minimum number of Weather Index Units for any day in the Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "referenceLevelEqualsZero": {
                                        "type": "simpleType",
                                        "description": "If Reference Level Equals Zero is specified to be applicable then CPD means, for any day during\n                        the Calculation Period, (A) 1 if the Daily Precipitation for that day is greater than or equal\n                        to the CPD Reference Level or (B) zero if the the Daily Precipitation for that day is less than\n                        the CPD Reference Level. If Reference Level Equals Zero is specified not to be applicable then\n                        CPD means, for any day during the Calculation Period, (A) 1 if the Daily Precipitation for that\n                        day is greater than the CPD Reference Level or 0 if the Daily Precipitation for that day is less\n                        than or equal to the CPD Reference Level.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationDate": {
                                        "type": "complexType",
                                        "description": "The number of days following the final day of the Calculation Period specified in the\n                        Confirmation on which is is practicable to provide the notice that the Calculation Agent is\n                        required to give for that Settlement Date or Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessDays": {
                                        "type": "complexType",
                                        "description": "A day on which commmercial banks settle payments and are open for general business in the\n                        place(s) specified in the Confirmation. See Section 1.3 of the ISDA 2005 Commodity Definitions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dataCorrection": {
                                        "type": "simpleType",
                                        "description": "The date payment often revised after its publication, this indicates if the payment date could\n                        be recalculated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "correctionPeriod": {
                                        "type": "complexType",
                                        "description": "If 'dataCorrection'=true, this indicates how long after the initial publication of the data\n                        corrections can be made.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "maximumPaymentAmount": {
                                        "type": "complexType",
                                        "description": "The maximum total payment amount that will be paid in any particular transaction.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which an amount is denominated.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "simpleType",
                                                "description": "The non negative monetary quantity in currency units.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "maximumTransactionPaymentAmount": {
                                        "type": "complexType",
                                        "description": "The maximum payment amount that will be paid in any particular Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which an amount is denominated.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "simpleType",
                                                "description": "The non negative monetary quantity in currency units.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "rounding": {
                                        "type": "complexType",
                                        "description": "Rounding direction and precision for price values.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "roundingDirection": {
                                                "type": "simpleType",
                                                "description": "Specifies the rounding direction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "precision": {
                                                "type": "simpleType",
                                                "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "paymentDates": {
                                "type": "complexType",
                                "description": "The Payment Dates of the trade relative to the Calculation Periods or Calculation Date",
                                "python_type": "unknownType",
                                "children": {
                                    "payRelativeTo": {
                                        "type": "simpleType",
                                        "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "payRelativeToEvent": {
                                        "type": "complexType",
                                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "paymentDaysOffset": {
                                        "type": "complexType",
                                        "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "weatherIndexData": {
                                "type": "complexType",
                                "description": "Specifies where the data (e.g. CPD) have been collected, an actual physical reference\n                                point (weather station) and various fall back arrangements.",
                                "python_type": "unknownType",
                                "children": {
                                    "referenceLevel": {
                                        "type": "complexType",
                                        "description": "Reference level is the number of degree-days (in the case of HDD and CDD) or inches/millimeters\n                        (in the case of CPD) on which the differential is calculated. In the case of HDD it is the\n                        number of degree-days below this reference level. In the case of CDD it is the number of degree\n                        days above this reference level. In the case of CPD it is number of inches/millimeters above\n                        this reference level.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "amount": {
                                                "type": "simpleType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "referenceLevelUnit": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dataProvider": {
                                        "type": "complexType",
                                        "description": "The provider of either temperature data or precipitation data specified by the parties in the\n                        related Confirmation.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "finalEditedData": {
                                        "type": "simpleType",
                                        "description": "If specified by the parties to apply in the related Confirmation, Final Edited Data means that\n                        the parties will have recourse to Primary Disruption Fallbacks even if relevant data is\n                        available from the Data Provider, so long as such data is not published in its final edited\n                        form. Otherwise the parties will have recourse to Primary Disruption Fallbacks only if relevant\n                        data is unavailable from the Data Provider on a relevant day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStation": {
                                        "type": "complexType",
                                        "description": "The source or sources of weather index data specified by the parties in the related\n                        Confirmation. Examples include: AU-CBM (the Commonwealth Bureau of Meteorology in Australia) and\n                        CM-SMI (the Swiss Meteorological Institute).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "weatherStationCity": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationAirport": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWBAN": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWMO": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "weatherStationFallback": {
                                        "type": "complexType",
                                        "description": "If weather index data is not available for the weather station specified by the parties in the\n                        related Confirmation, the first alternative Weather Index Station.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "weatherStationCity": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationAirport": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWBAN": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWMO": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "weatherStationSecondFallback": {
                                        "type": "complexType",
                                        "description": "If weather index data is neither available for the weather station specified by the parties in\n                        the related Confirmation nor the first alternative Weather Index Station, the second alternative\n                        Weather Index Station.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "weatherStationCity": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationAirport": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWBAN": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWMO": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "alternativeDataProvider": {
                                        "type": "simpleType",
                                        "description": "A provider of either temperature data or precipitation data specified by the parties in the\n                        related Confirmation. If the parties fail to specify an Alternative Data Provider, the \"Fallback\n                        Data\" Disruption Fallback will not apply.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "synopticDataFallback": {
                                        "type": "simpleType",
                                        "description": "If the parties specify \"Not Applicable\", the \"Synoptic Data\" Disruption Fallback will not apply.\n                        Synoptic Data means that maximum and/or minimum temperature or daily precipitation at the\n                        location for the Missing Data Day will be the maxium and/or minimum temperature or daily\n                        precipitation for that day at the Location (Weather Index Station) which has not been subject to\n                        ultimate quality control, integrity or verification process.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustmentToFallbackWeatherStation": {
                                        "type": "simpleType",
                                        "description": "The Weather Index Station from which data with which to apply the \"Adjustement to Fallback\n                        Station Data\" terms. See Section 11.20 of the 2005 ISDA Commodity Definitions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "primaryDisruptionFallbacks": {
                                        "type": "complexType",
                                        "description": "A list of actions available to the parties should a Primary Disruption Event occur. A Primary\n                        Disruption Event means if maximum or minimum temperature or precipitation data for a Missing\n                        Data Day is required to determine a Payment Amount then the maximum and/or minimum temperature\n                        or the daily precipitation for that day will be determined in accordance with the first\n                        applicable Primary Disruption Fallback.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "secondaryDisruptionFallbacks": {
                                        "type": "complexType",
                                        "description": "A list of actions available to the parties should a Secondary Disruption Event occur. A Primary\n                        Disruption Event means if maximum or minimum temperature or precipitation data for a Missing\n                        Data Day is required to determine a Payment Amount then the maximum and/or minimum temperature\n                        or the daily precipitation for that day will be determined in accordance with the first\n                        applicable Secondary Disruption Fallback.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "commonPricing": {
                        "type": "simpleType",
                        "description": "If Common Pricing is elected (\u201ctrue\u201d) for a Transaction with referencing more than\n                        one Commodity Reference Price then no date will be a Pricing Date unless such a date is a day on\n                        which all Commodity Reference Prices are scheduled to be published.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "marketDisruption": {
                        "type": "complexType",
                        "description": "Contains contract terms related to triggers and responses to market disruptions as defined in\n                        the 1993 or 2005 Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {
                            "marketDisruptionEvents": {
                                "type": "simpleType",
                                "description": "If Market disruption Events are stated to be Applicable then the default Market\n                                Disruption Events of Section 7.4(d)(i) of the ISDA Commodity Definitions shall apply\n                                unless specific Market Disruption Events are stated hereunder, in which case these shall\n                                override the ISDA defaults. If Market Disruption Events are stated to be Not Applicable,\n                                Market Disruption Events are not applicable to the trade at all. It is also possible to\n                                reference the Market Disruption Events set out in the relevant Master Agreement\n                                governing the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "additionalMarketDisruptionEvent": {
                                "type": "complexType",
                                "description": "To be used when marketDisruptionEvents is set to \"Applicable\" and additional market\n                                disruption events(s) apply to the default market disruption events of Section 7.4(d)(i)\n                                of the ISDA Commodity Definitions.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "marketDisruptionEvent": {
                                "type": "complexType",
                                "description": "Market disruption event(s) that apply. Note that these should only be specified if the\n                            default market disruption events of Section 7.4(d)(i) of the ISDA Commodity Definitions are\n                            to be overridden.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "disruptionFallbacks": {
                                "type": "simpleType",
                                "description": "To be used where disruption fallbacks are set out in the relevant Master Agreement governing\n                            the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "disruptionFallback": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "fallback": {
                                        "type": "complexType",
                                        "description": "Disruption fallback that applies to the trade.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "sequence": {
                                        "type": "simpleType",
                                        "description": "Sequence in which the reference to the disruption fallback should be applied.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fallbackReferencePrice": {
                                "type": "complexType",
                                "description": "A fallback commodity reference price for use when relying on Disruption Fallbacks in Section\n                        7.5(d)(i) of the ISDA Commodity Definitions or have selected \"Fallback Reference Price\" as a\n                        disruptionFallback.",
                                "python_type": "unknownType",
                                "children": {
                                    "singleUnderlyer": {
                                        "type": "complexType",
                                        "description": "Describes the swap's underlyer when it has only one asset component.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "underlyingAsset": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "openUnits": {
                                                "type": "simpleType",
                                                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayout": {
                                                "type": "complexType",
                                                "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "dividendPayoutRatio": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioNonCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutConditions": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming dividend payment or payments.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "couponPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming coupon payment.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "averageDailyTradingVolume": {
                                                "type": "complexType",
                                                "description": "The average amount of individual securities traded in a day or over a specified amount of time.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "limitationPercentage": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the limitation percentage in Average Daily trading volume. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "limitationPeriod": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the limitation period for Average Daily trading volume in number of days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "depositoryReceipt": {
                                                "type": "simpleType",
                                                "description": "A Depository Receipt is a negotiable certificate issued by a trust company or security depository. This element is used to represent whether a Depository Receipt is applicable or not to the underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "basket": {
                                        "type": "complexType",
                                        "description": "Describes the swap's underlyer when it has multiple asset components.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "openUnits": {
                                                "type": "simpleType",
                                                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketConstituent": {
                                                "type": "complexType",
                                                "description": "Describes each of the components of the basket.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "payerPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "payerAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "underlyingAsset": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "constituentWeight": {
                                                        "type": "complexType",
                                                        "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "openUnits": {
                                                                "type": "simpleType",
                                                                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "basketPercentage": {
                                                                "type": "simpleType",
                                                                "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "basketAmount": {
                                                                "type": "complexType",
                                                                "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "dividendPayout": {
                                                        "type": "complexType",
                                                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "dividendPayoutRatio": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayoutRatioCash": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayoutRatioNonCash": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayoutConditions": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayment": {
                                                                "type": "complexType",
                                                                "description": "The next upcoming dividend payment or payments.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "paymentDate": {
                                                                        "type": "simpleType",
                                                                        "description": "The date that the dividend or coupon is due.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "complexType",
                                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "accruedInterest": {
                                                                        "type": "complexType",
                                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "commission": {
                                                                "type": "complexType",
                                                                "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "commissionDenomination": {
                                                                        "type": "simpleType",
                                                                        "description": "The type of units used to express a commission.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "commissionAmount": {
                                                                        "type": "simpleType",
                                                                        "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "commissionPerTrade": {
                                                                        "type": "simpleType",
                                                                        "description": "The total commission per trade.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "fxRate": {
                                                                        "type": "complexType",
                                                                        "description": "FX Rates that have been used to convert commissions to a single currency.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "quotedCurrencyPair": {
                                                                                "type": "complexType",
                                                                                "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "currency1": {
                                                                                        "type": "complexType",
                                                                                        "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "currency2": {
                                                                                        "type": "complexType",
                                                                                        "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "quoteBasis": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The method by which the exchange rate is quoted.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "rate": {
                                                                                "type": "simpleType",
                                                                                "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "determinationMethod": {
                                                                "type": "complexType",
                                                                "description": "Specifies the method according to which an amount or a date is determined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "grossPrice": {
                                                                "type": "complexType",
                                                                "description": "Specifies the price of the underlyer, before commissions.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "priceExpression": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "netPrice": {
                                                                "type": "complexType",
                                                                "description": "Specifies the price of the underlyer, net of commissions.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "priceExpression": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterestPrice": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxConversion": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "amountRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "fxRate": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies a currency conversion rate.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "quotedCurrencyPair": {
                                                                                "type": "complexType",
                                                                                "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "currency1": {
                                                                                        "type": "complexType",
                                                                                        "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "currency2": {
                                                                                        "type": "complexType",
                                                                                        "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "quoteBasis": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The method by which the exchange rate is quoted.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "rate": {
                                                                                "type": "simpleType",
                                                                                "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "amountRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "cleanNetPrice": {
                                                                "type": "simpleType",
                                                                "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quotationCharacteristics": {
                                                                "type": "complexType",
                                                                "description": "Allows information about how the price was quoted to be provided.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "measureType": {
                                                                        "type": "complexType",
                                                                        "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "quoteUnits": {
                                                                        "type": "complexType",
                                                                        "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "side": {
                                                                        "type": "simpleType",
                                                                        "description": "The side (bid/mid/ask) of the measure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "currencyType": {
                                                                        "type": "complexType",
                                                                        "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "timing": {
                                                                        "type": "complexType",
                                                                        "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "A city or other business center.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "exchangeId": {
                                                                        "type": "complexType",
                                                                        "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "informationSource": {
                                                                        "type": "complexType",
                                                                        "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "rateSource": {
                                                                                "type": "complexType",
                                                                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "rateSourcePage": {
                                                                                "type": "complexType",
                                                                                "description": "A specific page for the rate source for obtaining a market rate.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "rateSourcePageHeading": {
                                                                                "type": "simpleType",
                                                                                "description": "The heading for the rate source on a given rate source page.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "pricingModel": {
                                                                        "type": "complexType",
                                                                        "description": ".",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "time": {
                                                                        "type": "simpleType",
                                                                        "description": "When the quote was observed or when a calculated value was generated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "valuationDate": {
                                                                        "type": "simpleType",
                                                                        "description": "When the quote was computed.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "expiryTime": {
                                                                        "type": "simpleType",
                                                                        "description": "When does the quote cease to be valid.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "cashflowType": {
                                                                        "type": "complexType",
                                                                        "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerNotional": {
                                                        "type": "complexType",
                                                        "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "underlyerSpread": {
                                                        "type": "complexType",
                                                        "description": "Provides a link to the spread schedule used for this underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "couponPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming coupon payment.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerFinancing": {
                                                        "type": "complexType",
                                                        "description": "Financing terms associated with this underlyer",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "legIdentifier": {
                                                                "type": "complexType",
                                                                "description": "Version aware identification of this leg.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "legId": {
                                                                        "type": "complexType",
                                                                        "description": "Identity of this leg.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "version": {
                                                                        "type": "simpleType",
                                                                        "description": "The version number",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "effectiveDate": {
                                                                        "type": "complexType",
                                                                        "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "payerPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "payerAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "effectiveDate": {
                                                                "type": "complexType",
                                                                "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "adjustableDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "unadjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date subject to adjustment.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dateAdjustments": {
                                                                                "type": "complexType",
                                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "relativeDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "periodMultiplier": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "period": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dayType": {
                                                                                "type": "simpleType",
                                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "dateRelativeTo": {
                                                                                "type": "complexType",
                                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "terminationDate": {
                                                                "type": "complexType",
                                                                "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "adjustableDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "unadjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date subject to adjustment.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dateAdjustments": {
                                                                                "type": "complexType",
                                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "relativeDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "periodMultiplier": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "period": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dayType": {
                                                                                "type": "simpleType",
                                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "dateRelativeTo": {
                                                                                "type": "complexType",
                                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "fixedRate": {
                                                                "type": "simpleType",
                                                                "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "spreadSchedule": {
                                                                "type": "complexType",
                                                                "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "initialValue": {
                                                                        "type": "simpleType",
                                                                        "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "step": {
                                                                        "type": "complexType",
                                                                        "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "stepDate": {
                                                                                "type": "simpleType",
                                                                                "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "stepValue": {
                                                                                "type": "simpleType",
                                                                                "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "type": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerLoanRate": {
                                                        "type": "complexType",
                                                        "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "lossOfStockBorrow": {
                                                                "type": "simpleType",
                                                                "description": "If true, then loss of stock borrow is applicable.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "maximumStockLoanRate": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "increasedCostOfStockBorrow": {
                                                                "type": "simpleType",
                                                                "description": "If true, then increased cost of stock borrow is applicable.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "initialStockLoanRate": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "underlyerCollateral": {
                                                        "type": "complexType",
                                                        "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "independentAmount": {
                                                                "type": "complexType",
                                                                "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "payerPartyReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "payerAccountReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "receiverPartyReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "receiverAccountReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "paymentDetail": {
                                                                        "type": "complexType",
                                                                        "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "paymentDate": {
                                                                                "type": "complexType",
                                                                                "description": "Payment date.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "adjustableDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "unadjustedDate": {
                                                                                                "type": "complexType",
                                                                                                "description": "A date subject to adjustment.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "dateAdjustments": {
                                                                                                "type": "complexType",
                                                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessDayConvention": {
                                                                                                        "type": "simpleType",
                                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    },
                                                                                                    "businessCentersReference": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    },
                                                                                                    "businessCenters": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {
                                                                                                            "businessCenter": {
                                                                                                                "type": "complexType",
                                                                                                                "description": "",
                                                                                                                "python_type": "unknownType",
                                                                                                                "children": {}
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "adjustedDate": {
                                                                                                "type": "complexType",
                                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "relativeDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "periodMultiplier": {
                                                                                                "type": "simpleType",
                                                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "period": {
                                                                                                "type": "simpleType",
                                                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "dayType": {
                                                                                                "type": "simpleType",
                                                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessDayConvention": {
                                                                                                "type": "simpleType",
                                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCentersReference": {
                                                                                                "type": "complexType",
                                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCenters": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessCenter": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "dateRelativeTo": {
                                                                                                "type": "complexType",
                                                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "adjustedDate": {
                                                                                                "type": "complexType",
                                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "paymentAmount": {
                                                                                "type": "complexType",
                                                                                "description": "A fixed payment amount.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "currency": {
                                                                                        "type": "complexType",
                                                                                        "description": "The currency in which an amount is denominated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "amount": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The monetary quantity in currency units.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "paymentRule": {
                                                                                "type": "complexType",
                                                                                "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "basketDivisor": {
                                                "type": "simpleType",
                                                "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketVersion": {
                                                "type": "simpleType",
                                                "description": "Basket version, used to record changes in basket composition or weights",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketName": {
                                                "type": "complexType",
                                                "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketId": {
                                                "type": "complexType",
                                                "description": "A CDS basket identifier",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketCurrency": {
                                                "type": "complexType",
                                                "description": "Specifies the currency for this basket.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "maximumNumberOfDaysOfDisruption": {
                                "type": "simpleType",
                                "description": "2005 Commodity Definitions only. If omitted , the number of days specified in Section 7.6(a) of\n                        the Definitions will apply.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "priceMaterialityPercentage": {
                                "type": "simpleType",
                                "description": "2005 Commodity Definitions only. To be used where a price materiality percentage applies to the\n                        \"Price Source Disruption\" event and this event has been specified by setting marketDisruption to\n                        true or including it in additionalMarketDisruptionEvent. A value expressed in percentage units\n                        i.e. 5 means 5%.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "minimumFuturesContracts": {
                                "type": "simpleType",
                                "description": "1993 Commodity Definitions only. Specifies the Mimum Futures Contracts level that dictates\n                        whether or not a \"De Minimis Trading\" event has occurred. Only relevant if 'De Minimis Trading'\n                        has been specified in marketDisruptionEvent or additionalMarketDisruptionEvent.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "settlementDisruption": {
                        "type": "simpleType",
                        "description": "Describes contract terms related to the consequences of Bullion Settlement Disruption Events.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "rounding": {
                        "type": "complexType",
                        "description": "Rounding direction and precision for amounts.",
                        "python_type": "unknownType",
                        "children": {
                            "roundingDirection": {
                                "type": "simpleType",
                                "description": "Specifies the rounding direction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "precision": {
                                "type": "simpleType",
                                "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "commodityForward": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "primaryAssetClass": {
                        "type": "complexType",
                        "description": "A classification of the most important risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "secondaryAssetClass": {
                        "type": "complexType",
                        "description": "A classification of additional risk classes of the trade, if any. FpML defines a simple asset class categorization using a coding scheme.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "productType": {
                        "type": "complexType",
                        "description": "A classification of the type of product. FpML defines a simple product categorization using a coding scheme.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "productId": {
                        "type": "complexType",
                        "description": "A product reference identifier. The product ID is an identifier that describes the key economic characteristics of the trade type, with the exception of concepts such as size (notional, quantity, number of units) and price (fixed rate, strike, etc.) that are negotiated for each transaction. It can be used to hold identifiers such as the \"UPI\" (universal product identifier) required by certain regulatory reporting rules. It can also be used to hold identifiers of benchmark products or product temnplates used by certain trading systems or facilities. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "assetClass": {
                        "type": "complexType",
                        "description": "A classification of the risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "valueDate": {
                        "type": "complexType",
                        "description": "Specifies the value date of the Commodity Forward Transaction. This is the day on which\n                                both the cash and the physical commodity settle.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDate": {
                                "type": "complexType",
                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A date specified as an offset to another date (the anchor date).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "fixedLeg": {
                        "type": "complexType",
                        "description": "The fixed leg of a Commodity Forward Transaction.",
                        "python_type": "unknownType",
                        "children": {
                            "payerPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payerAccountReference": {
                                "type": "complexType",
                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "receiverPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "receiverAccountReference": {
                                "type": "complexType",
                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "fixedPrice": {
                                "type": "complexType",
                                "description": "Fixed price on which fixed payments are based.",
                                "python_type": "unknownType",
                                "children": {
                                    "price": {
                                        "type": "simpleType",
                                        "description": "The Fixed Price.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "priceCurrency": {
                                        "type": "complexType",
                                        "description": "The currency used to specify the fixed price or level in terms of a price per unit of commodity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "priceUnit": {
                                        "type": "complexType",
                                        "description": "The unit of measure used to specify the fixed price or level in terms of a price per unit of\n                        commodity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "totalPrice": {
                                "type": "complexType",
                                "description": "The total amount of the fixed payment for all units of the underlying commodity.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The non negative monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "quantityReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a quantity defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "relativePaymentDates": {
                                "type": "complexType",
                                "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "payRelativeTo": {
                                        "type": "simpleType",
                                        "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "payRelativeToEvent": {
                                        "type": "complexType",
                                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "paymentDaysOffset": {
                                        "type": "complexType",
                                        "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "paymentDates": {
                                "type": "complexType",
                                "description": "Dates on which payments will be made.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDates": {
                                        "type": "complexType",
                                        "description": "A series of adjustable dates",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDate": {
                                        "type": "complexType",
                                        "description": "A series of dates specified as a repeating sequence from a base date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "masterAgreementPaymentDates": {
                                "type": "simpleType",
                                "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "averagePriceLeg": {
                        "type": "complexType",
                        "description": "Specifies the calculated floating price leg of a Commodity Forward Transaction.",
                        "python_type": "unknownType",
                        "children": {
                            "payerPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payerAccountReference": {
                                "type": "complexType",
                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "receiverPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "receiverAccountReference": {
                                "type": "complexType",
                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationDates": {
                                "type": "complexType",
                                "description": "The Calculation Period dates for this leg of the trade where the Calculation Periods are all one\n                        day long. Only dates explicitly included determine the Calculation Periods and there is a\n                        Calculation Period for each date specified. As such one-day Calculation Period are typical a\n                        physically-settled emissions or metals trades it is expected that this element will not be used\n                        in performance swaps.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "calculationPeriods": {
                                "type": "complexType",
                                "description": "The Calculation Period start dates for this leg of the swap. This type is only intended to be\n                        used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg,\n                        then the calculationPeriodsReference element should be used to point to the Calculation Periods\n                        on that leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "calculationPeriodsSchedule": {
                                "type": "complexType",
                                "description": "The Calculation Periods for this leg of the swap. This type is only intended to be used if the\n                        Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the\n                        calculationPeriodsReference element should be used to point to the Calculation Periods on the\n                        other leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "balanceOfFirstPeriod": {
                                        "type": "simpleType",
                                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "commodity": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "instrumentId": {
                                        "type": "complexType",
                                        "description": "Identification of the underlying asset, using public and/or private identifiers.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "instrumentType": {
                                        "type": "complexType",
                                        "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "description": {
                                        "type": "simpleType",
                                        "description": "Long name of the underlying asset.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commodityBase": {
                                        "type": "complexType",
                                        "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commodityDetails": {
                                        "type": "complexType",
                                        "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "unit": {
                                        "type": "complexType",
                                        "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "exchangeId": {
                                        "type": "complexType",
                                        "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "publication": {
                                        "type": "complexType",
                                        "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "rateSource": {
                                                "type": "complexType",
                                                "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePage": {
                                                "type": "complexType",
                                                "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePageHeading": {
                                                "type": "simpleType",
                                                "description": "The heading for the rate source on a given rate source page or screen.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "specifiedPrice": {
                                        "type": "simpleType",
                                        "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryDates": {
                                        "type": "simpleType",
                                        "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryNearby": {
                                        "type": "complexType",
                                        "description": "A container for the parametric representation of nearby contracts.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "deliveryNearbyMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryNearbyType": {
                                                "type": "simpleType",
                                                "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "deliveryDate": {
                                        "type": "complexType",
                                        "description": "The Delivery Date is a fixed, single day.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "deliveryDateYearMonth": {
                                        "type": "simpleType",
                                        "description": "The Delivery Date is a fixed, single month.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "deliveryDateRollConvention": {
                                        "type": "complexType",
                                        "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "deliveryDateExpirationConvention": {
                                        "type": "complexType",
                                        "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "multiplier": {
                                        "type": "simpleType",
                                        "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "quantityReference": {
                                "type": "complexType",
                                "description": "A pointer to a specification of quantity defined elsewhere.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "pricingStartDate": {
                                "type": "complexType",
                                "description": "Defines the Start of the Pricing period. PricingStartDate is optional when discrete\n                                pricingDates are supplied and is not recommended to be included. Should they coexist,\n                                pricingStartDate is expected to be the same as the earliest pricing date or earlier for\n                                a Term deal as the discrete dates will take precedence.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "calculation": {
                                "type": "complexType",
                                "description": "Captures details relevant to the calculation of the floating price.",
                                "python_type": "unknownType",
                                "children": {
                                    "pricingDates": {
                                        "type": "complexType",
                                        "description": "Commodity Pricing Dates.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "lag": {
                                                "type": "complexType",
                                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lagDuration": {
                                                        "type": "complexType",
                                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "firstObservationDateOffset": {
                                                        "type": "complexType",
                                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "The type of day on which pricing occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayDistribution": {
                                                "type": "complexType",
                                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayCount": {
                                                "type": "simpleType",
                                                "description": "The number of days over which pricing should take place.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayOfWeek": {
                                                "type": "simpleType",
                                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayNumber": {
                                                "type": "simpleType",
                                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCalendar": {
                                                "type": "complexType",
                                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calendarSource": {
                                                "type": "simpleType",
                                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "settlementPeriods": {
                                                "type": "complexType",
                                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "duration": {
                                                        "type": "simpleType",
                                                        "description": "The length of each Settlement Period.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "applicableDay": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "startTime": {
                                                        "type": "complexType",
                                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "time": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "hourMinuteTime": {
                                                                        "type": "simpleType",
                                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "location": {
                                                                        "type": "complexType",
                                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "offset": {
                                                                "type": "complexType",
                                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "endTime": {
                                                        "type": "complexType",
                                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "time": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "hourMinuteTime": {
                                                                        "type": "simpleType",
                                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "location": {
                                                                        "type": "complexType",
                                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "offset": {
                                                                "type": "complexType",
                                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "timeDuration": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "excludeHolidays": {
                                                        "type": "complexType",
                                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "includeHolidays": {
                                                        "type": "complexType",
                                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "settlementPeriodsReference": {
                                                "type": "complexType",
                                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "pricingDates": {
                                                "type": "complexType",
                                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averagingMethod": {
                                        "type": "simpleType",
                                        "description": "The parties may specify a Method of Averaging where more than one pricing Dates is being\n                        specified as being applicable.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "conversionFactor": {
                                        "type": "simpleType",
                                        "description": "If the Notional Quantity is specified in units that do not match the units in which the\n                        Commodity Reference Price is quoted, the scaling or conversion factor used to convert the\n                        Commodity Reference Price units into the Notional Quantity units should be stated here. If there\n                        is no conversion, this element is not intended to be used.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rounding": {
                                        "type": "complexType",
                                        "description": "Rounding direction and precision for price values.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "roundingDirection": {
                                                "type": "simpleType",
                                                "description": "Specifies the rounding direction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "precision": {
                                                "type": "simpleType",
                                                "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "spread": {
                                        "type": "complexType",
                                        "description": "The spread over or under the Commodity Reference Price for this leg of the trade.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which an amount is denominated.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "simpleType",
                                                "description": "The monetary quantity in currency units.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "spreadConversionFactor": {
                                                "type": "simpleType",
                                                "description": "spreadConversionFactor should be used when the unit of measure of the Commodity\n                                Reference Price and the unit of measure in which the spread is quoted are different. The\n                                value of spreadConversionFactor is the number of units of measure in which the spread is\n                                quoted per unit of measure of the Commodity Reference Price.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "spreadUnit": {
                                                "type": "complexType",
                                                "description": "spreadUnit should be used when the unit of measure of the Commodity Reference Price and\n                                the unit of measure in which the spread is quoted are different. The value of spreadUnit\n                                is the unit of measure in which the spread is quoted.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "spreadSchedule": {
                                        "type": "complexType",
                                        "description": "The spread over or under the Commodity Reference Price for this leg of the trade for each\n                            Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "spreadStep": {
                                                "type": "complexType",
                                                "description": "The spread per Calculation Period. There must be a spread step specified for each Calculation\n                        Period, regardless of whether the spread changes or remains the same between periods.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "spreadConversionFactor": {
                                                        "type": "simpleType",
                                                        "description": "spreadConversionFactor should be used when the unit of measure of the Commodity\n                                Reference Price and the unit of measure in which the spread is quoted are different. The\n                                value of spreadConversionFactor is the number of units of measure in which the spread is\n                                quoted per unit of measure of the Commodity Reference Price.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "spreadUnit": {
                                                        "type": "complexType",
                                                        "description": "spreadUnit should be used when the unit of measure of the Commodity Reference Price and\n                                the unit of measure in which the spread is quoted are different. The value of spreadUnit\n                                is the unit of measure in which the spread is quoted.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "spreadPercentage": {
                                        "type": "simpleType",
                                        "description": "The spread percentage over or under the Commodity Reference Price for this leg of the trade.\n                            A value expressed in percentage units i.e. 5 means 5%.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "fx": {
                                        "type": "complexType",
                                        "description": "Defines how observations of FX prices are to be used to calculate a factor with which to convert\n                        the observed Commodity Reference Price to the Settlement Currency.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "primaryRateSource": {
                                                "type": "complexType",
                                                "description": "The primary source for where the rate observation will occur. Will typically be either a page or\n                        a reference bank published rate.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "rateSource": {
                                                        "type": "complexType",
                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePage": {
                                                        "type": "complexType",
                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePageHeading": {
                                                        "type": "simpleType",
                                                        "description": "The heading for the rate source on a given rate source page.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "secondaryRateSource": {
                                                "type": "complexType",
                                                "description": "An alternative, or secondary, source for where the rate observation will occur. Will typically\n                        be either a page or a reference bank published rate.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "rateSource": {
                                                        "type": "complexType",
                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePage": {
                                                        "type": "complexType",
                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePageHeading": {
                                                        "type": "simpleType",
                                                        "description": "The heading for the rate source on a given rate source page.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "fxType": {
                                                "type": "complexType",
                                                "description": "A type to identify how the FX rate will be applied. This is intended to differentiate between\n                        the various methods for applying FX to the floating price such as a daily calculation, or\n                        averaging the FX and applying the average at the end of each CalculationPeriod.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "averagingMethod": {
                                                "type": "simpleType",
                                                "description": "The parties may specify a Method of Averaging when averaging of the FX rate is applicable.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "fixingTime": {
                                                "type": "complexType",
                                                "description": "The time at which the spot currency exchange rate will be observed. It is specified as a\n                                time in a specific business center, e.g. 11:00am London time.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "fxObservationDates": {
                                                "type": "complexType",
                                                "description": "A list of the fx observation dates for a given Calculation Period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "The type of day on which pricing occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayDistribution": {
                                                "type": "complexType",
                                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayCount": {
                                                "type": "simpleType",
                                                "description": "The number of days over which pricing should take place.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayOfWeek": {
                                                "type": "simpleType",
                                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayNumber": {
                                                "type": "simpleType",
                                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "lag": {
                                                "type": "complexType",
                                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within the\n                        respective calculation period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lagDuration": {
                                                        "type": "complexType",
                                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "firstObservationDateOffset": {
                                                        "type": "complexType",
                                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "lagReference": {
                                                "type": "complexType",
                                                "description": "Allows a lag to reference one already defined elsewhere in the trade.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "relativePaymentDates": {
                                "type": "complexType",
                                "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "payRelativeTo": {
                                        "type": "simpleType",
                                        "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "payRelativeToEvent": {
                                        "type": "complexType",
                                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "paymentDaysOffset": {
                                        "type": "complexType",
                                        "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "paymentDates": {
                                "type": "complexType",
                                "description": "Dates on which payments will be made.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDates": {
                                        "type": "complexType",
                                        "description": "A series of adjustable dates",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDate": {
                                        "type": "complexType",
                                        "description": "A series of dates specified as a repeating sequence from a base date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "masterAgreementPaymentDates": {
                                "type": "simpleType",
                                "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "commodityForwardLeg": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commonPricing": {
                        "type": "simpleType",
                        "description": "If Common Pricing is elected (\u201ctrue\u201d) for a Transaction with referencing more than\n                        one Commodity Reference Price then no date will be a Pricing Date unless such a date is a day on\n                        which all Commodity Reference Prices are scheduled to be published.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "marketDisruption": {
                        "type": "complexType",
                        "description": "Contains contract terms related to triggers and responses to market disruptions as defined in\n                        the 1993 or 2005 Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {
                            "marketDisruptionEvents": {
                                "type": "simpleType",
                                "description": "If Market disruption Events are stated to be Applicable then the default Market\n                                Disruption Events of Section 7.4(d)(i) of the ISDA Commodity Definitions shall apply\n                                unless specific Market Disruption Events are stated hereunder, in which case these shall\n                                override the ISDA defaults. If Market Disruption Events are stated to be Not Applicable,\n                                Market Disruption Events are not applicable to the trade at all. It is also possible to\n                                reference the Market Disruption Events set out in the relevant Master Agreement\n                                governing the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "additionalMarketDisruptionEvent": {
                                "type": "complexType",
                                "description": "To be used when marketDisruptionEvents is set to \"Applicable\" and additional market\n                                disruption events(s) apply to the default market disruption events of Section 7.4(d)(i)\n                                of the ISDA Commodity Definitions.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "marketDisruptionEvent": {
                                "type": "complexType",
                                "description": "Market disruption event(s) that apply. Note that these should only be specified if the\n                            default market disruption events of Section 7.4(d)(i) of the ISDA Commodity Definitions are\n                            to be overridden.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "disruptionFallbacks": {
                                "type": "simpleType",
                                "description": "To be used where disruption fallbacks are set out in the relevant Master Agreement governing\n                            the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "disruptionFallback": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "fallback": {
                                        "type": "complexType",
                                        "description": "Disruption fallback that applies to the trade.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "sequence": {
                                        "type": "simpleType",
                                        "description": "Sequence in which the reference to the disruption fallback should be applied.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fallbackReferencePrice": {
                                "type": "complexType",
                                "description": "A fallback commodity reference price for use when relying on Disruption Fallbacks in Section\n                        7.5(d)(i) of the ISDA Commodity Definitions or have selected \"Fallback Reference Price\" as a\n                        disruptionFallback.",
                                "python_type": "unknownType",
                                "children": {
                                    "singleUnderlyer": {
                                        "type": "complexType",
                                        "description": "Describes the swap's underlyer when it has only one asset component.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "underlyingAsset": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "openUnits": {
                                                "type": "simpleType",
                                                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayout": {
                                                "type": "complexType",
                                                "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "dividendPayoutRatio": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioNonCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutConditions": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming dividend payment or payments.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "couponPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming coupon payment.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "averageDailyTradingVolume": {
                                                "type": "complexType",
                                                "description": "The average amount of individual securities traded in a day or over a specified amount of time.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "limitationPercentage": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the limitation percentage in Average Daily trading volume. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "limitationPeriod": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the limitation period for Average Daily trading volume in number of days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "depositoryReceipt": {
                                                "type": "simpleType",
                                                "description": "A Depository Receipt is a negotiable certificate issued by a trust company or security depository. This element is used to represent whether a Depository Receipt is applicable or not to the underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "basket": {
                                        "type": "complexType",
                                        "description": "Describes the swap's underlyer when it has multiple asset components.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "openUnits": {
                                                "type": "simpleType",
                                                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketConstituent": {
                                                "type": "complexType",
                                                "description": "Describes each of the components of the basket.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "payerPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "payerAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "underlyingAsset": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "constituentWeight": {
                                                        "type": "complexType",
                                                        "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "openUnits": {
                                                                "type": "simpleType",
                                                                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "basketPercentage": {
                                                                "type": "simpleType",
                                                                "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "basketAmount": {
                                                                "type": "complexType",
                                                                "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "dividendPayout": {
                                                        "type": "complexType",
                                                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "dividendPayoutRatio": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayoutRatioCash": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayoutRatioNonCash": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayoutConditions": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayment": {
                                                                "type": "complexType",
                                                                "description": "The next upcoming dividend payment or payments.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "paymentDate": {
                                                                        "type": "simpleType",
                                                                        "description": "The date that the dividend or coupon is due.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "complexType",
                                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "accruedInterest": {
                                                                        "type": "complexType",
                                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "commission": {
                                                                "type": "complexType",
                                                                "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "commissionDenomination": {
                                                                        "type": "simpleType",
                                                                        "description": "The type of units used to express a commission.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "commissionAmount": {
                                                                        "type": "simpleType",
                                                                        "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "commissionPerTrade": {
                                                                        "type": "simpleType",
                                                                        "description": "The total commission per trade.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "fxRate": {
                                                                        "type": "complexType",
                                                                        "description": "FX Rates that have been used to convert commissions to a single currency.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "quotedCurrencyPair": {
                                                                                "type": "complexType",
                                                                                "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "currency1": {
                                                                                        "type": "complexType",
                                                                                        "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "currency2": {
                                                                                        "type": "complexType",
                                                                                        "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "quoteBasis": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The method by which the exchange rate is quoted.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "rate": {
                                                                                "type": "simpleType",
                                                                                "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "determinationMethod": {
                                                                "type": "complexType",
                                                                "description": "Specifies the method according to which an amount or a date is determined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "grossPrice": {
                                                                "type": "complexType",
                                                                "description": "Specifies the price of the underlyer, before commissions.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "priceExpression": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "netPrice": {
                                                                "type": "complexType",
                                                                "description": "Specifies the price of the underlyer, net of commissions.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "priceExpression": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterestPrice": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxConversion": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "amountRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "fxRate": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies a currency conversion rate.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "quotedCurrencyPair": {
                                                                                "type": "complexType",
                                                                                "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "currency1": {
                                                                                        "type": "complexType",
                                                                                        "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "currency2": {
                                                                                        "type": "complexType",
                                                                                        "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "quoteBasis": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The method by which the exchange rate is quoted.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "rate": {
                                                                                "type": "simpleType",
                                                                                "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "amountRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "cleanNetPrice": {
                                                                "type": "simpleType",
                                                                "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quotationCharacteristics": {
                                                                "type": "complexType",
                                                                "description": "Allows information about how the price was quoted to be provided.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "measureType": {
                                                                        "type": "complexType",
                                                                        "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "quoteUnits": {
                                                                        "type": "complexType",
                                                                        "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "side": {
                                                                        "type": "simpleType",
                                                                        "description": "The side (bid/mid/ask) of the measure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "currencyType": {
                                                                        "type": "complexType",
                                                                        "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "timing": {
                                                                        "type": "complexType",
                                                                        "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "A city or other business center.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "exchangeId": {
                                                                        "type": "complexType",
                                                                        "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "informationSource": {
                                                                        "type": "complexType",
                                                                        "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "rateSource": {
                                                                                "type": "complexType",
                                                                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "rateSourcePage": {
                                                                                "type": "complexType",
                                                                                "description": "A specific page for the rate source for obtaining a market rate.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "rateSourcePageHeading": {
                                                                                "type": "simpleType",
                                                                                "description": "The heading for the rate source on a given rate source page.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "pricingModel": {
                                                                        "type": "complexType",
                                                                        "description": ".",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "time": {
                                                                        "type": "simpleType",
                                                                        "description": "When the quote was observed or when a calculated value was generated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "valuationDate": {
                                                                        "type": "simpleType",
                                                                        "description": "When the quote was computed.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "expiryTime": {
                                                                        "type": "simpleType",
                                                                        "description": "When does the quote cease to be valid.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "cashflowType": {
                                                                        "type": "complexType",
                                                                        "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerNotional": {
                                                        "type": "complexType",
                                                        "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "underlyerSpread": {
                                                        "type": "complexType",
                                                        "description": "Provides a link to the spread schedule used for this underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "couponPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming coupon payment.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerFinancing": {
                                                        "type": "complexType",
                                                        "description": "Financing terms associated with this underlyer",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "legIdentifier": {
                                                                "type": "complexType",
                                                                "description": "Version aware identification of this leg.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "legId": {
                                                                        "type": "complexType",
                                                                        "description": "Identity of this leg.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "version": {
                                                                        "type": "simpleType",
                                                                        "description": "The version number",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "effectiveDate": {
                                                                        "type": "complexType",
                                                                        "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "payerPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "payerAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "effectiveDate": {
                                                                "type": "complexType",
                                                                "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "adjustableDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "unadjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date subject to adjustment.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dateAdjustments": {
                                                                                "type": "complexType",
                                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "relativeDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "periodMultiplier": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "period": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dayType": {
                                                                                "type": "simpleType",
                                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "dateRelativeTo": {
                                                                                "type": "complexType",
                                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "terminationDate": {
                                                                "type": "complexType",
                                                                "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "adjustableDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "unadjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date subject to adjustment.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dateAdjustments": {
                                                                                "type": "complexType",
                                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "relativeDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "periodMultiplier": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "period": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dayType": {
                                                                                "type": "simpleType",
                                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "dateRelativeTo": {
                                                                                "type": "complexType",
                                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "fixedRate": {
                                                                "type": "simpleType",
                                                                "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "spreadSchedule": {
                                                                "type": "complexType",
                                                                "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "initialValue": {
                                                                        "type": "simpleType",
                                                                        "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "step": {
                                                                        "type": "complexType",
                                                                        "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "stepDate": {
                                                                                "type": "simpleType",
                                                                                "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "stepValue": {
                                                                                "type": "simpleType",
                                                                                "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "type": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerLoanRate": {
                                                        "type": "complexType",
                                                        "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "lossOfStockBorrow": {
                                                                "type": "simpleType",
                                                                "description": "If true, then loss of stock borrow is applicable.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "maximumStockLoanRate": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "increasedCostOfStockBorrow": {
                                                                "type": "simpleType",
                                                                "description": "If true, then increased cost of stock borrow is applicable.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "initialStockLoanRate": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "underlyerCollateral": {
                                                        "type": "complexType",
                                                        "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "independentAmount": {
                                                                "type": "complexType",
                                                                "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "payerPartyReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "payerAccountReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "receiverPartyReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "receiverAccountReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "paymentDetail": {
                                                                        "type": "complexType",
                                                                        "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "paymentDate": {
                                                                                "type": "complexType",
                                                                                "description": "Payment date.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "adjustableDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "unadjustedDate": {
                                                                                                "type": "complexType",
                                                                                                "description": "A date subject to adjustment.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "dateAdjustments": {
                                                                                                "type": "complexType",
                                                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessDayConvention": {
                                                                                                        "type": "simpleType",
                                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    },
                                                                                                    "businessCentersReference": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    },
                                                                                                    "businessCenters": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {
                                                                                                            "businessCenter": {
                                                                                                                "type": "complexType",
                                                                                                                "description": "",
                                                                                                                "python_type": "unknownType",
                                                                                                                "children": {}
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "adjustedDate": {
                                                                                                "type": "complexType",
                                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "relativeDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "periodMultiplier": {
                                                                                                "type": "simpleType",
                                                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "period": {
                                                                                                "type": "simpleType",
                                                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "dayType": {
                                                                                                "type": "simpleType",
                                                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessDayConvention": {
                                                                                                "type": "simpleType",
                                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCentersReference": {
                                                                                                "type": "complexType",
                                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCenters": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessCenter": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "dateRelativeTo": {
                                                                                                "type": "complexType",
                                                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "adjustedDate": {
                                                                                                "type": "complexType",
                                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "paymentAmount": {
                                                                                "type": "complexType",
                                                                                "description": "A fixed payment amount.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "currency": {
                                                                                        "type": "complexType",
                                                                                        "description": "The currency in which an amount is denominated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "amount": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The monetary quantity in currency units.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "paymentRule": {
                                                                                "type": "complexType",
                                                                                "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "basketDivisor": {
                                                "type": "simpleType",
                                                "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketVersion": {
                                                "type": "simpleType",
                                                "description": "Basket version, used to record changes in basket composition or weights",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketName": {
                                                "type": "complexType",
                                                "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketId": {
                                                "type": "complexType",
                                                "description": "A CDS basket identifier",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketCurrency": {
                                                "type": "complexType",
                                                "description": "Specifies the currency for this basket.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "maximumNumberOfDaysOfDisruption": {
                                "type": "simpleType",
                                "description": "2005 Commodity Definitions only. If omitted , the number of days specified in Section 7.6(a) of\n                        the Definitions will apply.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "priceMaterialityPercentage": {
                                "type": "simpleType",
                                "description": "2005 Commodity Definitions only. To be used where a price materiality percentage applies to the\n                        \"Price Source Disruption\" event and this event has been specified by setting marketDisruption to\n                        true or including it in additionalMarketDisruptionEvent. A value expressed in percentage units\n                        i.e. 5 means 5%.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "minimumFuturesContracts": {
                                "type": "simpleType",
                                "description": "1993 Commodity Definitions only. Specifies the Mimum Futures Contracts level that dictates\n                        whether or not a \"De Minimis Trading\" event has occurred. Only relevant if 'De Minimis Trading'\n                        has been specified in marketDisruptionEvent or additionalMarketDisruptionEvent.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "settlementDisruption": {
                        "type": "simpleType",
                        "description": "Describes contract terms related to the consequences of Bullion Settlement Disruption Events.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "rounding": {
                        "type": "complexType",
                        "description": "Rounding direction and precision for amounts.",
                        "python_type": "unknownType",
                        "children": {
                            "roundingDirection": {
                                "type": "simpleType",
                                "description": "Specifies the rounding direction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "precision": {
                                "type": "simpleType",
                                "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "physicalExercise": {
                "type": "complexType",
                "description": "The parameters for defining how the commodity option can be exercised into a physical\n                        transaction.",
                "python_type": "unknownType",
                "children": {
                    "americanExercise": {
                        "type": "complexType",
                        "description": "The parameters for defining the expiration date(s) and time(s) for an American style option.",
                        "python_type": "unknownType",
                        "children": {
                            "commencementDates": {
                                "type": "complexType",
                                "description": "The first day(s) of the exercise period(s) for an American-style option.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDates": {
                                        "type": "complexType",
                                        "description": "A series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDates": {
                                        "type": "complexType",
                                        "description": "A series of dates specified as some offset to another series of dates (the anchor dates).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "periodSkip": {
                                                "type": "simpleType",
                                                "description": "The number of periods in the referenced date schedule that are between each date in the relative date schedule. Thus a skip of 2 would mean that dates are relative to every second date in the referenced schedule. If present this should have a value greater than 1.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "scheduleBounds": {
                                                "type": "complexType",
                                                "description": "The first and last dates of a schedule. This can be used to restrict the range of values in a reference series of dates.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedFirstDate": {
                                                        "type": "simpleType",
                                                        "description": "The first date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "unadjustedLastDate": {
                                                        "type": "simpleType",
                                                        "description": "The last date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "expirationDates": {
                                "type": "complexType",
                                "description": "The Expiration Date(s) of an American-style option.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDates": {
                                        "type": "complexType",
                                        "description": "A series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDates": {
                                        "type": "complexType",
                                        "description": "A series of dates specified as some offset to another series of dates (the anchor dates).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "periodSkip": {
                                                "type": "simpleType",
                                                "description": "The number of periods in the referenced date schedule that are between each date in the relative date schedule. Thus a skip of 2 would mean that dates are relative to every second date in the referenced schedule. If present this should have a value greater than 1.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "scheduleBounds": {
                                                "type": "complexType",
                                                "description": "The first and last dates of a schedule. This can be used to restrict the range of values in a reference series of dates.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedFirstDate": {
                                                        "type": "simpleType",
                                                        "description": "The first date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "unadjustedLastDate": {
                                                        "type": "simpleType",
                                                        "description": "The last date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "relativeCommencementDates": {
                                "type": "complexType",
                                "description": "The first day(s) of the exercise period(s) for an American-style option where it\n                                        is relative to the occurrence of an external event.",
                                "python_type": "unknownType",
                                "children": {
                                    "expireRelativeToEvent": {
                                        "type": "complexType",
                                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "expirationDateOffset": {
                                        "type": "complexType",
                                        "description": "Specifies any offset from the adjusted Calculation Period start date or adjusted Calculation\n                        Period end date applicable to each Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "relativeExpirationDates": {
                                "type": "complexType",
                                "description": "The Expiration Date(s) of an American-style option where it is relative to the\n                                        occurrence of an external event.",
                                "python_type": "unknownType",
                                "children": {
                                    "expireRelativeToEvent": {
                                        "type": "complexType",
                                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "expirationDateOffset": {
                                        "type": "complexType",
                                        "description": "Specifies any offset from the adjusted Calculation Period start date or adjusted Calculation\n                        Period end date applicable to each Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "latestExerciseTime": {
                                "type": "complexType",
                                "description": "For a Bermuda or American style option, the latest time on an exercise business day\n                                (excluding the expiration date) within the exercise period that notice can be given by\n                                the buyer to the seller or seller's agent. Notice of exercise given after this time will\n                                be deemed to have been given on the next exercise business day.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "location": {
                                        "type": "complexType",
                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "expirationTime": {
                                "type": "complexType",
                                "description": "The specific time of day at which the option expires.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "location": {
                                        "type": "complexType",
                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "europeanExercise": {
                        "type": "complexType",
                        "description": "The parameters for defining the expiration date(s) and time(s) for a European style option.",
                        "python_type": "unknownType",
                        "children": {
                            "expirationDate": {
                                "type": "complexType",
                                "description": "The Expiration Date of a single expiry European-style option or the first Expiration\n                                    Date of a multiple expiry or daily expiring option.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDate": {
                                        "type": "complexType",
                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDate": {
                                        "type": "complexType",
                                        "description": "A date specified as an offset to another date (the anchor date).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "expirationDates": {
                                "type": "complexType",
                                "description": "The Expiration Date(s) of a European-style option.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDates": {
                                        "type": "complexType",
                                        "description": "A series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDates": {
                                        "type": "complexType",
                                        "description": "A series of dates specified as some offset to another series of dates (the anchor dates).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "periodSkip": {
                                                "type": "simpleType",
                                                "description": "The number of periods in the referenced date schedule that are between each date in the relative date schedule. Thus a skip of 2 would mean that dates are relative to every second date in the referenced schedule. If present this should have a value greater than 1.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "scheduleBounds": {
                                                "type": "complexType",
                                                "description": "The first and last dates of a schedule. This can be used to restrict the range of values in a reference series of dates.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedFirstDate": {
                                                        "type": "simpleType",
                                                        "description": "The first date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "unadjustedLastDate": {
                                                        "type": "simpleType",
                                                        "description": "The last date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "periodicDates": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "calculationStartDate": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "adjustableDate": {
                                                        "type": "complexType",
                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "unadjustedDate": {
                                                                "type": "complexType",
                                                                "description": "A date subject to adjustment.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dateAdjustments": {
                                                                "type": "complexType",
                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "adjustedDate": {
                                                                "type": "complexType",
                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "relativeDate": {
                                                        "type": "complexType",
                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "dateRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "adjustedDate": {
                                                                "type": "complexType",
                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "calculationEndDate": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "adjustableDate": {
                                                        "type": "complexType",
                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "unadjustedDate": {
                                                                "type": "complexType",
                                                                "description": "A date subject to adjustment.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dateAdjustments": {
                                                                "type": "complexType",
                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "adjustedDate": {
                                                                "type": "complexType",
                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "relativeDate": {
                                                        "type": "complexType",
                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "dateRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "adjustedDate": {
                                                                "type": "complexType",
                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "calculationPeriodFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which calculation period end dates occur with the regular part of the calculation period schedule and their roll date convention.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rollConvention": {
                                                        "type": "simpleType",
                                                        "description": "Used in conjunction with a frequency and the regular period start date of a calculation period, determines each calculation period end date within the regular part of a calculation period schedule.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "calculationPeriodDatesAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention to apply to each calculation period end date if it would otherwise fall on a day that is not a business day in the specified financial business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "relativeExpirationDates": {
                                "type": "complexType",
                                "description": "The Expiration Date(s) of a European-style option where it is relative to the\n                                    occurrence of an external event.",
                                "python_type": "unknownType",
                                "children": {
                                    "expireRelativeToEvent": {
                                        "type": "complexType",
                                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "expirationDateOffset": {
                                        "type": "complexType",
                                        "description": "Specifies any offset from the adjusted Calculation Period start date or adjusted Calculation\n                        Period end date applicable to each Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "expirationTime": {
                                "type": "complexType",
                                "description": "The specific time of day at which the option expires.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "location": {
                                        "type": "complexType",
                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "automaticExercise": {
                        "type": "simpleType",
                        "description": "Specifies whether or not Automatic Exercise applies to a Commodity Option Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "writtenConfirmation": {
                        "type": "simpleType",
                        "description": "Specifies whether or not Written Confirmation applies to a Commodity Option Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "clearingInstructions": {
                        "type": "complexType",
                        "description": "Specifies any instructions on how the physical settlement is to be effected when the option is\n                        exercised.",
                        "python_type": "unknownType",
                        "children": {
                            "clearedPhysicalSettlement": {
                                "type": "simpleType",
                                "description": "Specifies whether the swap resulting from physical settlement of the swaption transaction will clear through a clearing house. The meaning of Cleared Physical Settlement is defined in the 2006 ISDA Definitions, Section 15.2 (published in Supplement number 28).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "predeterminedClearingOrganizationPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the clearing organization (CCP, DCO) to which the trade should be cleared. This is also known as the \"Mutually Agreed Clearinghouse\".",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "mutuallyAgreedClearinghouse": {
                                "type": "complexType",
                                "description": "This may be used to specify a \"mutually-agreed clearinghouse\" for settlement.",
                                "python_type": "unknownType",
                                "children": {
                                    "partyReference": {
                                        "type": "complexType",
                                        "description": "A reference to the party structure for the clearinghouse",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "identifier": {
                                        "type": "complexType",
                                        "description": "A string that identifies the clearinghouse",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "agreedDiscountRate": {
                                "type": "complexType",
                                "description": "This may be used to indicate the discount rate to be used for cash collateral for cash settlement purposes.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementRateSource": {
                                "type": "complexType",
                                "description": "The method for obtaining a settlement rate. This may be from some information source (e.g. Reuters) or from a set of reference banks.",
                                "python_type": "unknownType",
                                "children": {
                                    "informationSource": {
                                        "type": "complexType",
                                        "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "rateSource": {
                                                "type": "complexType",
                                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePage": {
                                                "type": "complexType",
                                                "description": "A specific page for the rate source for obtaining a market rate.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePageHeading": {
                                                "type": "simpleType",
                                                "description": "The heading for the rate source on a given rate source page.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "cashSettlementReferenceBanks": {
                                        "type": "complexType",
                                        "description": "A container for a set of reference institutions. These reference institutions may be called upon to provide rate quotations as part of the method to determine the applicable cash settlement amount. If institutions are not specified, it is assumed that reference institutions will be agreed between the parties on the exercise date, or in the case of swap transaction to which mandatory early termination is applicable, the cash settlement valuation date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "referenceBank": {
                                                "type": "complexType",
                                                "description": "An institution (party) identified by means of a coding scheme and an optional name.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "referenceBankId": {
                                                        "type": "complexType",
                                                        "description": "An institution (party) identifier, e.g. a bank identifier code (BIC).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "referenceBankName": {
                                                        "type": "simpleType",
                                                        "description": "The name of the institution (party). A free format string. FpML does not define usage rules for the element.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "quotationRateType": {
                                "type": "simpleType",
                                "description": "Which rate quote is to be observed, either Bid, Mid, Offer or Exercising Party Pays. The meaning of Exercising Party Pays is defined in the 2000 ISDA Definitions, Section 17.2. Certain Definitions Relating to Cash Settlement, paragraph (j)",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "weatherCalculationPeriods": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "calculationPeriod": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "calculationPeriodFirstDay": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodEndDay": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "weatherCalculationPeriodsReference": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "weatherNotionalAmount": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "weatherIndexStrikeLevel": {
                "type": "complexType",
                "description": "Weather Index strike price level is specified in terms of weather index units (e.g. 1 Days, 3\n                        Inches, etc.)",
                "python_type": "unknownType",
                "children": {
                    "quantity": {
                        "type": "simpleType",
                        "description": "This is the Reference Level. The CDD, HDD or HDD Reference Level is specified as the number of\n                        (amount of) Weather Index Units specified by the parties in the related Confirmation.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "unit": {
                        "type": "complexType",
                        "description": "Weather Index Unit derived from one of the following variable methods of determination: Cooling\n                        Degree Day (CDD), Heating Degree Day (HDD), Critical Precipitation Day (CPD) as defined in\n                        Section 11.15 of the 2005 ISDA Commodity Definitions and User Guide.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculation": {
                "type": "complexType",
                "description": "Contains parameters which figure in the calculation of payments on a Weather Index Option.",
                "python_type": "unknownType",
                "children": {
                    "settlementLevel": {
                        "type": "simpleType",
                        "description": "The Settlement Level means either the cumulative number of Weather Index Units for each day in\n                        the Calculation Period (Cumulative) or the cumulative number of Weather Index Units for each day\n                        in the Calculation Period divided by the number of days in the Calculation Period (Average) or\n                        the maximum number of Weather Index Units for any day in the Calculation Period (Maximum) or the\n                        minimum number of Weather Index Units for any day in the Calculation Period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "referenceLevelEqualsZero": {
                        "type": "simpleType",
                        "description": "If Reference Level Equals Zero is specified to be applicable then CPD means, for any day during\n                        the Calculation Period, (A) 1 if the Daily Precipitation for that day is greater than or equal\n                        to the CPD Reference Level or (B) zero if the the Daily Precipitation for that day is less than\n                        the CPD Reference Level. If Reference Level Equals Zero is specified not to be applicable then\n                        CPD means, for any day during the Calculation Period, (A) 1 if the Daily Precipitation for that\n                        day is greater than the CPD Reference Level or 0 if the Daily Precipitation for that day is less\n                        than or equal to the CPD Reference Level.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationDate": {
                        "type": "complexType",
                        "description": "The number of days following the final day of the Calculation Period specified in the\n                        Confirmation on which is is practicable to provide the notice that the Calculation Agent is\n                        required to give for that Settlement Date or Payment Date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "businessDays": {
                        "type": "complexType",
                        "description": "A day on which commmercial banks settle payments and are open for general business in the\n                        place(s) specified in the Confirmation. See Section 1.3 of the ISDA 2005 Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dataCorrection": {
                        "type": "simpleType",
                        "description": "The date payment often revised after its publication, this indicates if the payment date could\n                        be recalculated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "correctionPeriod": {
                        "type": "complexType",
                        "description": "If 'dataCorrection'=true, this indicates how long after the initial publication of the data\n                        corrections can be made.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "maximumPaymentAmount": {
                        "type": "complexType",
                        "description": "The maximum total payment amount that will be paid in any particular transaction.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "maximumTransactionPaymentAmount": {
                        "type": "complexType",
                        "description": "The maximum payment amount that will be paid in any particular Calculation Period.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "rounding": {
                        "type": "complexType",
                        "description": "Rounding direction and precision for price values.",
                        "python_type": "unknownType",
                        "children": {
                            "roundingDirection": {
                                "type": "simpleType",
                                "description": "Specifies the rounding direction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "precision": {
                                "type": "simpleType",
                                "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "weatherIndexData": {
                "type": "complexType",
                "description": "Specifies where the data (e.g. CPD) have been collected, an actual physical reference point\n                        (weather station) and various fall back arrangements.",
                "python_type": "unknownType",
                "children": {
                    "referenceLevel": {
                        "type": "complexType",
                        "description": "Reference level is the number of degree-days (in the case of HDD and CDD) or inches/millimeters\n                        (in the case of CPD) on which the differential is calculated. In the case of HDD it is the\n                        number of degree-days below this reference level. In the case of CDD it is the number of degree\n                        days above this reference level. In the case of CPD it is number of inches/millimeters above\n                        this reference level.",
                        "python_type": "unknownType",
                        "children": {
                            "amount": {
                                "type": "simpleType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "referenceLevelUnit": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "dataProvider": {
                        "type": "complexType",
                        "description": "The provider of either temperature data or precipitation data specified by the parties in the\n                        related Confirmation.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "finalEditedData": {
                        "type": "simpleType",
                        "description": "If specified by the parties to apply in the related Confirmation, Final Edited Data means that\n                        the parties will have recourse to Primary Disruption Fallbacks even if relevant data is\n                        available from the Data Provider, so long as such data is not published in its final edited\n                        form. Otherwise the parties will have recourse to Primary Disruption Fallbacks only if relevant\n                        data is unavailable from the Data Provider on a relevant day.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "weatherStation": {
                        "type": "complexType",
                        "description": "The source or sources of weather index data specified by the parties in the related\n                        Confirmation. Examples include: AU-CBM (the Commonwealth Bureau of Meteorology in Australia) and\n                        CM-SMI (the Swiss Meteorological Institute).",
                        "python_type": "unknownType",
                        "children": {
                            "weatherStationCity": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherStationAirport": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherStationWBAN": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherStationWMO": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "weatherStationFallback": {
                        "type": "complexType",
                        "description": "If weather index data is not available for the weather station specified by the parties in the\n                        related Confirmation, the first alternative Weather Index Station.",
                        "python_type": "unknownType",
                        "children": {
                            "weatherStationCity": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherStationAirport": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherStationWBAN": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherStationWMO": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "weatherStationSecondFallback": {
                        "type": "complexType",
                        "description": "If weather index data is neither available for the weather station specified by the parties in\n                        the related Confirmation nor the first alternative Weather Index Station, the second alternative\n                        Weather Index Station.",
                        "python_type": "unknownType",
                        "children": {
                            "weatherStationCity": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherStationAirport": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherStationWBAN": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherStationWMO": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "alternativeDataProvider": {
                        "type": "simpleType",
                        "description": "A provider of either temperature data or precipitation data specified by the parties in the\n                        related Confirmation. If the parties fail to specify an Alternative Data Provider, the \"Fallback\n                        Data\" Disruption Fallback will not apply.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "synopticDataFallback": {
                        "type": "simpleType",
                        "description": "If the parties specify \"Not Applicable\", the \"Synoptic Data\" Disruption Fallback will not apply.\n                        Synoptic Data means that maximum and/or minimum temperature or daily precipitation at the\n                        location for the Missing Data Day will be the maxium and/or minimum temperature or daily\n                        precipitation for that day at the Location (Weather Index Station) which has not been subject to\n                        ultimate quality control, integrity or verification process.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "adjustmentToFallbackWeatherStation": {
                        "type": "simpleType",
                        "description": "The Weather Index Station from which data with which to apply the \"Adjustement to Fallback\n                        Station Data\" terms. See Section 11.20 of the 2005 ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "primaryDisruptionFallbacks": {
                        "type": "complexType",
                        "description": "A list of actions available to the parties should a Primary Disruption Event occur. A Primary\n                        Disruption Event means if maximum or minimum temperature or precipitation data for a Missing\n                        Data Day is required to determine a Payment Amount then the maximum and/or minimum temperature\n                        or the daily precipitation for that day will be determined in accordance with the first\n                        applicable Primary Disruption Fallback.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "secondaryDisruptionFallbacks": {
                        "type": "complexType",
                        "description": "A list of actions available to the parties should a Secondary Disruption Event occur. A Primary\n                        Disruption Event means if maximum or minimum temperature or precipitation data for a Missing\n                        Data Day is required to determine a Payment Amount then the maximum and/or minimum temperature\n                        or the daily precipitation for that day will be determined in accordance with the first\n                        applicable Secondary Disruption Fallback.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "premium": {
                "type": "complexType",
                "description": "The option premium payable by the buyer to the seller.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "paymentDate": {
                        "type": "complexType",
                        "description": "The payment date, which can be expressed as either an adjustable or relative date.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDate": {
                                "type": "complexType",
                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A date specified as an offset to another date (the anchor date).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "paymentAmount": {
                        "type": "complexType",
                        "description": "Non negative payment amount.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "premiumPerUnit": {
                        "type": "complexType",
                        "description": "The currency amount of premium to be paid per Unit of the Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "commonPricing": {
                "type": "simpleType",
                "description": "If Common Pricing is elected (\u201ctrue\u201d) for a Transaction with referencing more than\n                        one Commodity Reference Price then no date will be a Pricing Date unless such a date is a day on\n                        which all Commodity Reference Prices are scheduled to be published.",
                "python_type": "unknownType",
                "children": {}
            },
            "marketDisruption": {
                "type": "complexType",
                "description": "Contains contract terms related to triggers and responses to market disruptions as defined in\n                        the 1993 or 2005 Commodity Definitions.",
                "python_type": "unknownType",
                "children": {
                    "marketDisruptionEvents": {
                        "type": "simpleType",
                        "description": "If Market disruption Events are stated to be Applicable then the default Market\n                                Disruption Events of Section 7.4(d)(i) of the ISDA Commodity Definitions shall apply\n                                unless specific Market Disruption Events are stated hereunder, in which case these shall\n                                override the ISDA defaults. If Market Disruption Events are stated to be Not Applicable,\n                                Market Disruption Events are not applicable to the trade at all. It is also possible to\n                                reference the Market Disruption Events set out in the relevant Master Agreement\n                                governing the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "additionalMarketDisruptionEvent": {
                        "type": "complexType",
                        "description": "To be used when marketDisruptionEvents is set to \"Applicable\" and additional market\n                                disruption events(s) apply to the default market disruption events of Section 7.4(d)(i)\n                                of the ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "marketDisruptionEvent": {
                        "type": "complexType",
                        "description": "Market disruption event(s) that apply. Note that these should only be specified if the\n                            default market disruption events of Section 7.4(d)(i) of the ISDA Commodity Definitions are\n                            to be overridden.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallbacks": {
                        "type": "simpleType",
                        "description": "To be used where disruption fallbacks are set out in the relevant Master Agreement governing\n                            the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallback": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "fallback": {
                                "type": "complexType",
                                "description": "Disruption fallback that applies to the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "sequence": {
                                "type": "simpleType",
                                "description": "Sequence in which the reference to the disruption fallback should be applied.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "fallbackReferencePrice": {
                        "type": "complexType",
                        "description": "A fallback commodity reference price for use when relying on Disruption Fallbacks in Section\n                        7.5(d)(i) of the ISDA Commodity Definitions or have selected \"Fallback Reference Price\" as a\n                        disruptionFallback.",
                        "python_type": "unknownType",
                        "children": {
                            "singleUnderlyer": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has only one asset component.",
                                "python_type": "unknownType",
                                "children": {
                                    "underlyingAsset": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dividendPayout": {
                                        "type": "complexType",
                                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "dividendPayoutRatio": {
                                                "type": "simpleType",
                                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioNonCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutConditions": {
                                                "type": "simpleType",
                                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming dividend payment or payments.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "couponPayment": {
                                        "type": "complexType",
                                        "description": "The next upcoming coupon payment.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "paymentDate": {
                                                "type": "simpleType",
                                                "description": "The date that the dividend or coupon is due.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "complexType",
                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "accruedInterest": {
                                                "type": "complexType",
                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averageDailyTradingVolume": {
                                        "type": "complexType",
                                        "description": "The average amount of individual securities traded in a day or over a specified amount of time.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "limitationPercentage": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation percentage in Average Daily trading volume. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "limitationPeriod": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation period for Average Daily trading volume in number of days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "depositoryReceipt": {
                                        "type": "simpleType",
                                        "description": "A Depository Receipt is a negotiable certificate issued by a trust company or security depository. This element is used to represent whether a Depository Receipt is applicable or not to the underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "basket": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has multiple asset components.",
                                "python_type": "unknownType",
                                "children": {
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketConstituent": {
                                        "type": "complexType",
                                        "description": "Describes each of the components of the basket.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "payerPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "payerAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "underlyingAsset": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "constituentWeight": {
                                                "type": "complexType",
                                                "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "openUnits": {
                                                        "type": "simpleType",
                                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketPercentage": {
                                                        "type": "simpleType",
                                                        "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketAmount": {
                                                        "type": "complexType",
                                                        "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dividendPayout": {
                                                "type": "complexType",
                                                "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "dividendPayoutRatio": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioNonCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutConditions": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming dividend payment or payments.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerPrice": {
                                                "type": "complexType",
                                                "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "commission": {
                                                        "type": "complexType",
                                                        "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "commissionDenomination": {
                                                                "type": "simpleType",
                                                                "description": "The type of units used to express a commission.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionAmount": {
                                                                "type": "simpleType",
                                                                "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionPerTrade": {
                                                                "type": "simpleType",
                                                                "description": "The total commission per trade.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "FX Rates that have been used to convert commissions to a single currency.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "determinationMethod": {
                                                        "type": "complexType",
                                                        "description": "Specifies the method according to which an amount or a date is determined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "grossPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, before commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "netPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, net of commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterestPrice": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "fxConversion": {
                                                        "type": "complexType",
                                                        "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "amountRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "Specifies a currency conversion rate.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "amountRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "cleanNetPrice": {
                                                        "type": "simpleType",
                                                        "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quotationCharacteristics": {
                                                        "type": "complexType",
                                                        "description": "Allows information about how the price was quoted to be provided.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "measureType": {
                                                                "type": "complexType",
                                                                "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quoteUnits": {
                                                                "type": "complexType",
                                                                "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "side": {
                                                                "type": "simpleType",
                                                                "description": "The side (bid/mid/ask) of the measure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currencyType": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "timing": {
                                                                "type": "complexType",
                                                                "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "A city or other business center.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "exchangeId": {
                                                                "type": "complexType",
                                                                "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "informationSource": {
                                                                "type": "complexType",
                                                                "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "rateSource": {
                                                                        "type": "complexType",
                                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePage": {
                                                                        "type": "complexType",
                                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePageHeading": {
                                                                        "type": "simpleType",
                                                                        "description": "The heading for the rate source on a given rate source page.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "pricingModel": {
                                                                "type": "complexType",
                                                                "description": ".",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "time": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was observed or when a calculated value was generated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "valuationDate": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was computed.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "expiryTime": {
                                                                "type": "simpleType",
                                                                "description": "When does the quote cease to be valid.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "cashflowType": {
                                                                "type": "complexType",
                                                                "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerNotional": {
                                                "type": "complexType",
                                                "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerSpread": {
                                                "type": "complexType",
                                                "description": "Provides a link to the spread schedule used for this underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "couponPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming coupon payment.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerFinancing": {
                                                "type": "complexType",
                                                "description": "Financing terms associated with this underlyer",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "legIdentifier": {
                                                        "type": "complexType",
                                                        "description": "Version aware identification of this leg.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "legId": {
                                                                "type": "complexType",
                                                                "description": "Identity of this leg.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "version": {
                                                                "type": "simpleType",
                                                                "description": "The version number",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "effectiveDate": {
                                                                "type": "complexType",
                                                                "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "payerPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "payerAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "effectiveDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "terminationDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "fixedRate": {
                                                        "type": "simpleType",
                                                        "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "spreadSchedule": {
                                                        "type": "complexType",
                                                        "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "initialValue": {
                                                                "type": "simpleType",
                                                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "step": {
                                                                "type": "complexType",
                                                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "stepDate": {
                                                                        "type": "simpleType",
                                                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "stepValue": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "type": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerLoanRate": {
                                                "type": "complexType",
                                                "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lossOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then loss of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "maximumStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "increasedCostOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then increased cost of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "initialStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerCollateral": {
                                                "type": "complexType",
                                                "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "independentAmount": {
                                                        "type": "complexType",
                                                        "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "payerPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "payerAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "paymentDetail": {
                                                                "type": "complexType",
                                                                "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "paymentDate": {
                                                                        "type": "complexType",
                                                                        "description": "Payment date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "adjustableDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "unadjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date subject to adjustment.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dateAdjustments": {
                                                                                        "type": "complexType",
                                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessDayConvention": {
                                                                                                "type": "simpleType",
                                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCentersReference": {
                                                                                                "type": "complexType",
                                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCenters": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessCenter": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "relativeDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "periodMultiplier": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "period": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dayType": {
                                                                                        "type": "simpleType",
                                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "dateRelativeTo": {
                                                                                        "type": "complexType",
                                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentAmount": {
                                                                        "type": "complexType",
                                                                        "description": "A fixed payment amount.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentRule": {
                                                                        "type": "complexType",
                                                                        "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "basketDivisor": {
                                        "type": "simpleType",
                                        "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketVersion": {
                                        "type": "simpleType",
                                        "description": "Basket version, used to record changes in basket composition or weights",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketName": {
                                        "type": "complexType",
                                        "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketId": {
                                        "type": "complexType",
                                        "description": "A CDS basket identifier",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketCurrency": {
                                        "type": "complexType",
                                        "description": "Specifies the currency for this basket.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "maximumNumberOfDaysOfDisruption": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. If omitted , the number of days specified in Section 7.6(a) of\n                        the Definitions will apply.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceMaterialityPercentage": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. To be used where a price materiality percentage applies to the\n                        \"Price Source Disruption\" event and this event has been specified by setting marketDisruption to\n                        true or including it in additionalMarketDisruptionEvent. A value expressed in percentage units\n                        i.e. 5 means 5%.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumFuturesContracts": {
                        "type": "simpleType",
                        "description": "1993 Commodity Definitions only. Specifies the Mimum Futures Contracts level that dictates\n                        whether or not a \"De Minimis Trading\" event has occurred. Only relevant if 'De Minimis Trading'\n                        has been specified in marketDisruptionEvent or additionalMarketDisruptionEvent.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementDisruption": {
                "type": "simpleType",
                "description": "Describes contract terms related to the consequences of Bullion Settlement Disruption Events.",
                "python_type": "unknownType",
                "children": {}
            },
            "rounding": {
                "type": "complexType",
                "description": "Rounding direction and precision for amounts.",
                "python_type": "unknownType",
                "children": {
                    "roundingDirection": {
                        "type": "simpleType",
                        "description": "Specifies the rounding direction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "precision": {
                        "type": "simpleType",
                        "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "commodityPerformanceSwap": {
        "type": "complexType",
        "description": "A swap the payoff of which is linked to the performance of the underlying asset. Examples of potential\n                performance features are return, correlation, covariance, variance and volatility.",
        "python_type": "unknownType",
        "children": {
            "primaryAssetClass": {
                "type": "complexType",
                "description": "A classification of the most important risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "secondaryAssetClass": {
                "type": "complexType",
                "description": "A classification of additional risk classes of the trade, if any. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productType": {
                "type": "complexType",
                "description": "A classification of the type of product. FpML defines a simple product categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productId": {
                "type": "complexType",
                "description": "A product reference identifier. The product ID is an identifier that describes the key economic characteristics of the trade type, with the exception of concepts such as size (notional, quantity, number of units) and price (fixed rate, strike, etc.) that are negotiated for each transaction. It can be used to hold identifiers such as the \"UPI\" (universal product identifier) required by certain regulatory reporting rules. It can also be used to hold identifiers of benchmark products or product temnplates used by certain trading systems or facilities. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
                "python_type": "unknownType",
                "children": {}
            },
            "assetClass": {
                "type": "complexType",
                "description": "A classification of the risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "effectiveDate": {
                "type": "complexType",
                "description": "Specifies the Eeffective Date of the swap. It is an optional element because not all\n                                confirmations of total return swaps specify an Effective Date. In these cases the Term\n                                of the contract begins on the Trade Date.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "terminationDate": {
                "type": "complexType",
                "description": "Specifies the Termination Date of the swap.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "settlementCurrency": {
                "type": "complexType",
                "description": "The currency in which the commodity performance swap transaction will settle. It is an\n                                optional element because not all confirmations of performance swaps specify a Settlement\n                                Currency.",
                "python_type": "unknownType",
                "children": {}
            },
            "commodityPerformanceSwapLeg": {
                "type": "complexType",
                "description": "An placeholder for the actual performance swap leg definitions.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "commonPricing": {
                "type": "simpleType",
                "description": "If Common Pricing is elected (\u201ctrue\u201d) for a Transaction with referencing more than\n                        one Commodity Reference Price then no date will be a Pricing Date unless such a date is a day on\n                        which all Commodity Reference Prices are scheduled to be published.",
                "python_type": "unknownType",
                "children": {}
            },
            "marketDisruption": {
                "type": "complexType",
                "description": "Contains contract terms related to triggers and responses to market disruptions as defined in\n                        the 1993 or 2005 Commodity Definitions.",
                "python_type": "unknownType",
                "children": {
                    "marketDisruptionEvents": {
                        "type": "simpleType",
                        "description": "If Market disruption Events are stated to be Applicable then the default Market\n                                Disruption Events of Section 7.4(d)(i) of the ISDA Commodity Definitions shall apply\n                                unless specific Market Disruption Events are stated hereunder, in which case these shall\n                                override the ISDA defaults. If Market Disruption Events are stated to be Not Applicable,\n                                Market Disruption Events are not applicable to the trade at all. It is also possible to\n                                reference the Market Disruption Events set out in the relevant Master Agreement\n                                governing the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "additionalMarketDisruptionEvent": {
                        "type": "complexType",
                        "description": "To be used when marketDisruptionEvents is set to \"Applicable\" and additional market\n                                disruption events(s) apply to the default market disruption events of Section 7.4(d)(i)\n                                of the ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "marketDisruptionEvent": {
                        "type": "complexType",
                        "description": "Market disruption event(s) that apply. Note that these should only be specified if the\n                            default market disruption events of Section 7.4(d)(i) of the ISDA Commodity Definitions are\n                            to be overridden.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallbacks": {
                        "type": "simpleType",
                        "description": "To be used where disruption fallbacks are set out in the relevant Master Agreement governing\n                            the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallback": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "fallback": {
                                "type": "complexType",
                                "description": "Disruption fallback that applies to the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "sequence": {
                                "type": "simpleType",
                                "description": "Sequence in which the reference to the disruption fallback should be applied.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "fallbackReferencePrice": {
                        "type": "complexType",
                        "description": "A fallback commodity reference price for use when relying on Disruption Fallbacks in Section\n                        7.5(d)(i) of the ISDA Commodity Definitions or have selected \"Fallback Reference Price\" as a\n                        disruptionFallback.",
                        "python_type": "unknownType",
                        "children": {
                            "singleUnderlyer": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has only one asset component.",
                                "python_type": "unknownType",
                                "children": {
                                    "underlyingAsset": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dividendPayout": {
                                        "type": "complexType",
                                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "dividendPayoutRatio": {
                                                "type": "simpleType",
                                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioNonCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutConditions": {
                                                "type": "simpleType",
                                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming dividend payment or payments.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "couponPayment": {
                                        "type": "complexType",
                                        "description": "The next upcoming coupon payment.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "paymentDate": {
                                                "type": "simpleType",
                                                "description": "The date that the dividend or coupon is due.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "complexType",
                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "accruedInterest": {
                                                "type": "complexType",
                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averageDailyTradingVolume": {
                                        "type": "complexType",
                                        "description": "The average amount of individual securities traded in a day or over a specified amount of time.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "limitationPercentage": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation percentage in Average Daily trading volume. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "limitationPeriod": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation period for Average Daily trading volume in number of days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "depositoryReceipt": {
                                        "type": "simpleType",
                                        "description": "A Depository Receipt is a negotiable certificate issued by a trust company or security depository. This element is used to represent whether a Depository Receipt is applicable or not to the underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "basket": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has multiple asset components.",
                                "python_type": "unknownType",
                                "children": {
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketConstituent": {
                                        "type": "complexType",
                                        "description": "Describes each of the components of the basket.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "payerPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "payerAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "underlyingAsset": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "constituentWeight": {
                                                "type": "complexType",
                                                "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "openUnits": {
                                                        "type": "simpleType",
                                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketPercentage": {
                                                        "type": "simpleType",
                                                        "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketAmount": {
                                                        "type": "complexType",
                                                        "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dividendPayout": {
                                                "type": "complexType",
                                                "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "dividendPayoutRatio": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioNonCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutConditions": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming dividend payment or payments.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerPrice": {
                                                "type": "complexType",
                                                "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "commission": {
                                                        "type": "complexType",
                                                        "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "commissionDenomination": {
                                                                "type": "simpleType",
                                                                "description": "The type of units used to express a commission.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionAmount": {
                                                                "type": "simpleType",
                                                                "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionPerTrade": {
                                                                "type": "simpleType",
                                                                "description": "The total commission per trade.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "FX Rates that have been used to convert commissions to a single currency.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "determinationMethod": {
                                                        "type": "complexType",
                                                        "description": "Specifies the method according to which an amount or a date is determined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "grossPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, before commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "netPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, net of commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterestPrice": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "fxConversion": {
                                                        "type": "complexType",
                                                        "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "amountRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "Specifies a currency conversion rate.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "amountRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "cleanNetPrice": {
                                                        "type": "simpleType",
                                                        "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quotationCharacteristics": {
                                                        "type": "complexType",
                                                        "description": "Allows information about how the price was quoted to be provided.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "measureType": {
                                                                "type": "complexType",
                                                                "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quoteUnits": {
                                                                "type": "complexType",
                                                                "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "side": {
                                                                "type": "simpleType",
                                                                "description": "The side (bid/mid/ask) of the measure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currencyType": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "timing": {
                                                                "type": "complexType",
                                                                "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "A city or other business center.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "exchangeId": {
                                                                "type": "complexType",
                                                                "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "informationSource": {
                                                                "type": "complexType",
                                                                "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "rateSource": {
                                                                        "type": "complexType",
                                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePage": {
                                                                        "type": "complexType",
                                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePageHeading": {
                                                                        "type": "simpleType",
                                                                        "description": "The heading for the rate source on a given rate source page.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "pricingModel": {
                                                                "type": "complexType",
                                                                "description": ".",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "time": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was observed or when a calculated value was generated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "valuationDate": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was computed.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "expiryTime": {
                                                                "type": "simpleType",
                                                                "description": "When does the quote cease to be valid.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "cashflowType": {
                                                                "type": "complexType",
                                                                "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerNotional": {
                                                "type": "complexType",
                                                "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerSpread": {
                                                "type": "complexType",
                                                "description": "Provides a link to the spread schedule used for this underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "couponPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming coupon payment.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerFinancing": {
                                                "type": "complexType",
                                                "description": "Financing terms associated with this underlyer",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "legIdentifier": {
                                                        "type": "complexType",
                                                        "description": "Version aware identification of this leg.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "legId": {
                                                                "type": "complexType",
                                                                "description": "Identity of this leg.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "version": {
                                                                "type": "simpleType",
                                                                "description": "The version number",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "effectiveDate": {
                                                                "type": "complexType",
                                                                "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "payerPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "payerAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "effectiveDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "terminationDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "fixedRate": {
                                                        "type": "simpleType",
                                                        "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "spreadSchedule": {
                                                        "type": "complexType",
                                                        "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "initialValue": {
                                                                "type": "simpleType",
                                                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "step": {
                                                                "type": "complexType",
                                                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "stepDate": {
                                                                        "type": "simpleType",
                                                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "stepValue": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "type": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerLoanRate": {
                                                "type": "complexType",
                                                "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lossOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then loss of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "maximumStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "increasedCostOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then increased cost of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "initialStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerCollateral": {
                                                "type": "complexType",
                                                "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "independentAmount": {
                                                        "type": "complexType",
                                                        "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "payerPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "payerAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "paymentDetail": {
                                                                "type": "complexType",
                                                                "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "paymentDate": {
                                                                        "type": "complexType",
                                                                        "description": "Payment date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "adjustableDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "unadjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date subject to adjustment.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dateAdjustments": {
                                                                                        "type": "complexType",
                                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessDayConvention": {
                                                                                                "type": "simpleType",
                                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCentersReference": {
                                                                                                "type": "complexType",
                                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCenters": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessCenter": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "relativeDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "periodMultiplier": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "period": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dayType": {
                                                                                        "type": "simpleType",
                                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "dateRelativeTo": {
                                                                                        "type": "complexType",
                                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentAmount": {
                                                                        "type": "complexType",
                                                                        "description": "A fixed payment amount.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentRule": {
                                                                        "type": "complexType",
                                                                        "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "basketDivisor": {
                                        "type": "simpleType",
                                        "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketVersion": {
                                        "type": "simpleType",
                                        "description": "Basket version, used to record changes in basket composition or weights",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketName": {
                                        "type": "complexType",
                                        "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketId": {
                                        "type": "complexType",
                                        "description": "A CDS basket identifier",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketCurrency": {
                                        "type": "complexType",
                                        "description": "Specifies the currency for this basket.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "maximumNumberOfDaysOfDisruption": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. If omitted , the number of days specified in Section 7.6(a) of\n                        the Definitions will apply.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceMaterialityPercentage": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. To be used where a price materiality percentage applies to the\n                        \"Price Source Disruption\" event and this event has been specified by setting marketDisruption to\n                        true or including it in additionalMarketDisruptionEvent. A value expressed in percentage units\n                        i.e. 5 means 5%.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumFuturesContracts": {
                        "type": "simpleType",
                        "description": "1993 Commodity Definitions only. Specifies the Mimum Futures Contracts level that dictates\n                        whether or not a \"De Minimis Trading\" event has occurred. Only relevant if 'De Minimis Trading'\n                        has been specified in marketDisruptionEvent or additionalMarketDisruptionEvent.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementDisruption": {
                "type": "simpleType",
                "description": "Describes contract terms related to the consequences of Bullion Settlement Disruption Events.",
                "python_type": "unknownType",
                "children": {}
            },
            "rounding": {
                "type": "complexType",
                "description": "Rounding direction and precision for amounts.",
                "python_type": "unknownType",
                "children": {
                    "roundingDirection": {
                        "type": "simpleType",
                        "description": "Specifies the rounding direction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "precision": {
                        "type": "simpleType",
                        "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "earlyTermination": {
                "type": "complexType",
                "description": "Specifies, for one or for both the parties to the trade, the date prior to the\n                                Termination Date from which the contract can be terminated.",
                "python_type": "unknownType",
                "children": {
                    "partyReference": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "startingDate": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Reference to a party defined elsewhere in this document which may be allowed to terminate the\n                        trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustableDate": {
                                "type": "complexType",
                                "description": "Date from which early termination clause can be exercised.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "commodityPerformanceSwapLeg": {
        "type": "complexType",
        "description": "A placeholder within 'commodityPerformanceSwap' structure for the actual commodity swap legs (e.g.\n                'commodityReturnLeg' and 'commodityInterestLeg').",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "commodityReturnLeg": {
        "type": "complexType",
        "description": "Specifies the return payments of a commodity return swap. There can be one or two return legs. In simple\n                return swaps there is a return leg and an interest (a.k.a. 'fee') leg. In the case of a outperformance\n                swap there are two return legs: the return performance of two commodity underlyers are swapped. In the\n                case of a fully-funded return swap there is no financing component and, therefore, only a single return\n                leg is specified.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationDates": {
                "type": "complexType",
                "description": "The Calculation Period dates for this leg of the trade where the Calculation Periods are all one\n                        day long. Only dates explicitly included determine the Calculation Periods and there is a\n                        Calculation Period for each date specified. As such one-day Calculation Period are typical a\n                        physically-settled emissions or metals trades it is expected that this element will not be used\n                        in performance swaps.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriods": {
                "type": "complexType",
                "description": "The Calculation Period start dates for this leg of the swap. This type is only intended to be\n                        used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg,\n                        then the calculationPeriodsReference element should be used to point to the Calculation Periods\n                        on that leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriodsSchedule": {
                "type": "complexType",
                "description": "The Calculation Periods for this leg of the swap. This type is only intended to be used if the\n                        Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the\n                        calculationPeriodsReference element should be used to point to the Calculation Periods on the\n                        other leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "balanceOfFirstPeriod": {
                        "type": "simpleType",
                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriodsReference": {
                "type": "complexType",
                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationPeriodsScheduleReference": {
                "type": "complexType",
                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationPeriodsDatesReference": {
                "type": "complexType",
                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "relativePaymentDates": {
                "type": "complexType",
                "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                "python_type": "unknownType",
                "children": {
                    "payRelativeTo": {
                        "type": "simpleType",
                        "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payRelativeToEvent": {
                        "type": "complexType",
                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "paymentDaysOffset": {
                        "type": "complexType",
                        "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "businessCentersReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenters": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "businessCenter": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "paymentDates": {
                "type": "complexType",
                "description": "Dates on which payments will be made.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDates": {
                        "type": "complexType",
                        "description": "A series of adjustable dates",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A series of dates specified as a repeating sequence from a base date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "masterAgreementPaymentDates": {
                "type": "simpleType",
                "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                "python_type": "unknownType",
                "children": {}
            },
            "commodity": {
                "type": "complexType",
                "description": "Describes the swap's underlyer when it has only one asset component.",
                "python_type": "unknownType",
                "children": {
                    "instrumentId": {
                        "type": "complexType",
                        "description": "Identification of the underlying asset, using public and/or private identifiers.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "instrumentType": {
                        "type": "complexType",
                        "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "description": {
                        "type": "simpleType",
                        "description": "Long name of the underlying asset.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodityBase": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodityDetails": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "unit": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "exchangeId": {
                        "type": "complexType",
                        "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "publication": {
                        "type": "complexType",
                        "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                        "python_type": "unknownType",
                        "children": {
                            "rateSource": {
                                "type": "complexType",
                                "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePage": {
                                "type": "complexType",
                                "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePageHeading": {
                                "type": "simpleType",
                                "description": "The heading for the rate source on a given rate source page or screen.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "specifiedPrice": {
                        "type": "simpleType",
                        "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryDates": {
                        "type": "simpleType",
                        "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryNearby": {
                        "type": "complexType",
                        "description": "A container for the parametric representation of nearby contracts.",
                        "python_type": "unknownType",
                        "children": {
                            "deliveryNearbyMultiplier": {
                                "type": "simpleType",
                                "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryNearbyType": {
                                "type": "simpleType",
                                "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDate": {
                        "type": "complexType",
                        "description": "The Delivery Date is a fixed, single day.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDateYearMonth": {
                        "type": "simpleType",
                        "description": "The Delivery Date is a fixed, single month.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryDateRollConvention": {
                        "type": "complexType",
                        "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDateExpirationConvention": {
                        "type": "complexType",
                        "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "multiplier": {
                        "type": "simpleType",
                        "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "commodityBasket": {
                "type": "complexType",
                "description": "Describes the swap's underlyer when it has multiple asset components.",
                "python_type": "unknownType",
                "children": {
                    "basketName": {
                        "type": "complexType",
                        "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "basketId": {
                        "type": "complexType",
                        "description": "A CDS basket identifier",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "notionalQuantityBasket": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "underlying": {
                                "type": "complexType",
                                "description": "Indicates the role of the option buyer with regard to this underlyer.",
                                "python_type": "unknownType",
                                "children": {
                                    "direction": {
                                        "type": "simpleType",
                                        "description": "Indicates the role of the option buyer with regard to this underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commodity": {
                                        "type": "complexType",
                                        "description": "Specifies the underlying component. At the time of the initial schema design, only underlyers of\n                        type Commodity are supported; the choice group in the future could offer the possibility of\n                        adding other types later.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "instrumentId": {
                                                "type": "complexType",
                                                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "instrumentType": {
                                                "type": "complexType",
                                                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "description": {
                                                "type": "simpleType",
                                                "description": "Long name of the underlying asset.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "commodityBase": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "commodityDetails": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "unit": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "exchangeId": {
                                                "type": "complexType",
                                                "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "publication": {
                                                "type": "complexType",
                                                "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "rateSource": {
                                                        "type": "complexType",
                                                        "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePage": {
                                                        "type": "complexType",
                                                        "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePageHeading": {
                                                        "type": "simpleType",
                                                        "description": "The heading for the rate source on a given rate source page or screen.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "specifiedPrice": {
                                                "type": "simpleType",
                                                "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryDates": {
                                                "type": "simpleType",
                                                "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryNearby": {
                                                "type": "complexType",
                                                "description": "A container for the parametric representation of nearby contracts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "deliveryNearbyMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "deliveryNearbyType": {
                                                        "type": "simpleType",
                                                        "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDate": {
                                                "type": "complexType",
                                                "description": "The Delivery Date is a fixed, single day.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDateYearMonth": {
                                                "type": "simpleType",
                                                "description": "The Delivery Date is a fixed, single month.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryDateRollConvention": {
                                                "type": "complexType",
                                                "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDateExpirationConvention": {
                                                "type": "complexType",
                                                "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "multiplier": {
                                                "type": "simpleType",
                                                "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "pricingDates": {
                                        "type": "complexType",
                                        "description": "The dates on which the option will price.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "lag": {
                                                "type": "complexType",
                                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lagDuration": {
                                                        "type": "complexType",
                                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "firstObservationDateOffset": {
                                                        "type": "complexType",
                                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "The type of day on which pricing occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayDistribution": {
                                                "type": "complexType",
                                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayCount": {
                                                "type": "simpleType",
                                                "description": "The number of days over which pricing should take place.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayOfWeek": {
                                                "type": "simpleType",
                                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayNumber": {
                                                "type": "simpleType",
                                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCalendar": {
                                                "type": "complexType",
                                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calendarSource": {
                                                "type": "simpleType",
                                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "settlementPeriods": {
                                                "type": "complexType",
                                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "duration": {
                                                        "type": "simpleType",
                                                        "description": "The length of each Settlement Period.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "applicableDay": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "startTime": {
                                                        "type": "complexType",
                                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "time": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "hourMinuteTime": {
                                                                        "type": "simpleType",
                                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "location": {
                                                                        "type": "complexType",
                                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "offset": {
                                                                "type": "complexType",
                                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "endTime": {
                                                        "type": "complexType",
                                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "time": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "hourMinuteTime": {
                                                                        "type": "simpleType",
                                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "location": {
                                                                        "type": "complexType",
                                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "offset": {
                                                                "type": "complexType",
                                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "timeDuration": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "excludeHolidays": {
                                                        "type": "complexType",
                                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "includeHolidays": {
                                                        "type": "complexType",
                                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "settlementPeriodsReference": {
                                                "type": "complexType",
                                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "pricingDates": {
                                                "type": "complexType",
                                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averagingMethod": {
                                        "type": "simpleType",
                                        "description": "The Method of Averaging if there is more than one Pricing Date.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "fx": {
                                        "type": "complexType",
                                        "description": "FX observations to be used to convert the observed Commodity Reference Price to the\n                                Settlement Currency.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "primaryRateSource": {
                                                "type": "complexType",
                                                "description": "The primary source for where the rate observation will occur. Will typically be either a page or\n                        a reference bank published rate.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "rateSource": {
                                                        "type": "complexType",
                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePage": {
                                                        "type": "complexType",
                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePageHeading": {
                                                        "type": "simpleType",
                                                        "description": "The heading for the rate source on a given rate source page.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "secondaryRateSource": {
                                                "type": "complexType",
                                                "description": "An alternative, or secondary, source for where the rate observation will occur. Will typically\n                        be either a page or a reference bank published rate.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "rateSource": {
                                                        "type": "complexType",
                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePage": {
                                                        "type": "complexType",
                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePageHeading": {
                                                        "type": "simpleType",
                                                        "description": "The heading for the rate source on a given rate source page.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "fxType": {
                                                "type": "complexType",
                                                "description": "A type to identify how the FX rate will be applied. This is intended to differentiate between\n                        the various methods for applying FX to the floating price such as a daily calculation, or\n                        averaging the FX and applying the average at the end of each CalculationPeriod.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "averagingMethod": {
                                                "type": "simpleType",
                                                "description": "The parties may specify a Method of Averaging when averaging of the FX rate is applicable.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "fixingTime": {
                                                "type": "complexType",
                                                "description": "The time at which the spot currency exchange rate will be observed. It is specified as a\n                                time in a specific business center, e.g. 11:00am London time.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "fxObservationDates": {
                                                "type": "complexType",
                                                "description": "A list of the fx observation dates for a given Calculation Period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "The type of day on which pricing occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayDistribution": {
                                                "type": "complexType",
                                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayCount": {
                                                "type": "simpleType",
                                                "description": "The number of days over which pricing should take place.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayOfWeek": {
                                                "type": "simpleType",
                                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayNumber": {
                                                "type": "simpleType",
                                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "lag": {
                                                "type": "complexType",
                                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within the\n                        respective calculation period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lagDuration": {
                                                        "type": "complexType",
                                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "firstObservationDateOffset": {
                                                        "type": "complexType",
                                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "lagReference": {
                                                "type": "complexType",
                                                "description": "Allows a lag to reference one already defined elsewhere in the trade.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "conversionFactor": {
                                        "type": "simpleType",
                                        "description": "If the Notional Quantity is specified in a unit that does not match the unit in which\n                                the Commodity Reference Price is quoted, the scaling or conversion factor used to\n                                convert the Commodity Reference Price unit into the Notional Quantity unit should be\n                                stated here. If there is no conversion, this element is not intended to be used.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "notionalQuantitySchedule": {
                                        "type": "complexType",
                                        "description": "Allows the documentation of a shaped notional trade where the notional changes over the\n                                life of the transaction.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "notionalStep": {
                                                "type": "complexType",
                                                "description": "The Notional Quantity per Calculation Period. There must be a Notional Quantity specified\n                            for each Calculation Period, regardless of whether the quantity changes or remains the same\n                            between periods.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "quantityUnit": {
                                                        "type": "complexType",
                                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quantityFrequency": {
                                                        "type": "complexType",
                                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quantity": {
                                                        "type": "simpleType",
                                                        "description": "Amount of commodity per quantity frequency.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "settlementPeriodsNotionalQuantitySchedule": {
                                                "type": "complexType",
                                                "description": "For an electricity transaction, the Notional Quantity schedule for a one or more groups of\n                            Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                            different groups of Settlement Periods, this element should be repeated.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "settlementPeriodsNotionalQuantityStep": {
                                                        "type": "complexType",
                                                        "description": "For an electricity transaction, the Notional Quantity for a given Calculation Period during the\n                        life of the trade which applies to the range(s) of Settlement Periods referenced by\n                        settlementPeriodsReference. There must be a settlementPeriodsNotionalQuantityStep specified for\n                        each Calculation Period, regardless of whether the NotionalQuantity changes or remains the same\n                        between periods.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "quantityUnit": {
                                                                "type": "complexType",
                                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quantityFrequency": {
                                                                "type": "complexType",
                                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quantity": {
                                                                "type": "simpleType",
                                                                "description": "Amount of commodity per quantity frequency.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "settlementPeriodsReference": {
                                                        "type": "complexType",
                                                        "description": "The range(s) of Settlement Periods to which the Fixed Price steps apply.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "notionalQuantity": {
                                        "type": "complexType",
                                        "description": "The Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "settlementPeriodsNotionalQuantity": {
                                        "type": "complexType",
                                        "description": "For an electricity transaction, the Notional Quantity for a one or more groups of\n                                Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                                different groups of Settlement Periods, this element should be repeated.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "settlementPeriodsReference": {
                                                "type": "complexType",
                                                "description": "The range(s) of Settlement Periods to which the Notional Quantity applies.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "totalNotionalQuantity": {
                                        "type": "simpleType",
                                        "description": "The Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a quantity defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "notionalAmountBasket": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "underlying": {
                                "type": "complexType",
                                "description": "Indicates the role of the option buyer with regard to this underlyer.",
                                "python_type": "unknownType",
                                "children": {
                                    "direction": {
                                        "type": "simpleType",
                                        "description": "Indicates the role of the option buyer with regard to this underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commodity": {
                                        "type": "complexType",
                                        "description": "Specifies the underlying component. At the time of the initial schema design, only underlyers of\n                        type Commodity are supported; the choice group in the future could offer the possibility of\n                        adding other types later.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "instrumentId": {
                                                "type": "complexType",
                                                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "instrumentType": {
                                                "type": "complexType",
                                                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "description": {
                                                "type": "simpleType",
                                                "description": "Long name of the underlying asset.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "commodityBase": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "commodityDetails": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "unit": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "exchangeId": {
                                                "type": "complexType",
                                                "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "publication": {
                                                "type": "complexType",
                                                "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "rateSource": {
                                                        "type": "complexType",
                                                        "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePage": {
                                                        "type": "complexType",
                                                        "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePageHeading": {
                                                        "type": "simpleType",
                                                        "description": "The heading for the rate source on a given rate source page or screen.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "specifiedPrice": {
                                                "type": "simpleType",
                                                "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryDates": {
                                                "type": "simpleType",
                                                "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryNearby": {
                                                "type": "complexType",
                                                "description": "A container for the parametric representation of nearby contracts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "deliveryNearbyMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "deliveryNearbyType": {
                                                        "type": "simpleType",
                                                        "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDate": {
                                                "type": "complexType",
                                                "description": "The Delivery Date is a fixed, single day.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDateYearMonth": {
                                                "type": "simpleType",
                                                "description": "The Delivery Date is a fixed, single month.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryDateRollConvention": {
                                                "type": "complexType",
                                                "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDateExpirationConvention": {
                                                "type": "complexType",
                                                "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "multiplier": {
                                                "type": "simpleType",
                                                "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "pricingDates": {
                                        "type": "complexType",
                                        "description": "The dates on which the option will price.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "lag": {
                                                "type": "complexType",
                                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lagDuration": {
                                                        "type": "complexType",
                                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "firstObservationDateOffset": {
                                                        "type": "complexType",
                                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "The type of day on which pricing occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayDistribution": {
                                                "type": "complexType",
                                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayCount": {
                                                "type": "simpleType",
                                                "description": "The number of days over which pricing should take place.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayOfWeek": {
                                                "type": "simpleType",
                                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayNumber": {
                                                "type": "simpleType",
                                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCalendar": {
                                                "type": "complexType",
                                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calendarSource": {
                                                "type": "simpleType",
                                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "settlementPeriods": {
                                                "type": "complexType",
                                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "duration": {
                                                        "type": "simpleType",
                                                        "description": "The length of each Settlement Period.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "applicableDay": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "startTime": {
                                                        "type": "complexType",
                                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "time": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "hourMinuteTime": {
                                                                        "type": "simpleType",
                                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "location": {
                                                                        "type": "complexType",
                                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "offset": {
                                                                "type": "complexType",
                                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "endTime": {
                                                        "type": "complexType",
                                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "time": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "hourMinuteTime": {
                                                                        "type": "simpleType",
                                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "location": {
                                                                        "type": "complexType",
                                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "offset": {
                                                                "type": "complexType",
                                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "timeDuration": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "excludeHolidays": {
                                                        "type": "complexType",
                                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "includeHolidays": {
                                                        "type": "complexType",
                                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "settlementPeriodsReference": {
                                                "type": "complexType",
                                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "pricingDates": {
                                                "type": "complexType",
                                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averagingMethod": {
                                        "type": "simpleType",
                                        "description": "The Method of Averaging if there is more than one Pricing Date.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "constituentWeight": {
                                        "type": "simpleType",
                                        "description": "If the Notional Quantity is specified in a unit that does not match the unit in which\n                                the Commodity Reference Price is quoted, the scaling or conversion factor used to\n                                convert the Commodity Reference Price unit into the Notional Quantity unit should be\n                                stated here. If there is no conversion, this element is not intended to be used.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "notionalAmount": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The non negative monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "notionalAmount": {
                "type": "complexType",
                "description": "Specifies the notional amount of a commodity performance type swap. It is a\n                                    currency-denominated value (i.e. price-times-quantity). In confirmations is also\n                                    referred to as the Notional Quantity (sic, expressed in currency units), Notional\n                                    Amount, Equity Notional Amount and, in the case of reinvesting swaps, Initial\n                                    Notional Amount.",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "reinvestmentFeature": {
                        "type": "simpleType",
                        "description": "This element indicates whether the notional amount (or equivalent) is constant across\n                                each Calculation Period or whether the notional amount in each Calculation Period\n                                (\"false\") is the notional amount in the previous period multiplied by 1 + commodity\n                                index return in the current period (\"true\"). In cases where reinstementFeature = true\n                                the 'amount' element is the Initial Notional Amount (or equivalent).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "notionalAmountReference": {
                "type": "complexType",
                "description": "A reference to the Return swap notional amount defined in another leg of the return\n                                    swap.",
                "python_type": "unknownType",
                "children": {}
            },
            "commodityReturnCalculation": {
                "type": "complexType",
                "description": "Specifies, in relation to each Payment Date, the return percentage which, when\n                                multiplied times the notional amount is the amount to which the Payment Date relates.",
                "python_type": "unknownType",
                "children": {
                    "formula": {
                        "type": "simpleType",
                        "description": "Defines the value of the commodity return calculation formula as simple or compound.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "pricingDates": {
                        "type": "complexType",
                        "description": "Describes which dates are valid dates on which to observe a price or index level",
                        "python_type": "unknownType",
                        "children": {
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCalendar": {
                                "type": "complexType",
                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calendarSource": {
                                "type": "simpleType",
                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementPeriods": {
                                "type": "complexType",
                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                "python_type": "unknownType",
                                "children": {
                                    "duration": {
                                        "type": "simpleType",
                                        "description": "The length of each Settlement Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "applicableDay": {
                                        "type": "simpleType",
                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "startTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "endTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "timeDuration": {
                                        "type": "simpleType",
                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "excludeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "includeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "pricingDates": {
                                "type": "complexType",
                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "valuationDates": {
                        "type": "complexType",
                        "description": "Defines when a price or index level will be observed that will figure in the return calculation.",
                        "python_type": "unknownType",
                        "children": {
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCalendar": {
                                "type": "complexType",
                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calendarSource": {
                                "type": "simpleType",
                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementPeriods": {
                                "type": "complexType",
                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                "python_type": "unknownType",
                                "children": {
                                    "duration": {
                                        "type": "simpleType",
                                        "description": "The length of each Settlement Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "applicableDay": {
                                        "type": "simpleType",
                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "startTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "endTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "timeDuration": {
                                        "type": "simpleType",
                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "excludeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "includeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "valuationDates": {
                                "type": "complexType",
                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "initialPrice": {
                        "type": "simpleType",
                        "description": "If specified in the confirmation, the price or index level at the beginning of the initial\n                        Calculation Period. For example, if the return calculation is [(Index End / Index Begin) - 1]\n                        and Index Begin is defined as equal to Index End for the immediately preceeding Calculation\n                        Period, then the value of Index Begin in the very first Calculation Period is not defined and is\n                        usually specified in the confirmation.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "commoditySwap": {
        "type": "complexType",
        "description": "Defines a commodity swap product.",
        "python_type": "unknownType",
        "children": {
            "primaryAssetClass": {
                "type": "complexType",
                "description": "A classification of the most important risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "secondaryAssetClass": {
                "type": "complexType",
                "description": "A classification of additional risk classes of the trade, if any. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productType": {
                "type": "complexType",
                "description": "A classification of the type of product. FpML defines a simple product categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productId": {
                "type": "complexType",
                "description": "A product reference identifier. The product ID is an identifier that describes the key economic characteristics of the trade type, with the exception of concepts such as size (notional, quantity, number of units) and price (fixed rate, strike, etc.) that are negotiated for each transaction. It can be used to hold identifiers such as the \"UPI\" (universal product identifier) required by certain regulatory reporting rules. It can also be used to hold identifiers of benchmark products or product temnplates used by certain trading systems or facilities. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
                "python_type": "unknownType",
                "children": {}
            },
            "assetClass": {
                "type": "complexType",
                "description": "A classification of the risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "effectiveDate": {
                "type": "complexType",
                "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date\n                        specified somewhere else in the document (through the relativeDate component), this element will\n                        typically point to the effective date of the other leg of the swap.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "terminationDate": {
                "type": "complexType",
                "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date\n                        specified somewhere else in the document (through the relativeDate component), this element will\n                        typically point to the termination date of the other leg of the swap.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "settlementCurrency": {
                "type": "complexType",
                "description": "The currency into which the Commodity Swap Transaction will settle. If this is not the same as\n                        the currency in which the Commodity Reference Price is quoted on a given floating leg of the\n                        Commodity Swap Transaction, then an FX rate should also be specified for that leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "commoditySwapLeg": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "weatherLeg": {
                "type": "complexType",
                "description": "A weather leg element of a Commodity Swap defines Weather Index Swap transactions. Weather\n                            Index Swap transactions are OTC derivative transactions which settle financially based on an\n                            index calculated from observations of temperature, precipitation and other weather-related\n                            measurements at weather stations throughout the world. Sub-Annex C of the 2005 ISDA\n                            Commodity Definitions provides definitions and terms for a number of types of weather\n                            indices. These indices include: HDD (heating degree days), CDD (cooling degree days), CPD\n                            (critical precipitation days). Weather Index Swap transactions result in a cash flow to one\n                            of the two counterparties each Calculation Period depending on the relationship between the\n                            Settlement Level and the Weather Index Level. A Weather Index swap transaction always\n                            consists of a commodity swap element as a parent to two weatherLeg elements.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "weatherIndexLevel": {
                        "type": "complexType",
                        "description": "Defining the Weather Index Level or Weather Index Strike Level.",
                        "python_type": "unknownType",
                        "children": {
                            "quantity": {
                                "type": "simpleType",
                                "description": "This is the Reference Level. The CDD, HDD or HDD Reference Level is specified as the number of\n                        (amount of) Weather Index Units specified by the parties in the related Confirmation.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "unit": {
                                "type": "complexType",
                                "description": "Weather Index Unit derived from one of the following variable methods of determination: Cooling\n                        Degree Day (CDD), Heating Degree Day (HDD), Critical Precipitation Day (CPD) as defined in\n                        Section 11.15 of the 2005 ISDA Commodity Definitions and User Guide.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "weatherCalculationPeriods": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "calculationPeriod": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "calculationPeriodFirstDay": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodEndDay": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "weatherCalculationPeriodsReference": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "weatherNotionalAmount": {
                        "type": "complexType",
                        "description": "Defines the price per weather index unit.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculation": {
                        "type": "complexType",
                        "description": "Defines details relevant to the calculation of the aggregate weather index amount.",
                        "python_type": "unknownType",
                        "children": {
                            "settlementLevel": {
                                "type": "simpleType",
                                "description": "The Settlement Level means either the cumulative number of Weather Index Units for each day in\n                        the Calculation Period (Cumulative) or the cumulative number of Weather Index Units for each day\n                        in the Calculation Period divided by the number of days in the Calculation Period (Average) or\n                        the maximum number of Weather Index Units for any day in the Calculation Period (Maximum) or the\n                        minimum number of Weather Index Units for any day in the Calculation Period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "referenceLevelEqualsZero": {
                                "type": "simpleType",
                                "description": "If Reference Level Equals Zero is specified to be applicable then CPD means, for any day during\n                        the Calculation Period, (A) 1 if the Daily Precipitation for that day is greater than or equal\n                        to the CPD Reference Level or (B) zero if the the Daily Precipitation for that day is less than\n                        the CPD Reference Level. If Reference Level Equals Zero is specified not to be applicable then\n                        CPD means, for any day during the Calculation Period, (A) 1 if the Daily Precipitation for that\n                        day is greater than the CPD Reference Level or 0 if the Daily Precipitation for that day is less\n                        than or equal to the CPD Reference Level.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationDate": {
                                "type": "complexType",
                                "description": "The number of days following the final day of the Calculation Period specified in the\n                        Confirmation on which is is practicable to provide the notice that the Calculation Agent is\n                        required to give for that Settlement Date or Payment Date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "businessDays": {
                                "type": "complexType",
                                "description": "A day on which commmercial banks settle payments and are open for general business in the\n                        place(s) specified in the Confirmation. See Section 1.3 of the ISDA 2005 Commodity Definitions.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dataCorrection": {
                                "type": "simpleType",
                                "description": "The date payment often revised after its publication, this indicates if the payment date could\n                        be recalculated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "correctionPeriod": {
                                "type": "complexType",
                                "description": "If 'dataCorrection'=true, this indicates how long after the initial publication of the data\n                        corrections can be made.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "maximumPaymentAmount": {
                                "type": "complexType",
                                "description": "The maximum total payment amount that will be paid in any particular transaction.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The non negative monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "maximumTransactionPaymentAmount": {
                                "type": "complexType",
                                "description": "The maximum payment amount that will be paid in any particular Calculation Period.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The non negative monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "rounding": {
                                "type": "complexType",
                                "description": "Rounding direction and precision for price values.",
                                "python_type": "unknownType",
                                "children": {
                                    "roundingDirection": {
                                        "type": "simpleType",
                                        "description": "Specifies the rounding direction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "precision": {
                                        "type": "simpleType",
                                        "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "paymentDates": {
                        "type": "complexType",
                        "description": "The Payment Dates of the trade relative to the Calculation Periods or Calculation Date",
                        "python_type": "unknownType",
                        "children": {
                            "payRelativeTo": {
                                "type": "simpleType",
                                "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payRelativeToEvent": {
                                "type": "complexType",
                                "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "paymentDaysOffset": {
                                "type": "complexType",
                                "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "weatherIndexData": {
                        "type": "complexType",
                        "description": "Specifies where the data (e.g. CPD) have been collected, an actual physical reference\n                                point (weather station) and various fall back arrangements.",
                        "python_type": "unknownType",
                        "children": {
                            "referenceLevel": {
                                "type": "complexType",
                                "description": "Reference level is the number of degree-days (in the case of HDD and CDD) or inches/millimeters\n                        (in the case of CPD) on which the differential is calculated. In the case of HDD it is the\n                        number of degree-days below this reference level. In the case of CDD it is the number of degree\n                        days above this reference level. In the case of CPD it is number of inches/millimeters above\n                        this reference level.",
                                "python_type": "unknownType",
                                "children": {
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "referenceLevelUnit": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dataProvider": {
                                "type": "complexType",
                                "description": "The provider of either temperature data or precipitation data specified by the parties in the\n                        related Confirmation.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "finalEditedData": {
                                "type": "simpleType",
                                "description": "If specified by the parties to apply in the related Confirmation, Final Edited Data means that\n                        the parties will have recourse to Primary Disruption Fallbacks even if relevant data is\n                        available from the Data Provider, so long as such data is not published in its final edited\n                        form. Otherwise the parties will have recourse to Primary Disruption Fallbacks only if relevant\n                        data is unavailable from the Data Provider on a relevant day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherStation": {
                                "type": "complexType",
                                "description": "The source or sources of weather index data specified by the parties in the related\n                        Confirmation. Examples include: AU-CBM (the Commonwealth Bureau of Meteorology in Australia) and\n                        CM-SMI (the Swiss Meteorological Institute).",
                                "python_type": "unknownType",
                                "children": {
                                    "weatherStationCity": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStationAirport": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStationWBAN": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStationWMO": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "weatherStationFallback": {
                                "type": "complexType",
                                "description": "If weather index data is not available for the weather station specified by the parties in the\n                        related Confirmation, the first alternative Weather Index Station.",
                                "python_type": "unknownType",
                                "children": {
                                    "weatherStationCity": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStationAirport": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStationWBAN": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStationWMO": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "weatherStationSecondFallback": {
                                "type": "complexType",
                                "description": "If weather index data is neither available for the weather station specified by the parties in\n                        the related Confirmation nor the first alternative Weather Index Station, the second alternative\n                        Weather Index Station.",
                                "python_type": "unknownType",
                                "children": {
                                    "weatherStationCity": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStationAirport": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStationWBAN": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStationWMO": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "alternativeDataProvider": {
                                "type": "simpleType",
                                "description": "A provider of either temperature data or precipitation data specified by the parties in the\n                        related Confirmation. If the parties fail to specify an Alternative Data Provider, the \"Fallback\n                        Data\" Disruption Fallback will not apply.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "synopticDataFallback": {
                                "type": "simpleType",
                                "description": "If the parties specify \"Not Applicable\", the \"Synoptic Data\" Disruption Fallback will not apply.\n                        Synoptic Data means that maximum and/or minimum temperature or daily precipitation at the\n                        location for the Missing Data Day will be the maxium and/or minimum temperature or daily\n                        precipitation for that day at the Location (Weather Index Station) which has not been subject to\n                        ultimate quality control, integrity or verification process.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustmentToFallbackWeatherStation": {
                                "type": "simpleType",
                                "description": "The Weather Index Station from which data with which to apply the \"Adjustement to Fallback\n                        Station Data\" terms. See Section 11.20 of the 2005 ISDA Commodity Definitions.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "primaryDisruptionFallbacks": {
                                "type": "complexType",
                                "description": "A list of actions available to the parties should a Primary Disruption Event occur. A Primary\n                        Disruption Event means if maximum or minimum temperature or precipitation data for a Missing\n                        Data Day is required to determine a Payment Amount then the maximum and/or minimum temperature\n                        or the daily precipitation for that day will be determined in accordance with the first\n                        applicable Primary Disruption Fallback.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "secondaryDisruptionFallbacks": {
                                "type": "complexType",
                                "description": "A list of actions available to the parties should a Secondary Disruption Event occur. A Primary\n                        Disruption Event means if maximum or minimum temperature or precipitation data for a Missing\n                        Data Day is required to determine a Payment Amount then the maximum and/or minimum temperature\n                        or the daily precipitation for that day will be determined in accordance with the first\n                        applicable Secondary Disruption Fallback.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "commonPricing": {
                "type": "simpleType",
                "description": "If Common Pricing is elected (\u201ctrue\u201d) for a Transaction with referencing more than\n                        one Commodity Reference Price then no date will be a Pricing Date unless such a date is a day on\n                        which all Commodity Reference Prices are scheduled to be published.",
                "python_type": "unknownType",
                "children": {}
            },
            "marketDisruption": {
                "type": "complexType",
                "description": "Contains contract terms related to triggers and responses to market disruptions as defined in\n                        the 1993 or 2005 Commodity Definitions.",
                "python_type": "unknownType",
                "children": {
                    "marketDisruptionEvents": {
                        "type": "simpleType",
                        "description": "If Market disruption Events are stated to be Applicable then the default Market\n                                Disruption Events of Section 7.4(d)(i) of the ISDA Commodity Definitions shall apply\n                                unless specific Market Disruption Events are stated hereunder, in which case these shall\n                                override the ISDA defaults. If Market Disruption Events are stated to be Not Applicable,\n                                Market Disruption Events are not applicable to the trade at all. It is also possible to\n                                reference the Market Disruption Events set out in the relevant Master Agreement\n                                governing the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "additionalMarketDisruptionEvent": {
                        "type": "complexType",
                        "description": "To be used when marketDisruptionEvents is set to \"Applicable\" and additional market\n                                disruption events(s) apply to the default market disruption events of Section 7.4(d)(i)\n                                of the ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "marketDisruptionEvent": {
                        "type": "complexType",
                        "description": "Market disruption event(s) that apply. Note that these should only be specified if the\n                            default market disruption events of Section 7.4(d)(i) of the ISDA Commodity Definitions are\n                            to be overridden.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallbacks": {
                        "type": "simpleType",
                        "description": "To be used where disruption fallbacks are set out in the relevant Master Agreement governing\n                            the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallback": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "fallback": {
                                "type": "complexType",
                                "description": "Disruption fallback that applies to the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "sequence": {
                                "type": "simpleType",
                                "description": "Sequence in which the reference to the disruption fallback should be applied.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "fallbackReferencePrice": {
                        "type": "complexType",
                        "description": "A fallback commodity reference price for use when relying on Disruption Fallbacks in Section\n                        7.5(d)(i) of the ISDA Commodity Definitions or have selected \"Fallback Reference Price\" as a\n                        disruptionFallback.",
                        "python_type": "unknownType",
                        "children": {
                            "singleUnderlyer": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has only one asset component.",
                                "python_type": "unknownType",
                                "children": {
                                    "underlyingAsset": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dividendPayout": {
                                        "type": "complexType",
                                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "dividendPayoutRatio": {
                                                "type": "simpleType",
                                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioNonCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutConditions": {
                                                "type": "simpleType",
                                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming dividend payment or payments.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "couponPayment": {
                                        "type": "complexType",
                                        "description": "The next upcoming coupon payment.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "paymentDate": {
                                                "type": "simpleType",
                                                "description": "The date that the dividend or coupon is due.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "complexType",
                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "accruedInterest": {
                                                "type": "complexType",
                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averageDailyTradingVolume": {
                                        "type": "complexType",
                                        "description": "The average amount of individual securities traded in a day or over a specified amount of time.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "limitationPercentage": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation percentage in Average Daily trading volume. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "limitationPeriod": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation period for Average Daily trading volume in number of days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "depositoryReceipt": {
                                        "type": "simpleType",
                                        "description": "A Depository Receipt is a negotiable certificate issued by a trust company or security depository. This element is used to represent whether a Depository Receipt is applicable or not to the underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "basket": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has multiple asset components.",
                                "python_type": "unknownType",
                                "children": {
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketConstituent": {
                                        "type": "complexType",
                                        "description": "Describes each of the components of the basket.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "payerPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "payerAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "underlyingAsset": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "constituentWeight": {
                                                "type": "complexType",
                                                "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "openUnits": {
                                                        "type": "simpleType",
                                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketPercentage": {
                                                        "type": "simpleType",
                                                        "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketAmount": {
                                                        "type": "complexType",
                                                        "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dividendPayout": {
                                                "type": "complexType",
                                                "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "dividendPayoutRatio": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioNonCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutConditions": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming dividend payment or payments.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerPrice": {
                                                "type": "complexType",
                                                "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "commission": {
                                                        "type": "complexType",
                                                        "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "commissionDenomination": {
                                                                "type": "simpleType",
                                                                "description": "The type of units used to express a commission.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionAmount": {
                                                                "type": "simpleType",
                                                                "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionPerTrade": {
                                                                "type": "simpleType",
                                                                "description": "The total commission per trade.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "FX Rates that have been used to convert commissions to a single currency.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "determinationMethod": {
                                                        "type": "complexType",
                                                        "description": "Specifies the method according to which an amount or a date is determined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "grossPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, before commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "netPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, net of commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterestPrice": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "fxConversion": {
                                                        "type": "complexType",
                                                        "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "amountRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "Specifies a currency conversion rate.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "amountRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "cleanNetPrice": {
                                                        "type": "simpleType",
                                                        "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quotationCharacteristics": {
                                                        "type": "complexType",
                                                        "description": "Allows information about how the price was quoted to be provided.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "measureType": {
                                                                "type": "complexType",
                                                                "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quoteUnits": {
                                                                "type": "complexType",
                                                                "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "side": {
                                                                "type": "simpleType",
                                                                "description": "The side (bid/mid/ask) of the measure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currencyType": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "timing": {
                                                                "type": "complexType",
                                                                "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "A city or other business center.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "exchangeId": {
                                                                "type": "complexType",
                                                                "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "informationSource": {
                                                                "type": "complexType",
                                                                "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "rateSource": {
                                                                        "type": "complexType",
                                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePage": {
                                                                        "type": "complexType",
                                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePageHeading": {
                                                                        "type": "simpleType",
                                                                        "description": "The heading for the rate source on a given rate source page.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "pricingModel": {
                                                                "type": "complexType",
                                                                "description": ".",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "time": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was observed or when a calculated value was generated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "valuationDate": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was computed.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "expiryTime": {
                                                                "type": "simpleType",
                                                                "description": "When does the quote cease to be valid.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "cashflowType": {
                                                                "type": "complexType",
                                                                "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerNotional": {
                                                "type": "complexType",
                                                "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerSpread": {
                                                "type": "complexType",
                                                "description": "Provides a link to the spread schedule used for this underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "couponPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming coupon payment.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerFinancing": {
                                                "type": "complexType",
                                                "description": "Financing terms associated with this underlyer",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "legIdentifier": {
                                                        "type": "complexType",
                                                        "description": "Version aware identification of this leg.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "legId": {
                                                                "type": "complexType",
                                                                "description": "Identity of this leg.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "version": {
                                                                "type": "simpleType",
                                                                "description": "The version number",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "effectiveDate": {
                                                                "type": "complexType",
                                                                "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "payerPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "payerAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "effectiveDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "terminationDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "fixedRate": {
                                                        "type": "simpleType",
                                                        "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "spreadSchedule": {
                                                        "type": "complexType",
                                                        "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "initialValue": {
                                                                "type": "simpleType",
                                                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "step": {
                                                                "type": "complexType",
                                                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "stepDate": {
                                                                        "type": "simpleType",
                                                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "stepValue": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "type": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerLoanRate": {
                                                "type": "complexType",
                                                "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lossOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then loss of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "maximumStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "increasedCostOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then increased cost of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "initialStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerCollateral": {
                                                "type": "complexType",
                                                "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "independentAmount": {
                                                        "type": "complexType",
                                                        "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "payerPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "payerAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "paymentDetail": {
                                                                "type": "complexType",
                                                                "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "paymentDate": {
                                                                        "type": "complexType",
                                                                        "description": "Payment date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "adjustableDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "unadjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date subject to adjustment.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dateAdjustments": {
                                                                                        "type": "complexType",
                                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessDayConvention": {
                                                                                                "type": "simpleType",
                                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCentersReference": {
                                                                                                "type": "complexType",
                                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCenters": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessCenter": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "relativeDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "periodMultiplier": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "period": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dayType": {
                                                                                        "type": "simpleType",
                                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "dateRelativeTo": {
                                                                                        "type": "complexType",
                                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentAmount": {
                                                                        "type": "complexType",
                                                                        "description": "A fixed payment amount.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentRule": {
                                                                        "type": "complexType",
                                                                        "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "basketDivisor": {
                                        "type": "simpleType",
                                        "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketVersion": {
                                        "type": "simpleType",
                                        "description": "Basket version, used to record changes in basket composition or weights",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketName": {
                                        "type": "complexType",
                                        "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketId": {
                                        "type": "complexType",
                                        "description": "A CDS basket identifier",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketCurrency": {
                                        "type": "complexType",
                                        "description": "Specifies the currency for this basket.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "maximumNumberOfDaysOfDisruption": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. If omitted , the number of days specified in Section 7.6(a) of\n                        the Definitions will apply.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceMaterialityPercentage": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. To be used where a price materiality percentage applies to the\n                        \"Price Source Disruption\" event and this event has been specified by setting marketDisruption to\n                        true or including it in additionalMarketDisruptionEvent. A value expressed in percentage units\n                        i.e. 5 means 5%.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumFuturesContracts": {
                        "type": "simpleType",
                        "description": "1993 Commodity Definitions only. Specifies the Mimum Futures Contracts level that dictates\n                        whether or not a \"De Minimis Trading\" event has occurred. Only relevant if 'De Minimis Trading'\n                        has been specified in marketDisruptionEvent or additionalMarketDisruptionEvent.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementDisruption": {
                "type": "simpleType",
                "description": "Describes contract terms related to the consequences of Bullion Settlement Disruption Events.",
                "python_type": "unknownType",
                "children": {}
            },
            "rounding": {
                "type": "complexType",
                "description": "Rounding direction and precision for amounts.",
                "python_type": "unknownType",
                "children": {
                    "roundingDirection": {
                        "type": "simpleType",
                        "description": "Specifies the rounding direction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "precision": {
                        "type": "simpleType",
                        "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "commoditySwapLeg": {
        "type": "complexType",
        "description": "Defines the substitutable commodity swap leg",
        "python_type": "unknownType",
        "children": {}
    },
    "commoditySwaption": {
        "type": "complexType",
        "description": "Defines a commodity swaption product",
        "python_type": "unknownType",
        "children": {
            "primaryAssetClass": {
                "type": "complexType",
                "description": "A classification of the most important risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "secondaryAssetClass": {
                "type": "complexType",
                "description": "A classification of additional risk classes of the trade, if any. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productType": {
                "type": "complexType",
                "description": "A classification of the type of product. FpML defines a simple product categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productId": {
                "type": "complexType",
                "description": "A product reference identifier. The product ID is an identifier that describes the key economic characteristics of the trade type, with the exception of concepts such as size (notional, quantity, number of units) and price (fixed rate, strike, etc.) that are negotiated for each transaction. It can be used to hold identifiers such as the \"UPI\" (universal product identifier) required by certain regulatory reporting rules. It can also be used to hold identifiers of benchmark products or product temnplates used by certain trading systems or facilities. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
                "python_type": "unknownType",
                "children": {}
            },
            "assetClass": {
                "type": "complexType",
                "description": "A classification of the risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "buyerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that buys this instrument, ie. pays for this instrument and receives the rights defined by it. See 2000 ISDA definitions Article 11.1 (b). In the case of FRAs this the fixed rate payer.",
                "python_type": "unknownType",
                "children": {}
            },
            "buyerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that buys this instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "sellerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that sells (\"writes\") this instrument, i.e. that grants the rights defined by this instrument and in return receives a payment for it. See 2000 ISDA definitions Article 11.1 (a). In the case of FRAs this is the floating rate payer.",
                "python_type": "unknownType",
                "children": {}
            },
            "sellerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that sells this instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "optionType": {
                "type": "simpleType",
                "description": "The type of option transaction.",
                "python_type": "unknownType",
                "children": {}
            },
            "commoditySwap": {
                "type": "complexType",
                "description": "The underlying commodity swap definiton.",
                "python_type": "unknownType",
                "children": {
                    "effectiveDate": {
                        "type": "complexType",
                        "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date\n                        specified somewhere else in the document (through the relativeDate component), this element will\n                        typically point to the effective date of the other leg of the swap.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDate": {
                                "type": "complexType",
                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A date specified as an offset to another date (the anchor date).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "terminationDate": {
                        "type": "complexType",
                        "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date\n                        specified somewhere else in the document (through the relativeDate component), this element will\n                        typically point to the termination date of the other leg of the swap.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDate": {
                                "type": "complexType",
                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A date specified as an offset to another date (the anchor date).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "settlementCurrency": {
                        "type": "complexType",
                        "description": "The currency into which the Commodity Swap Transaction will settle. If this is not the same as\n                        the currency in which the Commodity Reference Price is quoted on a given floating leg of the\n                        Commodity Swap Transaction, then an FX rate should also be specified for that leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commoditySwapLeg": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "weatherLeg": {
                        "type": "complexType",
                        "description": "A weather leg element of a Commodity Swap defines Weather Index Swap transactions. Weather\n                            Index Swap transactions are OTC derivative transactions which settle financially based on an\n                            index calculated from observations of temperature, precipitation and other weather-related\n                            measurements at weather stations throughout the world. Sub-Annex C of the 2005 ISDA\n                            Commodity Definitions provides definitions and terms for a number of types of weather\n                            indices. These indices include: HDD (heating degree days), CDD (cooling degree days), CPD\n                            (critical precipitation days). Weather Index Swap transactions result in a cash flow to one\n                            of the two counterparties each Calculation Period depending on the relationship between the\n                            Settlement Level and the Weather Index Level. A Weather Index swap transaction always\n                            consists of a commodity swap element as a parent to two weatherLeg elements.",
                        "python_type": "unknownType",
                        "children": {
                            "payerPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payerAccountReference": {
                                "type": "complexType",
                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "receiverPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "receiverAccountReference": {
                                "type": "complexType",
                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherIndexLevel": {
                                "type": "complexType",
                                "description": "Defining the Weather Index Level or Weather Index Strike Level.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "This is the Reference Level. The CDD, HDD or HDD Reference Level is specified as the number of\n                        (amount of) Weather Index Units specified by the parties in the related Confirmation.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "unit": {
                                        "type": "complexType",
                                        "description": "Weather Index Unit derived from one of the following variable methods of determination: Cooling\n                        Degree Day (CDD), Heating Degree Day (HDD), Critical Precipitation Day (CPD) as defined in\n                        Section 11.15 of the 2005 ISDA Commodity Definitions and User Guide.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "weatherCalculationPeriods": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "calculationPeriod": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "calculationPeriodFirstDay": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodEndDay": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "weatherCalculationPeriodsReference": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "weatherNotionalAmount": {
                                "type": "complexType",
                                "description": "Defines the price per weather index unit.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The non negative monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "calculation": {
                                "type": "complexType",
                                "description": "Defines details relevant to the calculation of the aggregate weather index amount.",
                                "python_type": "unknownType",
                                "children": {
                                    "settlementLevel": {
                                        "type": "simpleType",
                                        "description": "The Settlement Level means either the cumulative number of Weather Index Units for each day in\n                        the Calculation Period (Cumulative) or the cumulative number of Weather Index Units for each day\n                        in the Calculation Period divided by the number of days in the Calculation Period (Average) or\n                        the maximum number of Weather Index Units for any day in the Calculation Period (Maximum) or the\n                        minimum number of Weather Index Units for any day in the Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "referenceLevelEqualsZero": {
                                        "type": "simpleType",
                                        "description": "If Reference Level Equals Zero is specified to be applicable then CPD means, for any day during\n                        the Calculation Period, (A) 1 if the Daily Precipitation for that day is greater than or equal\n                        to the CPD Reference Level or (B) zero if the the Daily Precipitation for that day is less than\n                        the CPD Reference Level. If Reference Level Equals Zero is specified not to be applicable then\n                        CPD means, for any day during the Calculation Period, (A) 1 if the Daily Precipitation for that\n                        day is greater than the CPD Reference Level or 0 if the Daily Precipitation for that day is less\n                        than or equal to the CPD Reference Level.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationDate": {
                                        "type": "complexType",
                                        "description": "The number of days following the final day of the Calculation Period specified in the\n                        Confirmation on which is is practicable to provide the notice that the Calculation Agent is\n                        required to give for that Settlement Date or Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessDays": {
                                        "type": "complexType",
                                        "description": "A day on which commmercial banks settle payments and are open for general business in the\n                        place(s) specified in the Confirmation. See Section 1.3 of the ISDA 2005 Commodity Definitions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dataCorrection": {
                                        "type": "simpleType",
                                        "description": "The date payment often revised after its publication, this indicates if the payment date could\n                        be recalculated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "correctionPeriod": {
                                        "type": "complexType",
                                        "description": "If 'dataCorrection'=true, this indicates how long after the initial publication of the data\n                        corrections can be made.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "maximumPaymentAmount": {
                                        "type": "complexType",
                                        "description": "The maximum total payment amount that will be paid in any particular transaction.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which an amount is denominated.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "simpleType",
                                                "description": "The non negative monetary quantity in currency units.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "maximumTransactionPaymentAmount": {
                                        "type": "complexType",
                                        "description": "The maximum payment amount that will be paid in any particular Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which an amount is denominated.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "simpleType",
                                                "description": "The non negative monetary quantity in currency units.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "rounding": {
                                        "type": "complexType",
                                        "description": "Rounding direction and precision for price values.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "roundingDirection": {
                                                "type": "simpleType",
                                                "description": "Specifies the rounding direction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "precision": {
                                                "type": "simpleType",
                                                "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "paymentDates": {
                                "type": "complexType",
                                "description": "The Payment Dates of the trade relative to the Calculation Periods or Calculation Date",
                                "python_type": "unknownType",
                                "children": {
                                    "payRelativeTo": {
                                        "type": "simpleType",
                                        "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "payRelativeToEvent": {
                                        "type": "complexType",
                                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsScheduleReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "calculationPeriodsDatesReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "paymentDaysOffset": {
                                        "type": "complexType",
                                        "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "weatherIndexData": {
                                "type": "complexType",
                                "description": "Specifies where the data (e.g. CPD) have been collected, an actual physical reference\n                                point (weather station) and various fall back arrangements.",
                                "python_type": "unknownType",
                                "children": {
                                    "referenceLevel": {
                                        "type": "complexType",
                                        "description": "Reference level is the number of degree-days (in the case of HDD and CDD) or inches/millimeters\n                        (in the case of CPD) on which the differential is calculated. In the case of HDD it is the\n                        number of degree-days below this reference level. In the case of CDD it is the number of degree\n                        days above this reference level. In the case of CPD it is number of inches/millimeters above\n                        this reference level.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "amount": {
                                                "type": "simpleType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "referenceLevelUnit": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dataProvider": {
                                        "type": "complexType",
                                        "description": "The provider of either temperature data or precipitation data specified by the parties in the\n                        related Confirmation.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "finalEditedData": {
                                        "type": "simpleType",
                                        "description": "If specified by the parties to apply in the related Confirmation, Final Edited Data means that\n                        the parties will have recourse to Primary Disruption Fallbacks even if relevant data is\n                        available from the Data Provider, so long as such data is not published in its final edited\n                        form. Otherwise the parties will have recourse to Primary Disruption Fallbacks only if relevant\n                        data is unavailable from the Data Provider on a relevant day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "weatherStation": {
                                        "type": "complexType",
                                        "description": "The source or sources of weather index data specified by the parties in the related\n                        Confirmation. Examples include: AU-CBM (the Commonwealth Bureau of Meteorology in Australia) and\n                        CM-SMI (the Swiss Meteorological Institute).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "weatherStationCity": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationAirport": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWBAN": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWMO": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "weatherStationFallback": {
                                        "type": "complexType",
                                        "description": "If weather index data is not available for the weather station specified by the parties in the\n                        related Confirmation, the first alternative Weather Index Station.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "weatherStationCity": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationAirport": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWBAN": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWMO": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "weatherStationSecondFallback": {
                                        "type": "complexType",
                                        "description": "If weather index data is neither available for the weather station specified by the parties in\n                        the related Confirmation nor the first alternative Weather Index Station, the second alternative\n                        Weather Index Station.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "weatherStationCity": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationAirport": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWBAN": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "weatherStationWMO": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "alternativeDataProvider": {
                                        "type": "simpleType",
                                        "description": "A provider of either temperature data or precipitation data specified by the parties in the\n                        related Confirmation. If the parties fail to specify an Alternative Data Provider, the \"Fallback\n                        Data\" Disruption Fallback will not apply.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "synopticDataFallback": {
                                        "type": "simpleType",
                                        "description": "If the parties specify \"Not Applicable\", the \"Synoptic Data\" Disruption Fallback will not apply.\n                        Synoptic Data means that maximum and/or minimum temperature or daily precipitation at the\n                        location for the Missing Data Day will be the maxium and/or minimum temperature or daily\n                        precipitation for that day at the Location (Weather Index Station) which has not been subject to\n                        ultimate quality control, integrity or verification process.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustmentToFallbackWeatherStation": {
                                        "type": "simpleType",
                                        "description": "The Weather Index Station from which data with which to apply the \"Adjustement to Fallback\n                        Station Data\" terms. See Section 11.20 of the 2005 ISDA Commodity Definitions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "primaryDisruptionFallbacks": {
                                        "type": "complexType",
                                        "description": "A list of actions available to the parties should a Primary Disruption Event occur. A Primary\n                        Disruption Event means if maximum or minimum temperature or precipitation data for a Missing\n                        Data Day is required to determine a Payment Amount then the maximum and/or minimum temperature\n                        or the daily precipitation for that day will be determined in accordance with the first\n                        applicable Primary Disruption Fallback.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "secondaryDisruptionFallbacks": {
                                        "type": "complexType",
                                        "description": "A list of actions available to the parties should a Secondary Disruption Event occur. A Primary\n                        Disruption Event means if maximum or minimum temperature or precipitation data for a Missing\n                        Data Day is required to determine a Payment Amount then the maximum and/or minimum temperature\n                        or the daily precipitation for that day will be determined in accordance with the first\n                        applicable Secondary Disruption Fallback.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "commonPricing": {
                        "type": "simpleType",
                        "description": "If Common Pricing is elected (\u201ctrue\u201d) for a Transaction with referencing more than\n                        one Commodity Reference Price then no date will be a Pricing Date unless such a date is a day on\n                        which all Commodity Reference Prices are scheduled to be published.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "marketDisruption": {
                        "type": "complexType",
                        "description": "Contains contract terms related to triggers and responses to market disruptions as defined in\n                        the 1993 or 2005 Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {
                            "marketDisruptionEvents": {
                                "type": "simpleType",
                                "description": "If Market disruption Events are stated to be Applicable then the default Market\n                                Disruption Events of Section 7.4(d)(i) of the ISDA Commodity Definitions shall apply\n                                unless specific Market Disruption Events are stated hereunder, in which case these shall\n                                override the ISDA defaults. If Market Disruption Events are stated to be Not Applicable,\n                                Market Disruption Events are not applicable to the trade at all. It is also possible to\n                                reference the Market Disruption Events set out in the relevant Master Agreement\n                                governing the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "additionalMarketDisruptionEvent": {
                                "type": "complexType",
                                "description": "To be used when marketDisruptionEvents is set to \"Applicable\" and additional market\n                                disruption events(s) apply to the default market disruption events of Section 7.4(d)(i)\n                                of the ISDA Commodity Definitions.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "marketDisruptionEvent": {
                                "type": "complexType",
                                "description": "Market disruption event(s) that apply. Note that these should only be specified if the\n                            default market disruption events of Section 7.4(d)(i) of the ISDA Commodity Definitions are\n                            to be overridden.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "disruptionFallbacks": {
                                "type": "simpleType",
                                "description": "To be used where disruption fallbacks are set out in the relevant Master Agreement governing\n                            the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "disruptionFallback": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "fallback": {
                                        "type": "complexType",
                                        "description": "Disruption fallback that applies to the trade.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "sequence": {
                                        "type": "simpleType",
                                        "description": "Sequence in which the reference to the disruption fallback should be applied.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fallbackReferencePrice": {
                                "type": "complexType",
                                "description": "A fallback commodity reference price for use when relying on Disruption Fallbacks in Section\n                        7.5(d)(i) of the ISDA Commodity Definitions or have selected \"Fallback Reference Price\" as a\n                        disruptionFallback.",
                                "python_type": "unknownType",
                                "children": {
                                    "singleUnderlyer": {
                                        "type": "complexType",
                                        "description": "Describes the swap's underlyer when it has only one asset component.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "underlyingAsset": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "openUnits": {
                                                "type": "simpleType",
                                                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayout": {
                                                "type": "complexType",
                                                "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "dividendPayoutRatio": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioNonCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutConditions": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming dividend payment or payments.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "couponPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming coupon payment.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "averageDailyTradingVolume": {
                                                "type": "complexType",
                                                "description": "The average amount of individual securities traded in a day or over a specified amount of time.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "limitationPercentage": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the limitation percentage in Average Daily trading volume. A value expressed in percentage units i.e. 5 means 5%.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "limitationPeriod": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the limitation period for Average Daily trading volume in number of days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "depositoryReceipt": {
                                                "type": "simpleType",
                                                "description": "A Depository Receipt is a negotiable certificate issued by a trust company or security depository. This element is used to represent whether a Depository Receipt is applicable or not to the underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "basket": {
                                        "type": "complexType",
                                        "description": "Describes the swap's underlyer when it has multiple asset components.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "openUnits": {
                                                "type": "simpleType",
                                                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketConstituent": {
                                                "type": "complexType",
                                                "description": "Describes each of the components of the basket.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "payerPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "payerAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "underlyingAsset": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "constituentWeight": {
                                                        "type": "complexType",
                                                        "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "openUnits": {
                                                                "type": "simpleType",
                                                                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "basketPercentage": {
                                                                "type": "simpleType",
                                                                "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "basketAmount": {
                                                                "type": "complexType",
                                                                "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "dividendPayout": {
                                                        "type": "complexType",
                                                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "dividendPayoutRatio": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayoutRatioCash": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayoutRatioNonCash": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayoutConditions": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dividendPayment": {
                                                                "type": "complexType",
                                                                "description": "The next upcoming dividend payment or payments.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "paymentDate": {
                                                                        "type": "simpleType",
                                                                        "description": "The date that the dividend or coupon is due.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "complexType",
                                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "accruedInterest": {
                                                                        "type": "complexType",
                                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "commission": {
                                                                "type": "complexType",
                                                                "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "commissionDenomination": {
                                                                        "type": "simpleType",
                                                                        "description": "The type of units used to express a commission.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "commissionAmount": {
                                                                        "type": "simpleType",
                                                                        "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "commissionPerTrade": {
                                                                        "type": "simpleType",
                                                                        "description": "The total commission per trade.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "fxRate": {
                                                                        "type": "complexType",
                                                                        "description": "FX Rates that have been used to convert commissions to a single currency.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "quotedCurrencyPair": {
                                                                                "type": "complexType",
                                                                                "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "currency1": {
                                                                                        "type": "complexType",
                                                                                        "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "currency2": {
                                                                                        "type": "complexType",
                                                                                        "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "quoteBasis": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The method by which the exchange rate is quoted.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "rate": {
                                                                                "type": "simpleType",
                                                                                "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "determinationMethod": {
                                                                "type": "complexType",
                                                                "description": "Specifies the method according to which an amount or a date is determined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "grossPrice": {
                                                                "type": "complexType",
                                                                "description": "Specifies the price of the underlyer, before commissions.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "priceExpression": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "netPrice": {
                                                                "type": "complexType",
                                                                "description": "Specifies the price of the underlyer, net of commissions.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "priceExpression": {
                                                                        "type": "simpleType",
                                                                        "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterestPrice": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxConversion": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "amountRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "fxRate": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies a currency conversion rate.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "quotedCurrencyPair": {
                                                                                "type": "complexType",
                                                                                "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "currency1": {
                                                                                        "type": "complexType",
                                                                                        "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "currency2": {
                                                                                        "type": "complexType",
                                                                                        "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "quoteBasis": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The method by which the exchange rate is quoted.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "rate": {
                                                                                "type": "simpleType",
                                                                                "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "amountRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "cleanNetPrice": {
                                                                "type": "simpleType",
                                                                "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quotationCharacteristics": {
                                                                "type": "complexType",
                                                                "description": "Allows information about how the price was quoted to be provided.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "measureType": {
                                                                        "type": "complexType",
                                                                        "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "quoteUnits": {
                                                                        "type": "complexType",
                                                                        "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "side": {
                                                                        "type": "simpleType",
                                                                        "description": "The side (bid/mid/ask) of the measure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "currencyType": {
                                                                        "type": "complexType",
                                                                        "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "timing": {
                                                                        "type": "complexType",
                                                                        "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "A city or other business center.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "exchangeId": {
                                                                        "type": "complexType",
                                                                        "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "informationSource": {
                                                                        "type": "complexType",
                                                                        "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "rateSource": {
                                                                                "type": "complexType",
                                                                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "rateSourcePage": {
                                                                                "type": "complexType",
                                                                                "description": "A specific page for the rate source for obtaining a market rate.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "rateSourcePageHeading": {
                                                                                "type": "simpleType",
                                                                                "description": "The heading for the rate source on a given rate source page.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "pricingModel": {
                                                                        "type": "complexType",
                                                                        "description": ".",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "time": {
                                                                        "type": "simpleType",
                                                                        "description": "When the quote was observed or when a calculated value was generated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "valuationDate": {
                                                                        "type": "simpleType",
                                                                        "description": "When the quote was computed.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "expiryTime": {
                                                                        "type": "simpleType",
                                                                        "description": "When does the quote cease to be valid.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "cashflowType": {
                                                                        "type": "complexType",
                                                                        "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerNotional": {
                                                        "type": "complexType",
                                                        "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "underlyerSpread": {
                                                        "type": "complexType",
                                                        "description": "Provides a link to the spread schedule used for this underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "couponPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming coupon payment.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerFinancing": {
                                                        "type": "complexType",
                                                        "description": "Financing terms associated with this underlyer",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "legIdentifier": {
                                                                "type": "complexType",
                                                                "description": "Version aware identification of this leg.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "legId": {
                                                                        "type": "complexType",
                                                                        "description": "Identity of this leg.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "version": {
                                                                        "type": "simpleType",
                                                                        "description": "The version number",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "effectiveDate": {
                                                                        "type": "complexType",
                                                                        "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "payerPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "payerAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "effectiveDate": {
                                                                "type": "complexType",
                                                                "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "adjustableDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "unadjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date subject to adjustment.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dateAdjustments": {
                                                                                "type": "complexType",
                                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "relativeDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "periodMultiplier": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "period": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dayType": {
                                                                                "type": "simpleType",
                                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "dateRelativeTo": {
                                                                                "type": "complexType",
                                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "terminationDate": {
                                                                "type": "complexType",
                                                                "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "adjustableDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "unadjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date subject to adjustment.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dateAdjustments": {
                                                                                "type": "complexType",
                                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "relativeDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "periodMultiplier": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "period": {
                                                                                "type": "simpleType",
                                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "dayType": {
                                                                                "type": "simpleType",
                                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "dateRelativeTo": {
                                                                                "type": "complexType",
                                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "adjustedDate": {
                                                                                "type": "complexType",
                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "fixedRate": {
                                                                "type": "simpleType",
                                                                "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "spreadSchedule": {
                                                                "type": "complexType",
                                                                "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "initialValue": {
                                                                        "type": "simpleType",
                                                                        "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "step": {
                                                                        "type": "complexType",
                                                                        "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "stepDate": {
                                                                                "type": "simpleType",
                                                                                "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "stepValue": {
                                                                                "type": "simpleType",
                                                                                "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "type": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "underlyerLoanRate": {
                                                        "type": "complexType",
                                                        "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "lossOfStockBorrow": {
                                                                "type": "simpleType",
                                                                "description": "If true, then loss of stock borrow is applicable.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "maximumStockLoanRate": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "increasedCostOfStockBorrow": {
                                                                "type": "simpleType",
                                                                "description": "If true, then increased cost of stock borrow is applicable.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "initialStockLoanRate": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "underlyerCollateral": {
                                                        "type": "complexType",
                                                        "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "independentAmount": {
                                                                "type": "complexType",
                                                                "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "payerPartyReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "payerAccountReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "receiverPartyReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "receiverAccountReference": {
                                                                        "type": "complexType",
                                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "paymentDetail": {
                                                                        "type": "complexType",
                                                                        "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "paymentDate": {
                                                                                "type": "complexType",
                                                                                "description": "Payment date.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "adjustableDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "unadjustedDate": {
                                                                                                "type": "complexType",
                                                                                                "description": "A date subject to adjustment.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "dateAdjustments": {
                                                                                                "type": "complexType",
                                                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessDayConvention": {
                                                                                                        "type": "simpleType",
                                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    },
                                                                                                    "businessCentersReference": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    },
                                                                                                    "businessCenters": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {
                                                                                                            "businessCenter": {
                                                                                                                "type": "complexType",
                                                                                                                "description": "",
                                                                                                                "python_type": "unknownType",
                                                                                                                "children": {}
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "adjustedDate": {
                                                                                                "type": "complexType",
                                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "relativeDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "periodMultiplier": {
                                                                                                "type": "simpleType",
                                                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "period": {
                                                                                                "type": "simpleType",
                                                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "dayType": {
                                                                                                "type": "simpleType",
                                                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessDayConvention": {
                                                                                                "type": "simpleType",
                                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCentersReference": {
                                                                                                "type": "complexType",
                                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCenters": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessCenter": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "dateRelativeTo": {
                                                                                                "type": "complexType",
                                                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "adjustedDate": {
                                                                                                "type": "complexType",
                                                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "paymentAmount": {
                                                                                "type": "complexType",
                                                                                "description": "A fixed payment amount.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "currency": {
                                                                                        "type": "complexType",
                                                                                        "description": "The currency in which an amount is denominated.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "amount": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The monetary quantity in currency units.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "paymentRule": {
                                                                                "type": "complexType",
                                                                                "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "basketDivisor": {
                                                "type": "simpleType",
                                                "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketVersion": {
                                                "type": "simpleType",
                                                "description": "Basket version, used to record changes in basket composition or weights",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketName": {
                                                "type": "complexType",
                                                "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketId": {
                                                "type": "complexType",
                                                "description": "A CDS basket identifier",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "basketCurrency": {
                                                "type": "complexType",
                                                "description": "Specifies the currency for this basket.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "maximumNumberOfDaysOfDisruption": {
                                "type": "simpleType",
                                "description": "2005 Commodity Definitions only. If omitted , the number of days specified in Section 7.6(a) of\n                        the Definitions will apply.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "priceMaterialityPercentage": {
                                "type": "simpleType",
                                "description": "2005 Commodity Definitions only. To be used where a price materiality percentage applies to the\n                        \"Price Source Disruption\" event and this event has been specified by setting marketDisruption to\n                        true or including it in additionalMarketDisruptionEvent. A value expressed in percentage units\n                        i.e. 5 means 5%.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "minimumFuturesContracts": {
                                "type": "simpleType",
                                "description": "1993 Commodity Definitions only. Specifies the Mimum Futures Contracts level that dictates\n                        whether or not a \"De Minimis Trading\" event has occurred. Only relevant if 'De Minimis Trading'\n                        has been specified in marketDisruptionEvent or additionalMarketDisruptionEvent.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "settlementDisruption": {
                        "type": "simpleType",
                        "description": "Describes contract terms related to the consequences of Bullion Settlement Disruption Events.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "rounding": {
                        "type": "complexType",
                        "description": "Rounding direction and precision for amounts.",
                        "python_type": "unknownType",
                        "children": {
                            "roundingDirection": {
                                "type": "simpleType",
                                "description": "Specifies the rounding direction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "precision": {
                                "type": "simpleType",
                                "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "physicalExercise": {
                "type": "complexType",
                "description": "The parameters for defining how the commodity option can be exercised into a physical\n                                transaction.",
                "python_type": "unknownType",
                "children": {
                    "americanExercise": {
                        "type": "complexType",
                        "description": "The parameters for defining the expiration date(s) and time(s) for an American style option.",
                        "python_type": "unknownType",
                        "children": {
                            "commencementDates": {
                                "type": "complexType",
                                "description": "The first day(s) of the exercise period(s) for an American-style option.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDates": {
                                        "type": "complexType",
                                        "description": "A series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDates": {
                                        "type": "complexType",
                                        "description": "A series of dates specified as some offset to another series of dates (the anchor dates).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "periodSkip": {
                                                "type": "simpleType",
                                                "description": "The number of periods in the referenced date schedule that are between each date in the relative date schedule. Thus a skip of 2 would mean that dates are relative to every second date in the referenced schedule. If present this should have a value greater than 1.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "scheduleBounds": {
                                                "type": "complexType",
                                                "description": "The first and last dates of a schedule. This can be used to restrict the range of values in a reference series of dates.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedFirstDate": {
                                                        "type": "simpleType",
                                                        "description": "The first date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "unadjustedLastDate": {
                                                        "type": "simpleType",
                                                        "description": "The last date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "expirationDates": {
                                "type": "complexType",
                                "description": "The Expiration Date(s) of an American-style option.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDates": {
                                        "type": "complexType",
                                        "description": "A series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDates": {
                                        "type": "complexType",
                                        "description": "A series of dates specified as some offset to another series of dates (the anchor dates).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "periodSkip": {
                                                "type": "simpleType",
                                                "description": "The number of periods in the referenced date schedule that are between each date in the relative date schedule. Thus a skip of 2 would mean that dates are relative to every second date in the referenced schedule. If present this should have a value greater than 1.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "scheduleBounds": {
                                                "type": "complexType",
                                                "description": "The first and last dates of a schedule. This can be used to restrict the range of values in a reference series of dates.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedFirstDate": {
                                                        "type": "simpleType",
                                                        "description": "The first date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "unadjustedLastDate": {
                                                        "type": "simpleType",
                                                        "description": "The last date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "relativeCommencementDates": {
                                "type": "complexType",
                                "description": "The first day(s) of the exercise period(s) for an American-style option where it\n                                        is relative to the occurrence of an external event.",
                                "python_type": "unknownType",
                                "children": {
                                    "expireRelativeToEvent": {
                                        "type": "complexType",
                                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "expirationDateOffset": {
                                        "type": "complexType",
                                        "description": "Specifies any offset from the adjusted Calculation Period start date or adjusted Calculation\n                        Period end date applicable to each Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "relativeExpirationDates": {
                                "type": "complexType",
                                "description": "The Expiration Date(s) of an American-style option where it is relative to the\n                                        occurrence of an external event.",
                                "python_type": "unknownType",
                                "children": {
                                    "expireRelativeToEvent": {
                                        "type": "complexType",
                                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "expirationDateOffset": {
                                        "type": "complexType",
                                        "description": "Specifies any offset from the adjusted Calculation Period start date or adjusted Calculation\n                        Period end date applicable to each Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "latestExerciseTime": {
                                "type": "complexType",
                                "description": "For a Bermuda or American style option, the latest time on an exercise business day\n                                (excluding the expiration date) within the exercise period that notice can be given by\n                                the buyer to the seller or seller's agent. Notice of exercise given after this time will\n                                be deemed to have been given on the next exercise business day.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "location": {
                                        "type": "complexType",
                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "expirationTime": {
                                "type": "complexType",
                                "description": "The specific time of day at which the option expires.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "location": {
                                        "type": "complexType",
                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "europeanExercise": {
                        "type": "complexType",
                        "description": "The parameters for defining the expiration date(s) and time(s) for a European style option.",
                        "python_type": "unknownType",
                        "children": {
                            "expirationDate": {
                                "type": "complexType",
                                "description": "The Expiration Date of a single expiry European-style option or the first Expiration\n                                    Date of a multiple expiry or daily expiring option.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDate": {
                                        "type": "complexType",
                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDate": {
                                        "type": "complexType",
                                        "description": "A date specified as an offset to another date (the anchor date).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "expirationDates": {
                                "type": "complexType",
                                "description": "The Expiration Date(s) of a European-style option.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDates": {
                                        "type": "complexType",
                                        "description": "A series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDates": {
                                        "type": "complexType",
                                        "description": "A series of dates specified as some offset to another series of dates (the anchor dates).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "periodSkip": {
                                                "type": "simpleType",
                                                "description": "The number of periods in the referenced date schedule that are between each date in the relative date schedule. Thus a skip of 2 would mean that dates are relative to every second date in the referenced schedule. If present this should have a value greater than 1.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "scheduleBounds": {
                                                "type": "complexType",
                                                "description": "The first and last dates of a schedule. This can be used to restrict the range of values in a reference series of dates.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedFirstDate": {
                                                        "type": "simpleType",
                                                        "description": "The first date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "unadjustedLastDate": {
                                                        "type": "simpleType",
                                                        "description": "The last date of a date range.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "periodicDates": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "calculationStartDate": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "adjustableDate": {
                                                        "type": "complexType",
                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "unadjustedDate": {
                                                                "type": "complexType",
                                                                "description": "A date subject to adjustment.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dateAdjustments": {
                                                                "type": "complexType",
                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "adjustedDate": {
                                                                "type": "complexType",
                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "relativeDate": {
                                                        "type": "complexType",
                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "dateRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "adjustedDate": {
                                                                "type": "complexType",
                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "calculationEndDate": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "adjustableDate": {
                                                        "type": "complexType",
                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "unadjustedDate": {
                                                                "type": "complexType",
                                                                "description": "A date subject to adjustment.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dateAdjustments": {
                                                                "type": "complexType",
                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "adjustedDate": {
                                                                "type": "complexType",
                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "relativeDate": {
                                                        "type": "complexType",
                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "dateRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "adjustedDate": {
                                                                "type": "complexType",
                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "calculationPeriodFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which calculation period end dates occur with the regular part of the calculation period schedule and their roll date convention.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rollConvention": {
                                                        "type": "simpleType",
                                                        "description": "Used in conjunction with a frequency and the regular period start date of a calculation period, determines each calculation period end date within the regular part of a calculation period schedule.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "calculationPeriodDatesAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention to apply to each calculation period end date if it would otherwise fall on a day that is not a business day in the specified financial business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "relativeExpirationDates": {
                                "type": "complexType",
                                "description": "The Expiration Date(s) of a European-style option where it is relative to the\n                                    occurrence of an external event.",
                                "python_type": "unknownType",
                                "children": {
                                    "expireRelativeToEvent": {
                                        "type": "complexType",
                                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "expirationDateOffset": {
                                        "type": "complexType",
                                        "description": "Specifies any offset from the adjusted Calculation Period start date or adjusted Calculation\n                        Period end date applicable to each Payment Date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "expirationTime": {
                                "type": "complexType",
                                "description": "The specific time of day at which the option expires.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "location": {
                                        "type": "complexType",
                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "automaticExercise": {
                        "type": "simpleType",
                        "description": "Specifies whether or not Automatic Exercise applies to a Commodity Option Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "writtenConfirmation": {
                        "type": "simpleType",
                        "description": "Specifies whether or not Written Confirmation applies to a Commodity Option Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "clearingInstructions": {
                        "type": "complexType",
                        "description": "Specifies any instructions on how the physical settlement is to be effected when the option is\n                        exercised.",
                        "python_type": "unknownType",
                        "children": {
                            "clearedPhysicalSettlement": {
                                "type": "simpleType",
                                "description": "Specifies whether the swap resulting from physical settlement of the swaption transaction will clear through a clearing house. The meaning of Cleared Physical Settlement is defined in the 2006 ISDA Definitions, Section 15.2 (published in Supplement number 28).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "predeterminedClearingOrganizationPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the clearing organization (CCP, DCO) to which the trade should be cleared. This is also known as the \"Mutually Agreed Clearinghouse\".",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "mutuallyAgreedClearinghouse": {
                                "type": "complexType",
                                "description": "This may be used to specify a \"mutually-agreed clearinghouse\" for settlement.",
                                "python_type": "unknownType",
                                "children": {
                                    "partyReference": {
                                        "type": "complexType",
                                        "description": "A reference to the party structure for the clearinghouse",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "identifier": {
                                        "type": "complexType",
                                        "description": "A string that identifies the clearinghouse",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "agreedDiscountRate": {
                                "type": "complexType",
                                "description": "This may be used to indicate the discount rate to be used for cash collateral for cash settlement purposes.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementRateSource": {
                                "type": "complexType",
                                "description": "The method for obtaining a settlement rate. This may be from some information source (e.g. Reuters) or from a set of reference banks.",
                                "python_type": "unknownType",
                                "children": {
                                    "informationSource": {
                                        "type": "complexType",
                                        "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "rateSource": {
                                                "type": "complexType",
                                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePage": {
                                                "type": "complexType",
                                                "description": "A specific page for the rate source for obtaining a market rate.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePageHeading": {
                                                "type": "simpleType",
                                                "description": "The heading for the rate source on a given rate source page.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "cashSettlementReferenceBanks": {
                                        "type": "complexType",
                                        "description": "A container for a set of reference institutions. These reference institutions may be called upon to provide rate quotations as part of the method to determine the applicable cash settlement amount. If institutions are not specified, it is assumed that reference institutions will be agreed between the parties on the exercise date, or in the case of swap transaction to which mandatory early termination is applicable, the cash settlement valuation date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "referenceBank": {
                                                "type": "complexType",
                                                "description": "An institution (party) identified by means of a coding scheme and an optional name.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "referenceBankId": {
                                                        "type": "complexType",
                                                        "description": "An institution (party) identifier, e.g. a bank identifier code (BIC).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "referenceBankName": {
                                                        "type": "simpleType",
                                                        "description": "The name of the institution (party). A free format string. FpML does not define usage rules for the element.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "quotationRateType": {
                                "type": "simpleType",
                                "description": "Which rate quote is to be observed, either Bid, Mid, Offer or Exercising Party Pays. The meaning of Exercising Party Pays is defined in the 2000 ISDA Definitions, Section 17.2. Certain Definitions Relating to Cash Settlement, paragraph (j)",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "premium": {
                "type": "complexType",
                "description": "The option premium payable by the buyer to the seller.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "paymentDate": {
                        "type": "complexType",
                        "description": "The payment date, which can be expressed as either an adjustable or relative date.",
                        "python_type": "unknownType",
                        "children": {
                            "adjustableDate": {
                                "type": "complexType",
                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "relativeDate": {
                                "type": "complexType",
                                "description": "A date specified as an offset to another date (the anchor date).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "dateRelativeTo": {
                                        "type": "complexType",
                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "paymentAmount": {
                        "type": "complexType",
                        "description": "Non negative payment amount.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "premiumPerUnit": {
                        "type": "complexType",
                        "description": "The currency amount of premium to be paid per Unit of the Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "commonPricing": {
                "type": "simpleType",
                "description": "If Common Pricing is elected (\u201ctrue\u201d) for a Transaction with referencing more than\n                        one Commodity Reference Price then no date will be a Pricing Date unless such a date is a day on\n                        which all Commodity Reference Prices are scheduled to be published.",
                "python_type": "unknownType",
                "children": {}
            },
            "marketDisruption": {
                "type": "complexType",
                "description": "Contains contract terms related to triggers and responses to market disruptions as defined in\n                        the 1993 or 2005 Commodity Definitions.",
                "python_type": "unknownType",
                "children": {
                    "marketDisruptionEvents": {
                        "type": "simpleType",
                        "description": "If Market disruption Events are stated to be Applicable then the default Market\n                                Disruption Events of Section 7.4(d)(i) of the ISDA Commodity Definitions shall apply\n                                unless specific Market Disruption Events are stated hereunder, in which case these shall\n                                override the ISDA defaults. If Market Disruption Events are stated to be Not Applicable,\n                                Market Disruption Events are not applicable to the trade at all. It is also possible to\n                                reference the Market Disruption Events set out in the relevant Master Agreement\n                                governing the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "additionalMarketDisruptionEvent": {
                        "type": "complexType",
                        "description": "To be used when marketDisruptionEvents is set to \"Applicable\" and additional market\n                                disruption events(s) apply to the default market disruption events of Section 7.4(d)(i)\n                                of the ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "marketDisruptionEvent": {
                        "type": "complexType",
                        "description": "Market disruption event(s) that apply. Note that these should only be specified if the\n                            default market disruption events of Section 7.4(d)(i) of the ISDA Commodity Definitions are\n                            to be overridden.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallbacks": {
                        "type": "simpleType",
                        "description": "To be used where disruption fallbacks are set out in the relevant Master Agreement governing\n                            the trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "disruptionFallback": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "fallback": {
                                "type": "complexType",
                                "description": "Disruption fallback that applies to the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "sequence": {
                                "type": "simpleType",
                                "description": "Sequence in which the reference to the disruption fallback should be applied.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "fallbackReferencePrice": {
                        "type": "complexType",
                        "description": "A fallback commodity reference price for use when relying on Disruption Fallbacks in Section\n                        7.5(d)(i) of the ISDA Commodity Definitions or have selected \"Fallback Reference Price\" as a\n                        disruptionFallback.",
                        "python_type": "unknownType",
                        "children": {
                            "singleUnderlyer": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has only one asset component.",
                                "python_type": "unknownType",
                                "children": {
                                    "underlyingAsset": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dividendPayout": {
                                        "type": "complexType",
                                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "dividendPayoutRatio": {
                                                "type": "simpleType",
                                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutRatioNonCash": {
                                                "type": "simpleType",
                                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayoutConditions": {
                                                "type": "simpleType",
                                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dividendPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming dividend payment or payments.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "couponPayment": {
                                        "type": "complexType",
                                        "description": "The next upcoming coupon payment.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "paymentDate": {
                                                "type": "simpleType",
                                                "description": "The date that the dividend or coupon is due.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "complexType",
                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "accruedInterest": {
                                                "type": "complexType",
                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averageDailyTradingVolume": {
                                        "type": "complexType",
                                        "description": "The average amount of individual securities traded in a day or over a specified amount of time.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "limitationPercentage": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation percentage in Average Daily trading volume. A value expressed in percentage units i.e. 5 means 5%.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "limitationPeriod": {
                                                "type": "simpleType",
                                                "description": "Specifies the limitation period for Average Daily trading volume in number of days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "depositoryReceipt": {
                                        "type": "simpleType",
                                        "description": "A Depository Receipt is a negotiable certificate issued by a trust company or security depository. This element is used to represent whether a Depository Receipt is applicable or not to the underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "basket": {
                                "type": "complexType",
                                "description": "Describes the swap's underlyer when it has multiple asset components.",
                                "python_type": "unknownType",
                                "children": {
                                    "openUnits": {
                                        "type": "simpleType",
                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketConstituent": {
                                        "type": "complexType",
                                        "description": "Describes each of the components of the basket.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "payerPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "payerAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverPartyReference": {
                                                "type": "complexType",
                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "receiverAccountReference": {
                                                "type": "complexType",
                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "underlyingAsset": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "constituentWeight": {
                                                "type": "complexType",
                                                "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "openUnits": {
                                                        "type": "simpleType",
                                                        "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketPercentage": {
                                                        "type": "simpleType",
                                                        "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "basketAmount": {
                                                        "type": "complexType",
                                                        "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dividendPayout": {
                                                "type": "complexType",
                                                "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "dividendPayoutRatio": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutRatioNonCash": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayoutConditions": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dividendPayment": {
                                                        "type": "complexType",
                                                        "description": "The next upcoming dividend payment or payments.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "paymentDate": {
                                                                "type": "simpleType",
                                                                "description": "The date that the dividend or coupon is due.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "complexType",
                                                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "accruedInterest": {
                                                                "type": "complexType",
                                                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "currency": {
                                                                        "type": "complexType",
                                                                        "description": "The currency in which an amount is denominated.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "amount": {
                                                                        "type": "simpleType",
                                                                        "description": "The monetary quantity in currency units.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerPrice": {
                                                "type": "complexType",
                                                "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "commission": {
                                                        "type": "complexType",
                                                        "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "commissionDenomination": {
                                                                "type": "simpleType",
                                                                "description": "The type of units used to express a commission.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionAmount": {
                                                                "type": "simpleType",
                                                                "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "commissionPerTrade": {
                                                                "type": "simpleType",
                                                                "description": "The total commission per trade.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "FX Rates that have been used to convert commissions to a single currency.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "determinationMethod": {
                                                        "type": "complexType",
                                                        "description": "Specifies the method according to which an amount or a date is determined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "grossPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, before commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "netPrice": {
                                                        "type": "complexType",
                                                        "description": "Specifies the price of the underlyer, net of commissions.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "priceExpression": {
                                                                "type": "simpleType",
                                                                "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterestPrice": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "fxConversion": {
                                                        "type": "complexType",
                                                        "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "amountRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "fxRate": {
                                                                "type": "complexType",
                                                                "description": "Specifies a currency conversion rate.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "quotedCurrencyPair": {
                                                                        "type": "complexType",
                                                                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency1": {
                                                                                "type": "complexType",
                                                                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "currency2": {
                                                                                "type": "complexType",
                                                                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "quoteBasis": {
                                                                                "type": "simpleType",
                                                                                "description": "The method by which the exchange rate is quoted.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "rate": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "amountRelativeTo": {
                                                        "type": "complexType",
                                                        "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "cleanNetPrice": {
                                                        "type": "simpleType",
                                                        "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quotationCharacteristics": {
                                                        "type": "complexType",
                                                        "description": "Allows information about how the price was quoted to be provided.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "measureType": {
                                                                "type": "complexType",
                                                                "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quoteUnits": {
                                                                "type": "complexType",
                                                                "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "side": {
                                                                "type": "simpleType",
                                                                "description": "The side (bid/mid/ask) of the measure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "currencyType": {
                                                                "type": "complexType",
                                                                "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "timing": {
                                                                "type": "complexType",
                                                                "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "A city or other business center.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "exchangeId": {
                                                                "type": "complexType",
                                                                "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "informationSource": {
                                                                "type": "complexType",
                                                                "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "rateSource": {
                                                                        "type": "complexType",
                                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePage": {
                                                                        "type": "complexType",
                                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "rateSourcePageHeading": {
                                                                        "type": "simpleType",
                                                                        "description": "The heading for the rate source on a given rate source page.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "pricingModel": {
                                                                "type": "complexType",
                                                                "description": ".",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "time": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was observed or when a calculated value was generated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "valuationDate": {
                                                                "type": "simpleType",
                                                                "description": "When the quote was computed.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "expiryTime": {
                                                                "type": "simpleType",
                                                                "description": "When does the quote cease to be valid.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "cashflowType": {
                                                                "type": "complexType",
                                                                "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerNotional": {
                                                "type": "complexType",
                                                "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerSpread": {
                                                "type": "complexType",
                                                "description": "Provides a link to the spread schedule used for this underlyer.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "couponPayment": {
                                                "type": "complexType",
                                                "description": "The next upcoming coupon payment.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "paymentDate": {
                                                        "type": "simpleType",
                                                        "description": "The date that the dividend or coupon is due.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "complexType",
                                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "accruedInterest": {
                                                        "type": "complexType",
                                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "currency": {
                                                                "type": "complexType",
                                                                "description": "The currency in which an amount is denominated.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "amount": {
                                                                "type": "simpleType",
                                                                "description": "The monetary quantity in currency units.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerFinancing": {
                                                "type": "complexType",
                                                "description": "Financing terms associated with this underlyer",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "legIdentifier": {
                                                        "type": "complexType",
                                                        "description": "Version aware identification of this leg.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "legId": {
                                                                "type": "complexType",
                                                                "description": "Identity of this leg.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "version": {
                                                                "type": "simpleType",
                                                                "description": "The version number",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "effectiveDate": {
                                                                "type": "complexType",
                                                                "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "payerPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "payerAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverPartyReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "receiverAccountReference": {
                                                        "type": "complexType",
                                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "effectiveDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "terminationDate": {
                                                        "type": "complexType",
                                                        "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "adjustableDate": {
                                                                "type": "complexType",
                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "unadjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "A date subject to adjustment.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dateAdjustments": {
                                                                        "type": "complexType",
                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessDayConvention": {
                                                                                "type": "simpleType",
                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCentersReference": {
                                                                                "type": "complexType",
                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "businessCenters": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "businessCenter": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "relativeDate": {
                                                                "type": "complexType",
                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "dateRelativeTo": {
                                                                        "type": "complexType",
                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "adjustedDate": {
                                                                        "type": "complexType",
                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "fixedRate": {
                                                        "type": "simpleType",
                                                        "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "spreadSchedule": {
                                                        "type": "complexType",
                                                        "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "initialValue": {
                                                                "type": "simpleType",
                                                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "step": {
                                                                "type": "complexType",
                                                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "stepDate": {
                                                                        "type": "simpleType",
                                                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "stepValue": {
                                                                        "type": "simpleType",
                                                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "type": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "underlyerLoanRate": {
                                                "type": "complexType",
                                                "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lossOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then loss of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "maximumStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "increasedCostOfStockBorrow": {
                                                        "type": "simpleType",
                                                        "description": "If true, then increased cost of stock borrow is applicable.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "initialStockLoanRate": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "underlyerCollateral": {
                                                "type": "complexType",
                                                "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "independentAmount": {
                                                        "type": "complexType",
                                                        "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "payerPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "payerAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverPartyReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "receiverAccountReference": {
                                                                "type": "complexType",
                                                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "paymentDetail": {
                                                                "type": "complexType",
                                                                "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "paymentDate": {
                                                                        "type": "complexType",
                                                                        "description": "Payment date.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "adjustableDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "unadjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "A date subject to adjustment.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dateAdjustments": {
                                                                                        "type": "complexType",
                                                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessDayConvention": {
                                                                                                "type": "simpleType",
                                                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCentersReference": {
                                                                                                "type": "complexType",
                                                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            },
                                                                                            "businessCenters": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {
                                                                                                    "businessCenter": {
                                                                                                        "type": "complexType",
                                                                                                        "description": "",
                                                                                                        "python_type": "unknownType",
                                                                                                        "children": {}
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            },
                                                                            "relativeDate": {
                                                                                "type": "complexType",
                                                                                "description": "A date specified as an offset to another date (the anchor date).",
                                                                                "python_type": "unknownType",
                                                                                "children": {
                                                                                    "periodMultiplier": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "period": {
                                                                                        "type": "simpleType",
                                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "dayType": {
                                                                                        "type": "simpleType",
                                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessDayConvention": {
                                                                                        "type": "simpleType",
                                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCentersReference": {
                                                                                        "type": "complexType",
                                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "businessCenters": {
                                                                                        "type": "complexType",
                                                                                        "description": "",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {
                                                                                            "businessCenter": {
                                                                                                "type": "complexType",
                                                                                                "description": "",
                                                                                                "python_type": "unknownType",
                                                                                                "children": {}
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "dateRelativeTo": {
                                                                                        "type": "complexType",
                                                                                        "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    },
                                                                                    "adjustedDate": {
                                                                                        "type": "complexType",
                                                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                                        "python_type": "unknownType",
                                                                                        "children": {}
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentAmount": {
                                                                        "type": "complexType",
                                                                        "description": "A fixed payment amount.",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "currency": {
                                                                                "type": "complexType",
                                                                                "description": "The currency in which an amount is denominated.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            },
                                                                            "amount": {
                                                                                "type": "simpleType",
                                                                                "description": "The monetary quantity in currency units.",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    },
                                                                    "paymentRule": {
                                                                        "type": "complexType",
                                                                        "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "basketDivisor": {
                                        "type": "simpleType",
                                        "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketVersion": {
                                        "type": "simpleType",
                                        "description": "Basket version, used to record changes in basket composition or weights",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketName": {
                                        "type": "complexType",
                                        "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketId": {
                                        "type": "complexType",
                                        "description": "A CDS basket identifier",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "basketCurrency": {
                                        "type": "complexType",
                                        "description": "Specifies the currency for this basket.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "maximumNumberOfDaysOfDisruption": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. If omitted , the number of days specified in Section 7.6(a) of\n                        the Definitions will apply.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceMaterialityPercentage": {
                        "type": "simpleType",
                        "description": "2005 Commodity Definitions only. To be used where a price materiality percentage applies to the\n                        \"Price Source Disruption\" event and this event has been specified by setting marketDisruption to\n                        true or including it in additionalMarketDisruptionEvent. A value expressed in percentage units\n                        i.e. 5 means 5%.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumFuturesContracts": {
                        "type": "simpleType",
                        "description": "1993 Commodity Definitions only. Specifies the Mimum Futures Contracts level that dictates\n                        whether or not a \"De Minimis Trading\" event has occurred. Only relevant if 'De Minimis Trading'\n                        has been specified in marketDisruptionEvent or additionalMarketDisruptionEvent.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementDisruption": {
                "type": "simpleType",
                "description": "Describes contract terms related to the consequences of Bullion Settlement Disruption Events.",
                "python_type": "unknownType",
                "children": {}
            },
            "rounding": {
                "type": "complexType",
                "description": "Rounding direction and precision for amounts.",
                "python_type": "unknownType",
                "children": {
                    "roundingDirection": {
                        "type": "simpleType",
                        "description": "Specifies the rounding direction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "precision": {
                        "type": "simpleType",
                        "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "commodityVarianceLeg": {
        "type": "complexType",
        "description": "Specifies the variance payments of a commodity variance swap.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationDates": {
                "type": "complexType",
                "description": "The Calculation Period dates for this leg of the trade where the Calculation Periods are all one\n                        day long. Only dates explicitly included determine the Calculation Periods and there is a\n                        Calculation Period for each date specified. As such one-day Calculation Period are typical a\n                        physically-settled emissions or metals trades it is expected that this element will not be used\n                        in performance swaps.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriods": {
                "type": "complexType",
                "description": "The Calculation Period start dates for this leg of the swap. This type is only intended to be\n                        used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg,\n                        then the calculationPeriodsReference element should be used to point to the Calculation Periods\n                        on that leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriodsSchedule": {
                "type": "complexType",
                "description": "The Calculation Periods for this leg of the swap. This type is only intended to be used if the\n                        Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the\n                        calculationPeriodsReference element should be used to point to the Calculation Periods on the\n                        other leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "balanceOfFirstPeriod": {
                        "type": "simpleType",
                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriodsReference": {
                "type": "complexType",
                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationPeriodsScheduleReference": {
                "type": "complexType",
                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationPeriodsDatesReference": {
                "type": "complexType",
                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "relativePaymentDates": {
                "type": "complexType",
                "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                "python_type": "unknownType",
                "children": {
                    "payRelativeTo": {
                        "type": "simpleType",
                        "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payRelativeToEvent": {
                        "type": "complexType",
                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "paymentDaysOffset": {
                        "type": "complexType",
                        "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "businessCentersReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenters": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "businessCenter": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "paymentDates": {
                "type": "complexType",
                "description": "Dates on which payments will be made.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDates": {
                        "type": "complexType",
                        "description": "A series of adjustable dates",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A series of dates specified as a repeating sequence from a base date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "masterAgreementPaymentDates": {
                "type": "simpleType",
                "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                "python_type": "unknownType",
                "children": {}
            },
            "commodity": {
                "type": "complexType",
                "description": "Describes the swap's underlyer when it has only one asset component.",
                "python_type": "unknownType",
                "children": {
                    "instrumentId": {
                        "type": "complexType",
                        "description": "Identification of the underlying asset, using public and/or private identifiers.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "instrumentType": {
                        "type": "complexType",
                        "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "description": {
                        "type": "simpleType",
                        "description": "Long name of the underlying asset.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodityBase": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodityDetails": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "unit": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "exchangeId": {
                        "type": "complexType",
                        "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "publication": {
                        "type": "complexType",
                        "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                        "python_type": "unknownType",
                        "children": {
                            "rateSource": {
                                "type": "complexType",
                                "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePage": {
                                "type": "complexType",
                                "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePageHeading": {
                                "type": "simpleType",
                                "description": "The heading for the rate source on a given rate source page or screen.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "specifiedPrice": {
                        "type": "simpleType",
                        "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryDates": {
                        "type": "simpleType",
                        "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryNearby": {
                        "type": "complexType",
                        "description": "A container for the parametric representation of nearby contracts.",
                        "python_type": "unknownType",
                        "children": {
                            "deliveryNearbyMultiplier": {
                                "type": "simpleType",
                                "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryNearbyType": {
                                "type": "simpleType",
                                "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDate": {
                        "type": "complexType",
                        "description": "The Delivery Date is a fixed, single day.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDateYearMonth": {
                        "type": "simpleType",
                        "description": "The Delivery Date is a fixed, single month.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryDateRollConvention": {
                        "type": "complexType",
                        "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDateExpirationConvention": {
                        "type": "complexType",
                        "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "multiplier": {
                        "type": "simpleType",
                        "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "commodityBasket": {
                "type": "complexType",
                "description": "Describes the swap's underlyer when it has multiple asset components.",
                "python_type": "unknownType",
                "children": {
                    "basketName": {
                        "type": "complexType",
                        "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "basketId": {
                        "type": "complexType",
                        "description": "A CDS basket identifier",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "notionalQuantityBasket": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "underlying": {
                                "type": "complexType",
                                "description": "Indicates the role of the option buyer with regard to this underlyer.",
                                "python_type": "unknownType",
                                "children": {
                                    "direction": {
                                        "type": "simpleType",
                                        "description": "Indicates the role of the option buyer with regard to this underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commodity": {
                                        "type": "complexType",
                                        "description": "Specifies the underlying component. At the time of the initial schema design, only underlyers of\n                        type Commodity are supported; the choice group in the future could offer the possibility of\n                        adding other types later.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "instrumentId": {
                                                "type": "complexType",
                                                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "instrumentType": {
                                                "type": "complexType",
                                                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "description": {
                                                "type": "simpleType",
                                                "description": "Long name of the underlying asset.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "commodityBase": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "commodityDetails": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "unit": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "exchangeId": {
                                                "type": "complexType",
                                                "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "publication": {
                                                "type": "complexType",
                                                "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "rateSource": {
                                                        "type": "complexType",
                                                        "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePage": {
                                                        "type": "complexType",
                                                        "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePageHeading": {
                                                        "type": "simpleType",
                                                        "description": "The heading for the rate source on a given rate source page or screen.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "specifiedPrice": {
                                                "type": "simpleType",
                                                "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryDates": {
                                                "type": "simpleType",
                                                "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryNearby": {
                                                "type": "complexType",
                                                "description": "A container for the parametric representation of nearby contracts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "deliveryNearbyMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "deliveryNearbyType": {
                                                        "type": "simpleType",
                                                        "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDate": {
                                                "type": "complexType",
                                                "description": "The Delivery Date is a fixed, single day.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDateYearMonth": {
                                                "type": "simpleType",
                                                "description": "The Delivery Date is a fixed, single month.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryDateRollConvention": {
                                                "type": "complexType",
                                                "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDateExpirationConvention": {
                                                "type": "complexType",
                                                "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "multiplier": {
                                                "type": "simpleType",
                                                "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "pricingDates": {
                                        "type": "complexType",
                                        "description": "The dates on which the option will price.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "lag": {
                                                "type": "complexType",
                                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lagDuration": {
                                                        "type": "complexType",
                                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "firstObservationDateOffset": {
                                                        "type": "complexType",
                                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "The type of day on which pricing occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayDistribution": {
                                                "type": "complexType",
                                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayCount": {
                                                "type": "simpleType",
                                                "description": "The number of days over which pricing should take place.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayOfWeek": {
                                                "type": "simpleType",
                                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayNumber": {
                                                "type": "simpleType",
                                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCalendar": {
                                                "type": "complexType",
                                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calendarSource": {
                                                "type": "simpleType",
                                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "settlementPeriods": {
                                                "type": "complexType",
                                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "duration": {
                                                        "type": "simpleType",
                                                        "description": "The length of each Settlement Period.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "applicableDay": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "startTime": {
                                                        "type": "complexType",
                                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "time": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "hourMinuteTime": {
                                                                        "type": "simpleType",
                                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "location": {
                                                                        "type": "complexType",
                                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "offset": {
                                                                "type": "complexType",
                                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "endTime": {
                                                        "type": "complexType",
                                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "time": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "hourMinuteTime": {
                                                                        "type": "simpleType",
                                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "location": {
                                                                        "type": "complexType",
                                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "offset": {
                                                                "type": "complexType",
                                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "timeDuration": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "excludeHolidays": {
                                                        "type": "complexType",
                                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "includeHolidays": {
                                                        "type": "complexType",
                                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "settlementPeriodsReference": {
                                                "type": "complexType",
                                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "pricingDates": {
                                                "type": "complexType",
                                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averagingMethod": {
                                        "type": "simpleType",
                                        "description": "The Method of Averaging if there is more than one Pricing Date.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "fx": {
                                        "type": "complexType",
                                        "description": "FX observations to be used to convert the observed Commodity Reference Price to the\n                                Settlement Currency.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "primaryRateSource": {
                                                "type": "complexType",
                                                "description": "The primary source for where the rate observation will occur. Will typically be either a page or\n                        a reference bank published rate.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "rateSource": {
                                                        "type": "complexType",
                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePage": {
                                                        "type": "complexType",
                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePageHeading": {
                                                        "type": "simpleType",
                                                        "description": "The heading for the rate source on a given rate source page.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "secondaryRateSource": {
                                                "type": "complexType",
                                                "description": "An alternative, or secondary, source for where the rate observation will occur. Will typically\n                        be either a page or a reference bank published rate.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "rateSource": {
                                                        "type": "complexType",
                                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePage": {
                                                        "type": "complexType",
                                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePageHeading": {
                                                        "type": "simpleType",
                                                        "description": "The heading for the rate source on a given rate source page.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "fxType": {
                                                "type": "complexType",
                                                "description": "A type to identify how the FX rate will be applied. This is intended to differentiate between\n                        the various methods for applying FX to the floating price such as a daily calculation, or\n                        averaging the FX and applying the average at the end of each CalculationPeriod.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "averagingMethod": {
                                                "type": "simpleType",
                                                "description": "The parties may specify a Method of Averaging when averaging of the FX rate is applicable.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "fixingTime": {
                                                "type": "complexType",
                                                "description": "The time at which the spot currency exchange rate will be observed. It is specified as a\n                                time in a specific business center, e.g. 11:00am London time.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "fxObservationDates": {
                                                "type": "complexType",
                                                "description": "A list of the fx observation dates for a given Calculation Period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "The type of day on which pricing occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayDistribution": {
                                                "type": "complexType",
                                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayCount": {
                                                "type": "simpleType",
                                                "description": "The number of days over which pricing should take place.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayOfWeek": {
                                                "type": "simpleType",
                                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayNumber": {
                                                "type": "simpleType",
                                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "lag": {
                                                "type": "complexType",
                                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within the\n                        respective calculation period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lagDuration": {
                                                        "type": "complexType",
                                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "firstObservationDateOffset": {
                                                        "type": "complexType",
                                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "lagReference": {
                                                "type": "complexType",
                                                "description": "Allows a lag to reference one already defined elsewhere in the trade.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "conversionFactor": {
                                        "type": "simpleType",
                                        "description": "If the Notional Quantity is specified in a unit that does not match the unit in which\n                                the Commodity Reference Price is quoted, the scaling or conversion factor used to\n                                convert the Commodity Reference Price unit into the Notional Quantity unit should be\n                                stated here. If there is no conversion, this element is not intended to be used.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "notionalQuantitySchedule": {
                                        "type": "complexType",
                                        "description": "Allows the documentation of a shaped notional trade where the notional changes over the\n                                life of the transaction.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "notionalStep": {
                                                "type": "complexType",
                                                "description": "The Notional Quantity per Calculation Period. There must be a Notional Quantity specified\n                            for each Calculation Period, regardless of whether the quantity changes or remains the same\n                            between periods.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "quantityUnit": {
                                                        "type": "complexType",
                                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quantityFrequency": {
                                                        "type": "complexType",
                                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quantity": {
                                                        "type": "simpleType",
                                                        "description": "Amount of commodity per quantity frequency.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "settlementPeriodsNotionalQuantitySchedule": {
                                                "type": "complexType",
                                                "description": "For an electricity transaction, the Notional Quantity schedule for a one or more groups of\n                            Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                            different groups of Settlement Periods, this element should be repeated.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "settlementPeriodsNotionalQuantityStep": {
                                                        "type": "complexType",
                                                        "description": "For an electricity transaction, the Notional Quantity for a given Calculation Period during the\n                        life of the trade which applies to the range(s) of Settlement Periods referenced by\n                        settlementPeriodsReference. There must be a settlementPeriodsNotionalQuantityStep specified for\n                        each Calculation Period, regardless of whether the NotionalQuantity changes or remains the same\n                        between periods.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "quantityUnit": {
                                                                "type": "complexType",
                                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quantityFrequency": {
                                                                "type": "complexType",
                                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "quantity": {
                                                                "type": "simpleType",
                                                                "description": "Amount of commodity per quantity frequency.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "settlementPeriodsReference": {
                                                        "type": "complexType",
                                                        "description": "The range(s) of Settlement Periods to which the Fixed Price steps apply.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "notionalQuantity": {
                                        "type": "complexType",
                                        "description": "The Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "settlementPeriodsNotionalQuantity": {
                                        "type": "complexType",
                                        "description": "For an electricity transaction, the Notional Quantity for a one or more groups of\n                                Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                                different groups of Settlement Periods, this element should be repeated.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quantityUnit": {
                                                "type": "complexType",
                                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantityFrequency": {
                                                "type": "complexType",
                                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "quantity": {
                                                "type": "simpleType",
                                                "description": "Amount of commodity per quantity frequency.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "settlementPeriodsReference": {
                                                "type": "complexType",
                                                "description": "The range(s) of Settlement Periods to which the Notional Quantity applies.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "totalNotionalQuantity": {
                                        "type": "simpleType",
                                        "description": "The Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a quantity defined on another leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "notionalAmountBasket": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "underlying": {
                                "type": "complexType",
                                "description": "Indicates the role of the option buyer with regard to this underlyer.",
                                "python_type": "unknownType",
                                "children": {
                                    "direction": {
                                        "type": "simpleType",
                                        "description": "Indicates the role of the option buyer with regard to this underlyer.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commodity": {
                                        "type": "complexType",
                                        "description": "Specifies the underlying component. At the time of the initial schema design, only underlyers of\n                        type Commodity are supported; the choice group in the future could offer the possibility of\n                        adding other types later.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "instrumentId": {
                                                "type": "complexType",
                                                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "instrumentType": {
                                                "type": "complexType",
                                                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "description": {
                                                "type": "simpleType",
                                                "description": "Long name of the underlying asset.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "commodityBase": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "commodityDetails": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "unit": {
                                                "type": "complexType",
                                                "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "exchangeId": {
                                                "type": "complexType",
                                                "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "publication": {
                                                "type": "complexType",
                                                "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "rateSource": {
                                                        "type": "complexType",
                                                        "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePage": {
                                                        "type": "complexType",
                                                        "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "rateSourcePageHeading": {
                                                        "type": "simpleType",
                                                        "description": "The heading for the rate source on a given rate source page or screen.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "specifiedPrice": {
                                                "type": "simpleType",
                                                "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryDates": {
                                                "type": "simpleType",
                                                "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryNearby": {
                                                "type": "complexType",
                                                "description": "A container for the parametric representation of nearby contracts.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "deliveryNearbyMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "deliveryNearbyType": {
                                                        "type": "simpleType",
                                                        "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDate": {
                                                "type": "complexType",
                                                "description": "The Delivery Date is a fixed, single day.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDateYearMonth": {
                                                "type": "simpleType",
                                                "description": "The Delivery Date is a fixed, single month.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "deliveryDateRollConvention": {
                                                "type": "complexType",
                                                "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "deliveryDateExpirationConvention": {
                                                "type": "complexType",
                                                "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "multiplier": {
                                                "type": "simpleType",
                                                "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "pricingDates": {
                                        "type": "complexType",
                                        "description": "The dates on which the option will price.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "calculationPeriodsReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsScheduleReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calculationPeriodsDatesReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "lag": {
                                                "type": "complexType",
                                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "lagDuration": {
                                                        "type": "complexType",
                                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "firstObservationDateOffset": {
                                                        "type": "complexType",
                                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "The type of day on which pricing occurs.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayDistribution": {
                                                "type": "complexType",
                                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayCount": {
                                                "type": "simpleType",
                                                "description": "The number of days over which pricing should take place.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayOfWeek": {
                                                "type": "simpleType",
                                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayNumber": {
                                                "type": "simpleType",
                                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCalendar": {
                                                "type": "complexType",
                                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "calendarSource": {
                                                "type": "simpleType",
                                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "settlementPeriods": {
                                                "type": "complexType",
                                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "duration": {
                                                        "type": "simpleType",
                                                        "description": "The length of each Settlement Period.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "applicableDay": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "startTime": {
                                                        "type": "complexType",
                                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "time": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "hourMinuteTime": {
                                                                        "type": "simpleType",
                                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "location": {
                                                                        "type": "complexType",
                                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "offset": {
                                                                "type": "complexType",
                                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "endTime": {
                                                        "type": "complexType",
                                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "time": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "hourMinuteTime": {
                                                                        "type": "simpleType",
                                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "location": {
                                                                        "type": "complexType",
                                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "offset": {
                                                                "type": "complexType",
                                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "periodMultiplier": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "period": {
                                                                        "type": "simpleType",
                                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "dayType": {
                                                                        "type": "simpleType",
                                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "timeDuration": {
                                                        "type": "simpleType",
                                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "excludeHolidays": {
                                                        "type": "complexType",
                                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "includeHolidays": {
                                                        "type": "complexType",
                                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "settlementPeriodsReference": {
                                                "type": "complexType",
                                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "pricingDates": {
                                                "type": "complexType",
                                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "unadjustedDate": {
                                                        "type": "complexType",
                                                        "description": "A date subject to adjustment.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dateAdjustments": {
                                                        "type": "complexType",
                                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "adjustedDate": {
                                                        "type": "complexType",
                                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "averagingMethod": {
                                        "type": "simpleType",
                                        "description": "The Method of Averaging if there is more than one Pricing Date.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "constituentWeight": {
                                        "type": "simpleType",
                                        "description": "If the Notional Quantity is specified in a unit that does not match the unit in which\n                                the Commodity Reference Price is quoted, the scaling or conversion factor used to\n                                convert the Commodity Reference Price unit into the Notional Quantity unit should be\n                                stated here. If there is no conversion, this element is not intended to be used.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "notionalAmount": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The non negative monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "notionalAmount": {
                "type": "complexType",
                "description": "Specifies the notional amount of a commodity performance type swap. It is a\n                                    currency-denominated value (i.e. price-times-quantity). In confirmations is also\n                                    referred to as the Notional Quantity (sic, expressed in currency units), Notional\n                                    Amount, Equity Notional Amount and, in the case of reinvesting swaps, Initial\n                                    Notional Amount.",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "reinvestmentFeature": {
                        "type": "simpleType",
                        "description": "This element indicates whether the notional amount (or equivalent) is constant across\n                                each Calculation Period or whether the notional amount in each Calculation Period\n                                (\"false\") is the notional amount in the previous period multiplied by 1 + commodity\n                                index return in the current period (\"true\"). In cases where reinstementFeature = true\n                                the 'amount' element is the Initial Notional Amount (or equivalent).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "notionalAmountReference": {
                "type": "complexType",
                "description": "A reference to the Return swap notional amount defined in another leg of the return\n                                    swap.",
                "python_type": "unknownType",
                "children": {}
            },
            "varianceStrikePrice": {
                "type": "simpleType",
                "description": "Specifies the variance strike price when this strike is expressed in variance units.\n                                    Payments on the variance leg are equal to the national amount multiplied by the\n                                    realized variance minus this variance strike price: notional amount * (realized\n                                    variance - variance strike price).",
                "python_type": "unknownType",
                "children": {}
            },
            "volatilityStrikePrice": {
                "type": "simpleType",
                "description": "Specifies the volatility strike price when this strike is expressed in standard\n                                    deviation units. Payments on the variance leg are equal to the national amount\n                                    multiplied by the realized volatility squared minus the volatility strike price\n                                    squared. Notional amount * (realized volatility^2 - volatility strike^2). Squaring\n                                    the volatility strike price converts the volatility strike price into a variance\n                                    strike price. Squaring the realized volatility converts realized volatility to\n                                    realized variance.",
                "python_type": "unknownType",
                "children": {}
            },
            "varianceCalculation": {
                "type": "complexType",
                "description": "Specifies, in relation to each Payment Date, the variance percentage which, when\n                                multiplied times the notional amount is the amount to which the Payment Date relates.\n                                For purposes of this representation the realized variance is: (annualizationFactor / N)\n                                * signma from i = 1 to N (ln (S sub (i+1)) / (S sub i)), where: ln is the natural\n                                logarithm, N is the number of pricing dates, S sub i is the relevant price on the\n                                observation date i. If nAdjustment is 'true' then the denominator of the annualization\n                                factor is (N - 1) rather than N. If realized volatility is the performance metric in a\n                                variance swap rather than realized variance then the square root of the formula above\n                                will appear in the confirmation.",
                "python_type": "unknownType",
                "children": {
                    "pricingDates": {
                        "type": "complexType",
                        "description": "Describes which dates are valid dates on which to observe a price or index level.",
                        "python_type": "unknownType",
                        "children": {
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCalendar": {
                                "type": "complexType",
                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calendarSource": {
                                "type": "simpleType",
                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementPeriods": {
                                "type": "complexType",
                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                "python_type": "unknownType",
                                "children": {
                                    "duration": {
                                        "type": "simpleType",
                                        "description": "The length of each Settlement Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "applicableDay": {
                                        "type": "simpleType",
                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "startTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "endTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "timeDuration": {
                                        "type": "simpleType",
                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "excludeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "includeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "pricingDates": {
                                "type": "complexType",
                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "valuationDates": {
                        "type": "complexType",
                        "description": "Defines when a price or index level will be observed that will figure in the return calculation.",
                        "python_type": "unknownType",
                        "children": {
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCalendar": {
                                "type": "complexType",
                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calendarSource": {
                                "type": "simpleType",
                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementPeriods": {
                                "type": "complexType",
                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                "python_type": "unknownType",
                                "children": {
                                    "duration": {
                                        "type": "simpleType",
                                        "description": "The length of each Settlement Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "applicableDay": {
                                        "type": "simpleType",
                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "startTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "endTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "timeDuration": {
                                        "type": "simpleType",
                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "excludeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "includeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "valuationDates": {
                                "type": "complexType",
                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "annualizationFactor": {
                        "type": "simpleType",
                        "description": "This specifies the numerator of an annualization factor. Frequently this number is equal to the\n                        number of observations of prices in a year e.g. 252.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "nAdjustment": {
                        "type": "simpleType",
                        "description": "Specifies whether denominator of the annualization factor is N (\"false\") or N - 1 (\"true\").",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "electricityPhysicalLeg": {
        "type": "complexType",
        "description": "Physically settled electricity leg.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "deliveryPeriods": {
                "type": "complexType",
                "description": "The different options for specifying the Delivery or Supply Periods. Unless the quantity\n                                or price is to vary periodically during the trade or physical delivery occurs on a\n                                periodic basis, periodsSchedule should be used and set to 1T.",
                "python_type": "unknownType",
                "children": {
                    "periods": {
                        "type": "complexType",
                        "description": "The Delivery Periods for this leg of the swap. This type is only intended to be used if the\n                        Delivery Periods differ from the Calculation Periods on the fixed or floating leg. If\n                        DeliveryPeriods mirror another leg, then the calculationPeriodsReference element should be used\n                        to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can\n                        be used to point to the Calculation Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "periodsSchedule": {
                        "type": "complexType",
                        "description": "The Delivery Periods for this leg of the swap. This type is only intended to be used if the\n                        Delivery Periods differ from the Calculation Periods on the fixed or floating leg. If\n                        DeliveryPeriods mirror another leg, then the calculationPeriodsReference element should be used\n                        to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can\n                        be used to point to the Calculation Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "balanceOfFirstPeriod": {
                                "type": "simpleType",
                                "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementPeriods": {
                "type": "complexType",
                "description": "The specification of the Settlement Periods in which the electricity will be delivered.\n                                The Settlement Periods will apply from and including the Effective Date up to and\n                                including the Termination Date. If more than one settlementPeriods element is present\n                                this indicates multiple ranges of Settlement Periods apply to the entire trade - for\n                                example off-peak weekdays and all day weekends. Settlement Period ranges should not\n                                overlap.",
                "python_type": "unknownType",
                "children": {
                    "duration": {
                        "type": "simpleType",
                        "description": "The length of each Settlement Period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "applicableDay": {
                        "type": "simpleType",
                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "startTime": {
                        "type": "complexType",
                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                        "python_type": "unknownType",
                        "children": {
                            "time": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "location": {
                                        "type": "complexType",
                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "offset": {
                                "type": "complexType",
                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "endTime": {
                        "type": "complexType",
                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                        "python_type": "unknownType",
                        "children": {
                            "time": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "location": {
                                        "type": "complexType",
                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "offset": {
                                "type": "complexType",
                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                "python_type": "unknownType",
                                "children": {
                                    "periodMultiplier": {
                                        "type": "simpleType",
                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "period": {
                                        "type": "simpleType",
                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dayType": {
                                        "type": "simpleType",
                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "timeDuration": {
                        "type": "simpleType",
                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "excludeHolidays": {
                        "type": "complexType",
                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "includeHolidays": {
                        "type": "complexType",
                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementPeriodsSchedule": {
                "type": "complexType",
                "description": "The specification of the Settlement Periods in which the electricity will be delivered\n                                for a \"shaped\" trade i.e. where different Settlement Period ranges will apply to\n                                different periods of the trade.",
                "python_type": "unknownType",
                "children": {
                    "settlementPeriodsStep": {
                        "type": "complexType",
                        "description": "The range of Settlement Periods per Calculation Period. There must be a range of Settlement\n                        Periods specified for each Calculation Period, regardless of whether the range of Settlement\n                        Periods changes or stays the same between periods.",
                        "python_type": "unknownType",
                        "children": {
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "The specification of the Settlement Periods in which the electricity will be delivered. The\n                        Settlement Periods will apply for the duration of the appliable period. If more than one\n                        settlementPeriods element is present this indicates multiple ranges of Settlement Periods apply\n                        for the duration of the applicable period.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Delivery Periods defined elsewhere.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined elsewhere.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "loadType": {
                "type": "simpleType",
                "description": "LoadType is a summary of the full description of the settlement periods with respect to\n                                the region. Used for describing Electricity delivery schedules (e.g. Base, Peak,\n                                Off-Peak, Custom).",
                "python_type": "unknownType",
                "children": {}
            },
            "electricity": {
                "type": "complexType",
                "description": "The specification of the electricity to be delivered.",
                "python_type": "unknownType",
                "children": {
                    "type": {
                        "type": "simpleType",
                        "description": "The type of electricity product to be delivered.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "voltage": {
                        "type": "simpleType",
                        "description": "The voltage, expressed as a number of volts, of the electricity to be delivered.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryConditions": {
                "type": "complexType",
                "description": "The physical delivery conditions for the transaction.",
                "python_type": "unknownType",
                "children": {
                    "deliveryPoint": {
                        "type": "complexType",
                        "description": "The point at which delivery of the electricity will occur.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryType": {
                        "type": "complexType",
                        "description": "Indicates the under what conditions the Parties' delivery obligations apply.",
                        "python_type": "unknownType",
                        "children": {
                            "firm": {
                                "type": "complexType",
                                "description": "Indicates under what condtitions the Parties' delivery obligations apply.",
                                "python_type": "unknownType",
                                "children": {
                                    "forceMajeure": {
                                        "type": "simpleType",
                                        "description": "If true, indicates that the buyer and seller should be excused of their delivery obligations\n                        when such performance is prevented by Force Majeure. For EEI transactions, this would indicate\n                        \"Firm (LD)\" If false, indicates that the buyer and seller should not be excused of their\n                        delivery obligations when such performance is prevented by Force Majeure. For EEI transactions,\n                        this would indicate \"Firm (No Force Majeure)\"",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "nonFirm": {
                                "type": "simpleType",
                                "description": "If present and set to true, indicates that delivery or receipt of the electricity may be\n                        interrupted for any reason or for no reason, without liability on the part of either Party. This\n                        element should never have a value of false.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "systemFirm": {
                                "type": "complexType",
                                "description": "Indicates that the electricity is intended to be supplied from the owned or controlled\n                        generation or pre-existing purchased power assets of the system specified.",
                                "python_type": "unknownType",
                                "children": {
                                    "applicable": {
                                        "type": "simpleType",
                                        "description": "Indicates that the trade is for a System Firm product. Should always be set to \"true\".",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "system": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "unitFirm": {
                                "type": "complexType",
                                "description": "Indicates that the electricity is intended to be supplied from a generation asset which can\n                        optionally be specified.",
                                "python_type": "unknownType",
                                "children": {
                                    "applicable": {
                                        "type": "simpleType",
                                        "description": "Indicates that the trade is for a Unit Firm product. Should always be set to \"true\".",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "generationAsset": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "transmissionContingency": {
                        "type": "complexType",
                        "description": "Indicates that the performance of the buyer or seller shall be excused (under the conditions\n                            specified) if transmission of the elctricity is unavailable or interrupted.",
                        "python_type": "unknownType",
                        "children": {
                            "contingency": {
                                "type": "complexType",
                                "description": "The conditions under which the party specified in contingentParty will be excused from damages\n                        if transmission is interrupted or curtailed.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "contingentParty": {
                                "type": "complexType",
                                "description": "The party to which the contingency applies.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "interconnectionPoint": {
                        "type": "complexType",
                        "description": "Identification of the border(s) or border point(s) of a transportation contract.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryZone": {
                        "type": "complexType",
                        "description": "The zone covering potential delivery points for the electricity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "electingPartyReference": {
                        "type": "complexType",
                        "description": "Indicates the party able to decide which delivery point within the deliveryPoint is used for\n                            delivery. For EEI transactions, this should reference the seller of the electricity.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryQuantity": {
                "type": "complexType",
                "description": "The different options for specifying the quantity.",
                "python_type": "unknownType",
                "children": {
                    "physicalQuantity": {
                        "type": "complexType",
                        "description": "The Quantity per Delivery Period.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the range(s) of Settlement Periods to which this quantity\n                                applies.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "physicalQuantitySchedule": {
                        "type": "complexType",
                        "description": "Allows the documentation of a shaped quantity trade where the quantity changes over\n                                    the life of the transaction. Note that if the range of Settlement Periods also\n                                    varies over the life of the transaction this element should not be used. Instead,\n                                    physicalQuantity should be repeated for each range of Settlement Periods that apply\n                                    at any point during the trade.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityStep": {
                                "type": "complexType",
                                "description": "The quantity per Calculation Period. There must be a quantity specified for each Calculation\n                        Period, regardless of whether the quantity changes or remains the same between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantityUnit": {
                                        "type": "complexType",
                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityFrequency": {
                                        "type": "complexType",
                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "Amount of commodity per quantity frequency.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Delivery Periods defined elsewhere.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined elsewhere.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the range(s) of Settlement Periods to which this quantity\n                                applies.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "totalPhysicalQuantity": {
                        "type": "complexType",
                        "description": "The Total Quantity of the commodity to be delivered.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "environmentalPhysicalLeg": {
        "type": "complexType",
        "description": "Physically settled environmental leg.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "numberOfAllowances": {
                "type": "complexType",
                "description": "The number of allowances, certificates or credit to be transaction in the transaction.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "environmental": {
                "type": "complexType",
                "description": "The specification of the type of allowance or credit.",
                "python_type": "unknownType",
                "children": {
                    "productType": {
                        "type": "simpleType",
                        "description": "Specifies the type of environmental allowance or credit. Examples include allowances or credit\n                        issued by the European Union (E.U.) or by the State of California in the Unites States.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "compliancePeriod": {
                        "type": "complexType",
                        "description": "Applies to E.U. Emissions Allowance Transactions. Describes Specified Compliance Period for\n                        which the Allowances are issued.",
                        "python_type": "unknownType",
                        "children": {
                            "startYear": {
                                "type": "simpleType",
                                "description": "The first year of the Compliance Period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "endYear": {
                                "type": "simpleType",
                                "description": "The last year of the Commpliance Period.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "vintage": {
                        "type": "simpleType",
                        "description": "Applies to U.S. Emissions Allowance Transactions. The year(s) of the applicable Emissions\n                        Product(s) as specified in an Emissions Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "applicableLaw": {
                        "type": "complexType",
                        "description": "Applies to U.S. Emissions Allowance Transactions. Used to specify the Applicable Emissions Law\n                        when this is not defined in Emissions Product Definitions Exhibit.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "trackingSystem": {
                        "type": "complexType",
                        "description": "Applies to U.S. Emissions Allowance Transactions. Used to specify the Tracking System when this\n                        is not defined in Emissions Product Definitions Exhibit.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "abandonmentOfScheme": {
                "type": "simpleType",
                "description": "Applies to U.S. Emissions Allowance Transactions. Specifies terms which apply in the\n                                event of an Abandonment of Scheme event.",
                "python_type": "unknownType",
                "children": {}
            },
            "deliveryDate": {
                "type": "complexType",
                "description": "The date on which allowances are to be delivered as specified in the related\n                                Confirmation.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "paymentDate": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayType": {
                        "type": "simpleType",
                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessDayConvention": {
                        "type": "simpleType",
                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "businessCentersReference": {
                "type": "complexType",
                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                "python_type": "unknownType",
                "children": {}
            },
            "businessCenters": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "businessCenter": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "failureToDeliverApplicable": {
                "type": "simpleType",
                "description": "Applies to EU Emissions Allowance Transactions. Holds the Failure to Deliver\n                                (Alternative Method) election. Used to determine how provisions in Part [7] Page 7 (B)\n                                Failure to Deliver Not Remedied are to be applied.",
                "python_type": "unknownType",
                "children": {}
            },
            "eEPParameters": {
                "type": "complexType",
                "description": "Applies to EU Emissions Allowance Transactions. Contains a series of parameters\n                                controlling Excess Emissions Penalty payments.",
                "python_type": "unknownType",
                "children": {
                    "eEPApplicable": {
                        "type": "simpleType",
                        "description": "If Excess Emission Penalty is specified to be applicable in the Confirmation then the Excess\n                        Emission Penalty will be determined in the manner specified in the Confirmation (see other EEP\n                        parameters)",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "riskPeriod": {
                        "type": "complexType",
                        "description": "Used to determine how provisions in Part [7] Page 7 (B) Failure to Deliver Not Remedied are to\n                        be applied.",
                        "python_type": "unknownType",
                        "children": {
                            "startDate": {
                                "type": "simpleType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "endDate": {
                                "type": "simpleType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "equivalentApplicable": {
                        "type": "simpleType",
                        "description": "When \"true\" the EEP Equivalent is applicable. See Part [7] definition of EEP Equivalent.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "penaltyApplicable": {
                        "type": "simpleType",
                        "description": "When \"true\" the Excess Emissions Penalty is applicable. See Part [7] definition of Excess\n                        Emissions Penalty.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "fixedLeg": {
        "type": "complexType",
        "description": "Fixed Price Leg.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationDates": {
                "type": "complexType",
                "description": "The Calculation Period dates for this leg of the trade where the Calculation Periods are all one\n                        day long. Only dates explicitly included determine the Calculation Periods and there is a\n                        Calculation Period for each date specified. As such one-day Calculation Period are typical a\n                        physically-settled emissions or metals trades it is expected that this element will not be used\n                        in performance swaps.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriods": {
                "type": "complexType",
                "description": "The Calculation Period start dates for this leg of the swap. This type is only intended to be\n                        used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg,\n                        then the calculationPeriodsReference element should be used to point to the Calculation Periods\n                        on that leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriodsSchedule": {
                "type": "complexType",
                "description": "The Calculation Periods for this leg of the swap. This type is only intended to be used if the\n                        Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the\n                        calculationPeriodsReference element should be used to point to the Calculation Periods on the\n                        other leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "balanceOfFirstPeriod": {
                        "type": "simpleType",
                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriodsReference": {
                "type": "complexType",
                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationPeriodsScheduleReference": {
                "type": "complexType",
                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationPeriodsDatesReference": {
                "type": "complexType",
                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "fixedPriceSchedule": {
                "type": "complexType",
                "description": "Allows the specification of a Fixed Price that varies over the life of the trade.",
                "python_type": "unknownType",
                "children": {
                    "fixedPriceStep": {
                        "type": "complexType",
                        "description": "The Fixed Price for a given Calculation Period during the life of the trade. There must be a\n                            Fixed Price step specified for each Calculation Period, regardless of whether the Fixed\n                            Price changes or remains the same between periods.",
                        "python_type": "unknownType",
                        "children": {
                            "price": {
                                "type": "simpleType",
                                "description": "The Fixed Price.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "priceCurrency": {
                                "type": "complexType",
                                "description": "The currency used to specify the fixed price or level in terms of a price per unit of commodity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "priceUnit": {
                                "type": "complexType",
                                "description": "The unit of measure used to specify the fixed price or level in terms of a price per unit of\n                        commodity.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "worldscaleRateStep": {
                        "type": "simpleType",
                        "description": "For a Wet Voyager Charter Freight Swap, the number of Worldscale Points for purposes of the\n                            calculation of a Fixed Amount for a given Calculation Period during the life of the trade.\n                            There must be Worldscale Rate Step specified for each Calculation Period, regardless of\n                            whether the Worldscale Rate Step changes or remains the same between periods.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "contractRateStep": {
                        "type": "complexType",
                        "description": "For a DRY Voyage Charter or Time Charter Freight Swap, the price per relevant unit for\n                            pruposes of the calculation of a Fixed Amount for a given Calculation Period during the life\n                            of the trade. There must be Worldscale Rate Step specified for each Calculation Period,\n                            regardless of whether the Worldscale Rate Step changes or remains the same between periods.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The non negative monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "settlementPeriodsPriceSchedule": {
                        "type": "complexType",
                        "description": "For an electricity transaction, the fixed price schedule for one or more groups of\n                            Settlement Periods on which fixed payments are based. if the schedule differs for different\n                            groups of Settlement Periods, this element should be repeated.",
                        "python_type": "unknownType",
                        "children": {
                            "settlementPeriodsPriceStep": {
                                "type": "complexType",
                                "description": "For an electricity transaction, the Fixed Price for a given Calculation Period during the life\n                        of the trade which applies to the range(s) of Settlement Periods referenced by settlementPeriods\n                        Reference. There must be a Fixed Price step specified for each Calculation Period, regardless of\n                        whether the Fixed Price changes or remains the same between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "price": {
                                        "type": "simpleType",
                                        "description": "The Fixed Price.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "priceCurrency": {
                                        "type": "complexType",
                                        "description": "The currency used to specify the fixed price or level in terms of a price per unit of commodity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "priceUnit": {
                                        "type": "complexType",
                                        "description": "The unit of measure used to specify the fixed price or level in terms of a price per unit of\n                        commodity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "The range(s) of Settlement Periods to which the Fixed Price steps apply.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "fixedPrice": {
                "type": "complexType",
                "description": "Fixed price on which fixed payments are based.",
                "python_type": "unknownType",
                "children": {
                    "price": {
                        "type": "simpleType",
                        "description": "The Fixed Price.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceCurrency": {
                        "type": "complexType",
                        "description": "The currency used to specify the fixed price or level in terms of a price per unit of commodity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceUnit": {
                        "type": "complexType",
                        "description": "The unit of measure used to specify the fixed price or level in terms of a price per unit of\n                        commodity.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "worldscaleRate": {
                "type": "simpleType",
                "description": "For a WET Voyager Charter Commodity Swap, the number of Worldscale Points for purposes\n                                of the calculation of a Fixed Amount.",
                "python_type": "unknownType",
                "children": {}
            },
            "contractRate": {
                "type": "complexType",
                "description": "For a DRY Voyage Charter or Time Charter Commodity Swap, the price per relevant unit for\n                                pruposes of the calculation of a Fixed Amount.",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementPeriodsPrice": {
                "type": "complexType",
                "description": "For an electricity transaction, the fixed price for one or more groups of Settlement\n                                Periods on which fixed payments are based. If the fixed price differs for different\n                                groups of Settlement Periods, this element should be repeated.",
                "python_type": "unknownType",
                "children": {
                    "price": {
                        "type": "simpleType",
                        "description": "The Fixed Price.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceCurrency": {
                        "type": "complexType",
                        "description": "The currency used to specify the fixed price or level in terms of a price per unit of commodity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "priceUnit": {
                        "type": "complexType",
                        "description": "The unit of measure used to specify the fixed price or level in terms of a price per unit of\n                        commodity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "settlementPeriodsReference": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "totalPrice": {
                "type": "complexType",
                "description": "The total amount of all fixed payments due during the term of the trade.",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "notionalQuantitySchedule": {
                "type": "complexType",
                "description": "Allows the documentation of a shaped notional trade where the notional changes over the\n                                life of the transaction.",
                "python_type": "unknownType",
                "children": {
                    "notionalStep": {
                        "type": "complexType",
                        "description": "The Notional Quantity per Calculation Period. There must be a Notional Quantity specified\n                            for each Calculation Period, regardless of whether the quantity changes or remains the same\n                            between periods.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "settlementPeriodsNotionalQuantitySchedule": {
                        "type": "complexType",
                        "description": "For an electricity transaction, the Notional Quantity schedule for a one or more groups of\n                            Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                            different groups of Settlement Periods, this element should be repeated.",
                        "python_type": "unknownType",
                        "children": {
                            "settlementPeriodsNotionalQuantityStep": {
                                "type": "complexType",
                                "description": "For an electricity transaction, the Notional Quantity for a given Calculation Period during the\n                        life of the trade which applies to the range(s) of Settlement Periods referenced by\n                        settlementPeriodsReference. There must be a settlementPeriodsNotionalQuantityStep specified for\n                        each Calculation Period, regardless of whether the NotionalQuantity changes or remains the same\n                        between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantityUnit": {
                                        "type": "complexType",
                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityFrequency": {
                                        "type": "complexType",
                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "Amount of commodity per quantity frequency.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "The range(s) of Settlement Periods to which the Fixed Price steps apply.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "notionalQuantity": {
                "type": "complexType",
                "description": "The Notional Quantity.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantityFrequency": {
                        "type": "complexType",
                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementPeriodsNotionalQuantity": {
                "type": "complexType",
                "description": "For an electricity transaction, the Notional Quantity for a one or more groups of\n                                Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                                different groups of Settlement Periods, this element should be repeated.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantityFrequency": {
                        "type": "complexType",
                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "settlementPeriodsReference": {
                        "type": "complexType",
                        "description": "The range(s) of Settlement Periods to which the Notional Quantity applies.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "totalNotionalQuantity": {
                "type": "simpleType",
                "description": "The Total Notional Quantity.",
                "python_type": "unknownType",
                "children": {}
            },
            "quantityReference": {
                "type": "complexType",
                "description": "A pointer style reference to a quantity defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "relativePaymentDates": {
                "type": "complexType",
                "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                "python_type": "unknownType",
                "children": {
                    "payRelativeTo": {
                        "type": "simpleType",
                        "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payRelativeToEvent": {
                        "type": "complexType",
                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "paymentDaysOffset": {
                        "type": "complexType",
                        "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "businessCentersReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenters": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "businessCenter": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "paymentDates": {
                "type": "complexType",
                "description": "Dates on which payments will be made.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDates": {
                        "type": "complexType",
                        "description": "A series of adjustable dates",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A series of dates specified as a repeating sequence from a base date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "masterAgreementPaymentDates": {
                "type": "simpleType",
                "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                "python_type": "unknownType",
                "children": {}
            },
            "flatRate": {
                "type": "simpleType",
                "description": "Whether the Flat Rate is the New Worldwide Tanker Nominal Freight Scale for the Freight Index\n                        Route taken at the Trade Date of the transaction or taken on each Pricing Date.",
                "python_type": "unknownType",
                "children": {}
            },
            "flatRateAmount": {
                "type": "complexType",
                "description": "If flatRate is set to \"Fixed\", the actual value of the Flat Rate.",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "floatingLeg": {
        "type": "complexType",
        "description": "Floating Price leg.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationDates": {
                "type": "complexType",
                "description": "The Calculation Period dates for this leg of the trade where the Calculation Periods are all one\n                        day long. Only dates explicitly included determine the Calculation Periods and there is a\n                        Calculation Period for each date specified. As such one-day Calculation Period are typical a\n                        physically-settled emissions or metals trades it is expected that this element will not be used\n                        in performance swaps.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriods": {
                "type": "complexType",
                "description": "The Calculation Period start dates for this leg of the swap. This type is only intended to be\n                        used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg,\n                        then the calculationPeriodsReference element should be used to point to the Calculation Periods\n                        on that leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriodsSchedule": {
                "type": "complexType",
                "description": "The Calculation Periods for this leg of the swap. This type is only intended to be used if the\n                        Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the\n                        calculationPeriodsReference element should be used to point to the Calculation Periods on the\n                        other leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation\n                        Periods Schedule for that leg.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "balanceOfFirstPeriod": {
                        "type": "simpleType",
                        "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "calculationPeriodsReference": {
                "type": "complexType",
                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationPeriodsScheduleReference": {
                "type": "complexType",
                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculationPeriodsDatesReference": {
                "type": "complexType",
                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "commodity": {
                "type": "complexType",
                "description": "Specifies the underlying instrument. Only underlyers of type Commodity are supported.",
                "python_type": "unknownType",
                "children": {
                    "instrumentId": {
                        "type": "complexType",
                        "description": "Identification of the underlying asset, using public and/or private identifiers.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "instrumentType": {
                        "type": "complexType",
                        "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "description": {
                        "type": "simpleType",
                        "description": "Long name of the underlying asset.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodityBase": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "commodityDetails": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "unit": {
                        "type": "complexType",
                        "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "exchangeId": {
                        "type": "complexType",
                        "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "publication": {
                        "type": "complexType",
                        "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                        "python_type": "unknownType",
                        "children": {
                            "rateSource": {
                                "type": "complexType",
                                "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePage": {
                                "type": "complexType",
                                "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePageHeading": {
                                "type": "simpleType",
                                "description": "The heading for the rate source on a given rate source page or screen.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "specifiedPrice": {
                        "type": "simpleType",
                        "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryDates": {
                        "type": "simpleType",
                        "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryNearby": {
                        "type": "complexType",
                        "description": "A container for the parametric representation of nearby contracts.",
                        "python_type": "unknownType",
                        "children": {
                            "deliveryNearbyMultiplier": {
                                "type": "simpleType",
                                "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryNearbyType": {
                                "type": "simpleType",
                                "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDate": {
                        "type": "complexType",
                        "description": "The Delivery Date is a fixed, single day.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDateYearMonth": {
                        "type": "simpleType",
                        "description": "The Delivery Date is a fixed, single month.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryDateRollConvention": {
                        "type": "complexType",
                        "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryDateExpirationConvention": {
                        "type": "complexType",
                        "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "multiplier": {
                        "type": "simpleType",
                        "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "notionalQuantitySchedule": {
                "type": "complexType",
                "description": "Allows the documentation of a shaped notional trade where the notional changes over the\n                                life of the transaction.",
                "python_type": "unknownType",
                "children": {
                    "notionalStep": {
                        "type": "complexType",
                        "description": "The Notional Quantity per Calculation Period. There must be a Notional Quantity specified\n                            for each Calculation Period, regardless of whether the quantity changes or remains the same\n                            between periods.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "settlementPeriodsNotionalQuantitySchedule": {
                        "type": "complexType",
                        "description": "For an electricity transaction, the Notional Quantity schedule for a one or more groups of\n                            Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                            different groups of Settlement Periods, this element should be repeated.",
                        "python_type": "unknownType",
                        "children": {
                            "settlementPeriodsNotionalQuantityStep": {
                                "type": "complexType",
                                "description": "For an electricity transaction, the Notional Quantity for a given Calculation Period during the\n                        life of the trade which applies to the range(s) of Settlement Periods referenced by\n                        settlementPeriodsReference. There must be a settlementPeriodsNotionalQuantityStep specified for\n                        each Calculation Period, regardless of whether the NotionalQuantity changes or remains the same\n                        between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantityUnit": {
                                        "type": "complexType",
                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityFrequency": {
                                        "type": "complexType",
                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "Amount of commodity per quantity frequency.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "The range(s) of Settlement Periods to which the Fixed Price steps apply.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "notionalQuantity": {
                "type": "complexType",
                "description": "The Notional Quantity.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantityFrequency": {
                        "type": "complexType",
                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementPeriodsNotionalQuantity": {
                "type": "complexType",
                "description": "For an electricity transaction, the Notional Quantity for a one or more groups of\n                                Settlement Periods to which the Notional Quantity is based. If the schedule differs for\n                                different groups of Settlement Periods, this element should be repeated.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantityFrequency": {
                        "type": "complexType",
                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "settlementPeriodsReference": {
                        "type": "complexType",
                        "description": "The range(s) of Settlement Periods to which the Notional Quantity applies.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "totalNotionalQuantity": {
                "type": "simpleType",
                "description": "The Total Notional Quantity.",
                "python_type": "unknownType",
                "children": {}
            },
            "quantityReference": {
                "type": "complexType",
                "description": "A pointer style reference to a quantity defined on another leg.",
                "python_type": "unknownType",
                "children": {}
            },
            "calculation": {
                "type": "complexType",
                "description": "Defines details relevant to the calculation of the floating price.",
                "python_type": "unknownType",
                "children": {
                    "pricingDates": {
                        "type": "complexType",
                        "description": "Commodity Pricing Dates.",
                        "python_type": "unknownType",
                        "children": {
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within\n                                the respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCalendar": {
                                "type": "complexType",
                                "description": "Identifies a commodity business day calendar from which the pricing dates will\n                                        be determined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calendarSource": {
                                "type": "simpleType",
                                "description": "Used in conjunction with an exchange-based pricing source. Identifies a date\n                                        source calendar from which the pricing dates and thus roll to the next contract\n                                        will be based off (e.g. pricing is based on the NYMEX WTI First Nearby Futures\n                                        Contract, if \u201cFuture\u201d is chosen, the pricing will roll to the next\n                                        futures contract on expiration, if \u201cListedOption\u201d is chosen, the\n                                        pricing will roll to the next futures contract on the Option expiration date\n                                        which is three business days before the expiration of the NYMEX WTI futures\n                                        contract.) Omitting this element will result in the default behavior expected\n                                        with the pricing source described within the commodity element.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "settlementPeriods": {
                                "type": "complexType",
                                "description": "Specifies a set of Settlement Periods associated with an Electricity Transaction for\n                                    delivery on an Applicable Day or for a series of Applicable Days.",
                                "python_type": "unknownType",
                                "children": {
                                    "duration": {
                                        "type": "simpleType",
                                        "description": "The length of each Settlement Period.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "applicableDay": {
                                        "type": "simpleType",
                                        "description": "Specifies the Applicable Day with respect to a range of Settlement Periods. This element can\n                        only be omitted if includesHolidays is present, in which case this range of Settlement Periods\n                        will apply to days that are holidays only.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "startTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending Start Time with respect to a range of Settlement Periods.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "endTime": {
                                        "type": "complexType",
                                        "description": "Specifies the hour-ending End Time with respect to a range of Settlement Periods. If neither\n                            startTime nor endTime contain an offset element and endTime is earlier than startTime, this\n                            indicates that the time period \"wraps around\" midnight. For example, if startTime is 23:00\n                            and endTime is 01:00 then Settlement Periods apply from 22:00 to 23:00 and 23:00 to 00:00\n                            and 00:00 to 01:00 on each included day.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "time": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "hourMinuteTime": {
                                                        "type": "simpleType",
                                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "location": {
                                                        "type": "complexType",
                                                        "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "offset": {
                                                "type": "complexType",
                                                "description": "Indicates whether time applies to the actual day specified (in which case this element should be omitted) the day prior to that day (in which case periodMultiplier should be -1 and period should be Day) or the day subsequent to that day (in which case periodMultiplier should be 1 and period should be Day).",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "periodMultiplier": {
                                                        "type": "simpleType",
                                                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "period": {
                                                        "type": "simpleType",
                                                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "dayType": {
                                                        "type": "simpleType",
                                                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "timeDuration": {
                                        "type": "simpleType",
                                        "description": "Specifies the duration of the time window during which settlement/delivery occurs.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "excludeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be excluded from this range of Settlement Periods, even if such day is an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "includeHolidays": {
                                        "type": "complexType",
                                        "description": "Indicates that days that are holidays according to the referenced commodity business\n                            calendar should be included in this range of Settlement Periods, even if such day is not an\n                            applicable day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "settlementPeriodsReference": {
                                "type": "complexType",
                                "description": "Allows a set of Settlement Periods to reference one already defined elsewhere in the\n                                    trade structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "pricingDates": {
                                "type": "complexType",
                                "description": "A list of adjustable dates on which the trade will price. Each date will price for the\n                            Calculation Period within which it falls.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "averagingMethod": {
                        "type": "simpleType",
                        "description": "The parties may specify a Method of Averaging where more than one pricing Dates is being\n                        specified as being applicable.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "conversionFactor": {
                        "type": "simpleType",
                        "description": "If the Notional Quantity is specified in units that do not match the units in which the\n                        Commodity Reference Price is quoted, the scaling or conversion factor used to convert the\n                        Commodity Reference Price units into the Notional Quantity units should be stated here. If there\n                        is no conversion, this element is not intended to be used.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "rounding": {
                        "type": "complexType",
                        "description": "Rounding direction and precision for price values.",
                        "python_type": "unknownType",
                        "children": {
                            "roundingDirection": {
                                "type": "simpleType",
                                "description": "Specifies the rounding direction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "precision": {
                                "type": "simpleType",
                                "description": "Specifies the rounding precision in terms of a number of decimal places. Note how a percentage rate rounding of 5 decimal places is expressed as a rounding precision of 7 in the FpML document since the percentage is expressed as a decimal, e.g. 9.876543% (or 0.09876543) being rounded to the nearest 5 decimal places is 9.87654% (or 0.0987654).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "spread": {
                        "type": "complexType",
                        "description": "The spread over or under the Commodity Reference Price for this leg of the trade.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "spreadConversionFactor": {
                                "type": "simpleType",
                                "description": "spreadConversionFactor should be used when the unit of measure of the Commodity\n                                Reference Price and the unit of measure in which the spread is quoted are different. The\n                                value of spreadConversionFactor is the number of units of measure in which the spread is\n                                quoted per unit of measure of the Commodity Reference Price.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "spreadUnit": {
                                "type": "complexType",
                                "description": "spreadUnit should be used when the unit of measure of the Commodity Reference Price and\n                                the unit of measure in which the spread is quoted are different. The value of spreadUnit\n                                is the unit of measure in which the spread is quoted.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "spreadSchedule": {
                        "type": "complexType",
                        "description": "The spread over or under the Commodity Reference Price for this leg of the trade for each\n                            Calculation Period.",
                        "python_type": "unknownType",
                        "children": {
                            "spreadStep": {
                                "type": "complexType",
                                "description": "The spread per Calculation Period. There must be a spread step specified for each Calculation\n                        Period, regardless of whether the spread changes or remains the same between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "spreadConversionFactor": {
                                        "type": "simpleType",
                                        "description": "spreadConversionFactor should be used when the unit of measure of the Commodity\n                                Reference Price and the unit of measure in which the spread is quoted are different. The\n                                value of spreadConversionFactor is the number of units of measure in which the spread is\n                                quoted per unit of measure of the Commodity Reference Price.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "spreadUnit": {
                                        "type": "complexType",
                                        "description": "spreadUnit should be used when the unit of measure of the Commodity Reference Price and\n                                the unit of measure in which the spread is quoted are different. The value of spreadUnit\n                                is the unit of measure in which the spread is quoted.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "spreadPercentage": {
                        "type": "simpleType",
                        "description": "The spread percentage over or under the Commodity Reference Price for this leg of the trade.\n                            A value expressed in percentage units i.e. 5 means 5%.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "fx": {
                        "type": "complexType",
                        "description": "Defines how observations of FX prices are to be used to calculate a factor with which to convert\n                        the observed Commodity Reference Price to the Settlement Currency.",
                        "python_type": "unknownType",
                        "children": {
                            "primaryRateSource": {
                                "type": "complexType",
                                "description": "The primary source for where the rate observation will occur. Will typically be either a page or\n                        a reference bank published rate.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "secondaryRateSource": {
                                "type": "complexType",
                                "description": "An alternative, or secondary, source for where the rate observation will occur. Will typically\n                        be either a page or a reference bank published rate.",
                                "python_type": "unknownType",
                                "children": {
                                    "rateSource": {
                                        "type": "complexType",
                                        "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePage": {
                                        "type": "complexType",
                                        "description": "A specific page for the rate source for obtaining a market rate.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "rateSourcePageHeading": {
                                        "type": "simpleType",
                                        "description": "The heading for the rate source on a given rate source page.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fxType": {
                                "type": "complexType",
                                "description": "A type to identify how the FX rate will be applied. This is intended to differentiate between\n                        the various methods for applying FX to the floating price such as a daily calculation, or\n                        averaging the FX and applying the average at the end of each CalculationPeriod.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "averagingMethod": {
                                "type": "simpleType",
                                "description": "The parties may specify a Method of Averaging when averaging of the FX rate is applicable.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "fixingTime": {
                                "type": "complexType",
                                "description": "The time at which the spot currency exchange rate will be observed. It is specified as a\n                                time in a specific business center, e.g. 11:00am London time.",
                                "python_type": "unknownType",
                                "children": {
                                    "hourMinuteTime": {
                                        "type": "simpleType",
                                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "fxObservationDates": {
                                "type": "complexType",
                                "description": "A list of the fx observation dates for a given Calculation Period.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedDate": {
                                        "type": "complexType",
                                        "description": "A date subject to adjustment.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "dateAdjustments": {
                                        "type": "complexType",
                                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "adjustedDate": {
                                        "type": "complexType",
                                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "The type of day on which pricing occurs.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayDistribution": {
                                "type": "complexType",
                                "description": "The method by which the pricing days are distributed across the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayCount": {
                                "type": "simpleType",
                                "description": "The number of days over which pricing should take place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayOfWeek": {
                                "type": "simpleType",
                                "description": "The day(s) of the week on which pricing will take place during the pricing period.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayNumber": {
                                "type": "simpleType",
                                "description": "The occurrence of the dayOfWeek within the pricing period on which pricing will take\n                                place, e.g. the 3rd Friday within each Calculation Period. If omitted, every dayOfWeek\n                                will be a pricing day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business\n                        day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "lag": {
                                "type": "complexType",
                                "description": "The pricing period per calculation period if the pricing days do not wholly fall within the\n                        respective calculation period.",
                                "python_type": "unknownType",
                                "children": {
                                    "lagDuration": {
                                        "type": "complexType",
                                        "description": "The period during which observations will be made. If a firstObservationDateOffset is specified,\n                        the observation period will start the specified interval prior to each Calculation Period - i.e.\n                        if the firstObservationDateOffset is 4 months and the lagDuration is 3 months, observations will\n                        be taken in months 4,3 and 2 (but not 1) prior to each Calculation Period. If no\n                        firstObservationDate is specified, the observation period will end immediately preceding each\n                        Calculation Period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "firstObservationDateOffset": {
                                        "type": "complexType",
                                        "description": "The interval between the start of each lagDuration and the start of each respective calculation\n                        period.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "lagReference": {
                                "type": "complexType",
                                "description": "Allows a lag to reference one already defined elsewhere in the trade.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "calculationPeriodsDatesReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "relativePaymentDates": {
                "type": "complexType",
                "description": "The Payment Dates of the trade relative to the Calculation Periods.",
                "python_type": "unknownType",
                "children": {
                    "payRelativeTo": {
                        "type": "simpleType",
                        "description": "Specifies whether the payment(s) occur relative to a date such as the end of each\n                            Calculation Period or the last Pricing Date in each Calculation Period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payRelativeToEvent": {
                        "type": "complexType",
                        "description": "Specifies whether the payment(s) occur relative to the date of a physical event such as\n                            issuance of a bill of lading.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "paymentDaysOffset": {
                        "type": "complexType",
                        "description": "Specifies any offset from the adjusted Calculation Period start date, adjusted Calculation\n                        Period end date or Calculation Date applicable to each Payment Date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "businessCentersReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenters": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {
                            "businessCenter": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "paymentDates": {
                "type": "complexType",
                "description": "Dates on which payments will be made.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDates": {
                        "type": "complexType",
                        "description": "A series of adjustable dates",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A series of dates specified as a repeating sequence from a base date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "masterAgreementPaymentDates": {
                "type": "simpleType",
                "description": "If present and true indicates that the Payment Date(s) are specified in the relevant master\n                        agreement.",
                "python_type": "unknownType",
                "children": {}
            },
            "flatRate": {
                "type": "simpleType",
                "description": "Whether the Flat Rate is the New Worldwide Tanker Nominal Freight Scale for the Freight Index\n                        Route taken at the Trade Date of the transaction or taken on each Pricing Date.",
                "python_type": "unknownType",
                "children": {}
            },
            "flatRateAmount": {
                "type": "complexType",
                "description": "If flatRate is set to \"Fixed\", the actual value of the Flat Rate.",
                "python_type": "unknownType",
                "children": {
                    "currency": {
                        "type": "complexType",
                        "description": "The currency in which an amount is denominated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "amount": {
                        "type": "simpleType",
                        "description": "The non negative monetary quantity in currency units.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "gasPhysicalLeg": {
        "type": "complexType",
        "description": "Physically settled natural gas leg.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "deliveryPeriods": {
                "type": "complexType",
                "description": "The different options for specifying the Delivery or Supply Periods. Unless the quantity\n                                or price is to vary periodically during the trade or physical delivery occurs on a\n                                periodic basis, periodsSchedule should be used and set to 1T.",
                "python_type": "unknownType",
                "children": {
                    "periods": {
                        "type": "complexType",
                        "description": "The Delivery Periods for this leg of the swap. This type is only intended to be used if the\n                        Delivery Periods differ from the Calculation Periods on the fixed or floating leg. If\n                        DeliveryPeriods mirror another leg, then the calculationPeriodsReference element should be used\n                        to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can\n                        be used to point to the Calculation Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "periodsSchedule": {
                        "type": "complexType",
                        "description": "The Delivery Periods for this leg of the swap. This type is only intended to be used if the\n                        Delivery Periods differ from the Calculation Periods on the fixed or floating leg. If\n                        DeliveryPeriods mirror another leg, then the calculationPeriodsReference element should be used\n                        to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can\n                        be used to point to the Calculation Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "balanceOfFirstPeriod": {
                                "type": "simpleType",
                                "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "supplyStartTime": {
                        "type": "complexType",
                        "description": "The time at which gas delivery should start on each day of the Delivery Period(s).",
                        "python_type": "unknownType",
                        "children": {
                            "hourMinuteTime": {
                                "type": "simpleType",
                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "location": {
                                "type": "complexType",
                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "supplyEndTime": {
                        "type": "complexType",
                        "description": "The time at which gas delivery should end on each day of the Delivery Period(s).",
                        "python_type": "unknownType",
                        "children": {
                            "hourMinuteTime": {
                                "type": "simpleType",
                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "location": {
                                "type": "complexType",
                                "description": "The geographic location to which the hourMinuteTime applies. The time takes into account any current day light saving changes or other adjustments i.e. it is the prevaling time at the location.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "gas": {
                "type": "complexType",
                "description": "The specification of the gas to be delivered.",
                "python_type": "unknownType",
                "children": {
                    "type": {
                        "type": "simpleType",
                        "description": "The type of gas to be delivered.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calorificValue": {
                        "type": "simpleType",
                        "description": "The calorific value of the gas to be delivered, specified in megajoules per cubic meter\n                            (MJ/m3).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quality": {
                        "type": "complexType",
                        "description": "The quality of the gas to be delivered.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryConditions": {
                "type": "complexType",
                "description": "The physical delivery conditions for the transaction.",
                "python_type": "unknownType",
                "children": {
                    "deliveryPoint": {
                        "type": "complexType",
                        "description": "The physical or virtual point at which the commodity will be delivered.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "entryPoint": {
                        "type": "complexType",
                        "description": "The physical or virtual point at which the commodity enters a transportation system.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "withdrawalPoint": {
                        "type": "complexType",
                        "description": "The physical or virtual point at which the commodity is withdrawn from a transportation\n                            system.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryType": {
                        "type": "simpleType",
                        "description": "Indicates whether the buyer and seller are contractually obliged to consume and supply the\n                        specified quantities of the commodity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "interconnectionPoint": {
                        "type": "complexType",
                        "description": "Identification of the border(s) or border point(s) of a transportation contract.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "buyerHub": {
                        "type": "complexType",
                        "description": "The hub code of the gas buyer.",
                        "python_type": "unknownType",
                        "children": {
                            "partyReference": {
                                "type": "complexType",
                                "description": "Reference to a party.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "accountReference": {
                                "type": "complexType",
                                "description": "Reference to an account.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "hubCode": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "sellerHub": {
                        "type": "complexType",
                        "description": "The hub code of the has seller.",
                        "python_type": "unknownType",
                        "children": {
                            "partyReference": {
                                "type": "complexType",
                                "description": "Reference to a party.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "accountReference": {
                                "type": "complexType",
                                "description": "Reference to an account.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "hubCode": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "deliveryQuantity": {
                "type": "complexType",
                "description": "The different options for specifying the quantity. For Fixed trades where the quantity\n                                is known at the time of confirmation, a single quantity or a quantity per Delivery\n                                Period may be specified. For Variable trades minimum and maximum trades may be\n                                specified.",
                "python_type": "unknownType",
                "children": {
                    "physicalQuantity": {
                        "type": "complexType",
                        "description": "The Quantity per Delivery Period.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "physicalQuantitySchedule": {
                        "type": "complexType",
                        "description": "Allows the documentation of a shaped quantity trade where the quantity changes over the life\n                            of the transaction.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityStep": {
                                "type": "complexType",
                                "description": "The quantity per Calculation Period. There must be a quantity specified for each Calculation\n                        Period, regardless of whether the quantity changes or remains the same between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantityUnit": {
                                        "type": "complexType",
                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityFrequency": {
                                        "type": "complexType",
                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "Amount of commodity per quantity frequency.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Delivery Periods defined elsewhere.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined elsewhere.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "totalPhysicalQuantity": {
                        "type": "complexType",
                        "description": "The Total Quantity of the commodity to be delivered.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "minPhysicalQuantity": {
                        "type": "complexType",
                        "description": "The minimum quantity to be delivered. If separate minimums need to be specified for\n                                    different periods (e.g. a minimum per day and a minimum per month) this element\n                                    should be repeated.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "maxPhysicalQuantity": {
                        "type": "complexType",
                        "description": "The maximum quantity to be delivered. If separate minimums need to be specified for\n                                    different periods (e.g. a minimum per day and a minimum per month) this element\n                                    should be repeated.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "electingParty": {
                        "type": "complexType",
                        "description": "Indicates the party able to choose whether the gas is delivered for a particular\n                                    period e.g. a swing or interruptible contract.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "metalPhysicalLeg": {
        "type": "complexType",
        "description": "Physically settled metal products leg.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "metal": {
                "type": "complexType",
                "description": "The specification of the Metal Product to be delivered.",
                "python_type": "unknownType",
                "children": {
                    "material": {
                        "type": "complexType",
                        "description": "The types of metal product for a physically settled metal trade.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "shape": {
                        "type": "complexType",
                        "description": "The physical shape(s) which can be delivered in Seller's option.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "brand": {
                        "type": "complexType",
                        "description": "The brand(s) of material which can be delivered in Seller's option.",
                        "python_type": "unknownType",
                        "children": {
                            "name": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "brandManager": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "country": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "producer": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "grade": {
                        "type": "complexType",
                        "description": "The grade(s) of material which can be delivered in seller's option.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryPeriods": {
                "type": "complexType",
                "description": "The period during which delivery/deliveries of Metal may be scheduled.",
                "python_type": "unknownType",
                "children": {
                    "periods": {
                        "type": "complexType",
                        "description": "The Delivery Periods for this leg of the swap. This type is only intended to be used if the\n                        Delivery Periods differ from the Calculation Periods on the fixed or floating leg. If\n                        DeliveryPeriods mirror another leg, then the calculationPeriodsReference element should be used\n                        to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can\n                        be used to point to the Calculation Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "periodsSchedule": {
                        "type": "complexType",
                        "description": "The Delivery Periods for this leg of the swap. This type is only intended to be used if the\n                        Delivery Periods differ from the Calculation Periods on the fixed or floating leg. If\n                        DeliveryPeriods mirror another leg, then the calculationPeriodsReference element should be used\n                        to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can\n                        be used to point to the Calculation Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "balanceOfFirstPeriod": {
                                "type": "simpleType",
                                "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryConditions": {
                "type": "complexType",
                "description": "The physical delivery arrangements and requirements for a physically settled\n                                non-precious metal transaction.",
                "python_type": "unknownType",
                "children": {
                    "deliveryLocation": {
                        "type": "complexType",
                        "description": "The Delivery Point for a physically settled non-precious metal transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "risk": {
                        "type": "complexType",
                        "description": "\"Risk of loss\" may also be used, equivalently, on confirmation documents.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "totalQuantityTolerance": {
                        "type": "simpleType",
                        "description": "The +/- percent tolerance in seller's option which applies to the total quantity delivered over\n                        all shipment periods.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "periodQuantityTolerance": {
                        "type": "simpleType",
                        "description": "The +/- percentage quantity tolerance in seller's option which applied to each shipment period.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "title": {
                        "type": "simpleType",
                        "description": "Describes how and when title to the commodity transfers.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "physicalQuantity": {
                "type": "complexType",
                "description": "The Quantity per Delivery Period.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantityFrequency": {
                        "type": "complexType",
                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "physicalQuantitySchedule": {
                "type": "complexType",
                "description": "Allows the documentation of a shaped quantity trade where the quantity changes over the life\n                            of the transaction.",
                "python_type": "unknownType",
                "children": {
                    "quantityStep": {
                        "type": "complexType",
                        "description": "The quantity per Calculation Period. There must be a quantity specified for each Calculation\n                        Period, regardless of whether the quantity changes or remains the same between periods.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "deliveryPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Delivery Periods defined elsewhere.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined elsewhere.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "totalPhysicalQuantity": {
                "type": "complexType",
                "description": "The Total Quantity of the commodity to be delivered.",
                "python_type": "unknownType",
                "children": {
                    "quantityUnit": {
                        "type": "complexType",
                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quantity": {
                        "type": "simpleType",
                        "description": "Amount of commodity per quantity frequency.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "conversionFactor": {
                "type": "simpleType",
                "description": "If the Notional Quantity is specified in a unit that does not match the unit in which\n                                the Commodity Reference Price is quoted, the scaling or conversion factor used to\n                                convert the Commodity Reference Price unit into the Notional Quantity unit should be\n                                stated here. If there is no conversion, this element is not intended to be used.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "oilPhysicalLeg": {
        "type": "complexType",
        "description": "Physically settled oil or refined products leg.",
        "python_type": "unknownType",
        "children": {
            "payerPartyReference": {
                "type": "complexType",
                "description": "A reference to the party responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "payerAccountReference": {
                "type": "complexType",
                "description": "A reference to the account responsible for making the payments defined by this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverPartyReference": {
                "type": "complexType",
                "description": "A reference to the party that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "receiverAccountReference": {
                "type": "complexType",
                "description": "A reference to the account that receives the payments corresponding to this structure.",
                "python_type": "unknownType",
                "children": {}
            },
            "deliveryPeriods": {
                "type": "complexType",
                "description": "The different options for specifying the Delivery or Supply Periods. Unless the quantity\n                                or price is to vary periodically during the trade or physical delivery occurs on a\n                                periodic basis, periodsSchedule should be used and set to 1T.",
                "python_type": "unknownType",
                "children": {
                    "periods": {
                        "type": "complexType",
                        "description": "The Delivery Periods for this leg of the swap. This type is only intended to be used if the\n                        Delivery Periods differ from the Calculation Periods on the fixed or floating leg. If\n                        DeliveryPeriods mirror another leg, then the calculationPeriodsReference element should be used\n                        to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can\n                        be used to point to the Calculation Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "periodsSchedule": {
                        "type": "complexType",
                        "description": "The Delivery Periods for this leg of the swap. This type is only intended to be used if the\n                        Delivery Periods differ from the Calculation Periods on the fixed or floating leg. If\n                        DeliveryPeriods mirror another leg, then the calculationPeriodsReference element should be used\n                        to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can\n                        be used to point to the Calculation Periods Schedule for that leg.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "balanceOfFirstPeriod": {
                                "type": "simpleType",
                                "description": "If true, indicates that that the first Calculation Period should run from the Effective\n                                Date to the end of the calendar period in which the Effective Date falls, e.g. Jan 15 -\n                                Jan 31 if the calculation periods are one month long and Effective Date is Jan 15. If\n                                false, the first Calculation Period should run from the Effective Date for one whole\n                                period, e.g. Jan 15 to Feb 14 if the calculation periods are one month long and\n                                Effective Date is Jan 15.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "calculationPeriodsReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsScheduleReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "calculationPeriodsDatesReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "oil": {
                "type": "complexType",
                "description": "The specification of the oil product to be delivered.",
                "python_type": "unknownType",
                "children": {
                    "type": {
                        "type": "complexType",
                        "description": "The type of oil product to be delivered.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "grade": {
                        "type": "complexType",
                        "description": "The grade of oil product to be delivered.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryConditions": {
                "type": "complexType",
                "description": "The physical delivery conditions for the transaction.",
                "python_type": "unknownType",
                "children": {
                    "pipeline": {
                        "type": "complexType",
                        "description": "Specified the delivery conditions where the oil product is to be delivered by pipeline.",
                        "python_type": "unknownType",
                        "children": {
                            "pipelineName": {
                                "type": "complexType",
                                "description": "The name of pipeline by which the oil product will be delivered.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "withdrawalPoint": {
                                "type": "complexType",
                                "description": "The location at which the transfer of the title to the commodity takes place.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "entryPoint": {
                                "type": "complexType",
                                "description": "The point at which the oil product will enter the pipeline.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliverableByBarge": {
                                "type": "simpleType",
                                "description": "Whether or not the delivery can go to barge. For trades documented under the ISDA Master\n                        Agreement and Oil Annex, this should always be set to 'false'.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "risk": {
                                "type": "complexType",
                                "description": "Specifies how the risk associated with the delivery is assigned. For trades documented under the\n                        ISDA Master Agreement and Oil Annex, this presence of this element indicates that the provisions\n                        of clause (b)(i) of the ISDA Oil Annex are being varied.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "cycle": {
                                "type": "complexType",
                                "description": "The cycle(s) during which the oil product will be transported in the pipeline.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "transfer": {
                        "type": "complexType",
                        "description": "Specified the delivery conditions where the oil product is to be delivered by title\n                            transfer.",
                        "python_type": "unknownType",
                        "children": {
                            "applicable": {
                                "type": "simpleType",
                                "description": "Indicates that the oil product will be delivered by title transfer. Should always be set to\n                        \"true\".",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryLocation": {
                                "type": "complexType",
                                "description": "The location at which the transfer of the title to the commodity takes place.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "importerOfRecord": {
                        "type": "complexType",
                        "description": "Specifies which party is the Importer of Record for the purposes of paying customs duties and\n                        applicable taxes or costs related to the import of the oil product.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "absoluteTolerance": {
                        "type": "complexType",
                        "description": "Specifies the allowable quantity tolerance as an absolute quantity.",
                        "python_type": "unknownType",
                        "children": {
                            "positive": {
                                "type": "simpleType",
                                "description": "The maxmium amount by which the quantity delivered can exceed the agreed quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "negative": {
                                "type": "simpleType",
                                "description": "The maximum amount by which the quantity delivered can be less than the agreed quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "unit": {
                                "type": "complexType",
                                "description": "The unit in which the tolerance is specified.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "optionOwnerPartyReference": {
                                "type": "complexType",
                                "description": "Indicates whether the tolerance is at the seller's or buyer's option.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "percentageTolerance": {
                        "type": "complexType",
                        "description": "Specifies the allowable quantity tolerance as a percentage of the quantity.",
                        "python_type": "unknownType",
                        "children": {
                            "postitive": {
                                "type": "simpleType",
                                "description": "The maximum percentage amount by which the quantity delivered can exceed the agreed quantity. A\n                        value expressed in percentage units i.e. 5 means 5%.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "negative": {
                                "type": "simpleType",
                                "description": "The maximum percentage amount by which the quantity delivered can be less than the agreed\n                        quantity. A value expressed in percentage units i.e. 5 means 5%.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "option": {
                                "type": "complexType",
                                "description": "Indicates whether the tolerance it at the seller's or buyer's option.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "deliveryQuantity": {
                "type": "complexType",
                "description": "The different options for specifying the quantity.",
                "python_type": "unknownType",
                "children": {
                    "physicalQuantity": {
                        "type": "complexType",
                        "description": "The Quantity per Delivery Period.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantityFrequency": {
                                "type": "complexType",
                                "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "physicalQuantitySchedule": {
                        "type": "complexType",
                        "description": "Allows the documentation of a shaped quantity trade where the quantity changes over the life\n                            of the transaction.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityStep": {
                                "type": "complexType",
                                "description": "The quantity per Calculation Period. There must be a quantity specified for each Calculation\n                        Period, regardless of whether the quantity changes or remains the same between periods.",
                                "python_type": "unknownType",
                                "children": {
                                    "quantityUnit": {
                                        "type": "complexType",
                                        "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantityFrequency": {
                                        "type": "complexType",
                                        "description": "The frequency at which the Notional Quantity is deemed to apply for purposes of calculating the\n                        Total Notional Quantity.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quantity": {
                                        "type": "simpleType",
                                        "description": "Amount of commodity per quantity frequency.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "deliveryPeriodsReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Delivery Periods defined elsewhere.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "deliveryPeriodsScheduleReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to the Calculation Periods Schedule defined elsewhere.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "totalPhysicalQuantity": {
                        "type": "complexType",
                        "description": "The Total Quantity of the commodity to be delivered.",
                        "python_type": "unknownType",
                        "children": {
                            "quantityUnit": {
                                "type": "complexType",
                                "description": "Quantity Unit is the unit of measure applicable for the quantity on the Transaction.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quantity": {
                                "type": "simpleType",
                                "description": "Amount of commodity per quantity frequency.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "basket": {
        "type": "complexType",
        "description": "Defines the underlying asset when it is a basket.",
        "python_type": "unknownType",
        "children": {
            "openUnits": {
                "type": "simpleType",
                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                "python_type": "unknownType",
                "children": {}
            },
            "basketConstituent": {
                "type": "complexType",
                "description": "Describes each of the components of the basket.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "underlyingAsset": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "constituentWeight": {
                        "type": "complexType",
                        "description": "Specifies the weight of each of the underlyer constituent within the basket, either in absolute or relative terms. This is an optional component, as certain swaps do not specify a specific weight for each of their basket constituents.",
                        "python_type": "unknownType",
                        "children": {
                            "openUnits": {
                                "type": "simpleType",
                                "description": "The number of units (index or securities) that constitute the underlyer of the swap. In the case of a basket swap, this element is used to reference both the number of basket units, and the number of each asset components of the basket when these are expressed in absolute terms.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "basketPercentage": {
                                "type": "simpleType",
                                "description": "The relative weight of each respective basket constituent, expressed in percentage. A basket percentage of 5% would be represented as 0.05.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "basketAmount": {
                                "type": "complexType",
                                "description": "DEPRECATED. The relative weight of each respective basket constituent, expressed as a monetary amount.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "dividendPayout": {
                        "type": "complexType",
                        "description": "Specifies the dividend payout ratio associated with an equity underlyer. A basket swap can have different payout ratios across the various underlying constituents. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified. Users should note that FpML makes a distinction between the derivative contract and the underlyer of the contract. It would be better if the agreed dividend payout on a derivative contract was modelled at the level of the derivative contract, an approach which may be adopted in the next major version of FpML.",
                        "python_type": "unknownType",
                        "children": {
                            "dividendPayoutRatio": {
                                "type": "simpleType",
                                "description": "Specifies the total actual dividend payout ratio associated with the equity underlyer.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dividendPayoutRatioCash": {
                                "type": "simpleType",
                                "description": "Specifies the cash actual dividend payout ratio associated with the equity underlyer.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dividendPayoutRatioNonCash": {
                                "type": "simpleType",
                                "description": "Specifies the non cash actual dividend payout ratio associated with the equity underlyer.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dividendPayoutConditions": {
                                "type": "simpleType",
                                "description": "Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dividendPayment": {
                                "type": "complexType",
                                "description": "The next upcoming dividend payment or payments.",
                                "python_type": "unknownType",
                                "children": {
                                    "paymentDate": {
                                        "type": "simpleType",
                                        "description": "The date that the dividend or coupon is due.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "complexType",
                                        "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which an amount is denominated.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "simpleType",
                                                "description": "The monetary quantity in currency units.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "accruedInterest": {
                                        "type": "complexType",
                                        "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "currency": {
                                                "type": "complexType",
                                                "description": "The currency in which an amount is denominated.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "amount": {
                                                "type": "simpleType",
                                                "description": "The monetary quantity in currency units.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "underlyerPrice": {
                        "type": "complexType",
                        "description": "Specifies the price that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the price that characterizes the equity swap is associated to the leg of the trade.",
                        "python_type": "unknownType",
                        "children": {
                            "commission": {
                                "type": "complexType",
                                "description": "This optional component specifies the commission to be charged for executing the hedge transactions.",
                                "python_type": "unknownType",
                                "children": {
                                    "commissionDenomination": {
                                        "type": "simpleType",
                                        "description": "The type of units used to express a commission.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commissionAmount": {
                                        "type": "simpleType",
                                        "description": "The commission amount, expressed in the way indicated by the commissionType element.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "commissionPerTrade": {
                                        "type": "simpleType",
                                        "description": "The total commission per trade.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "fxRate": {
                                        "type": "complexType",
                                        "description": "FX Rates that have been used to convert commissions to a single currency.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quotedCurrencyPair": {
                                                "type": "complexType",
                                                "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency1": {
                                                        "type": "complexType",
                                                        "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "currency2": {
                                                        "type": "complexType",
                                                        "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quoteBasis": {
                                                        "type": "simpleType",
                                                        "description": "The method by which the exchange rate is quoted.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "rate": {
                                                "type": "simpleType",
                                                "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "determinationMethod": {
                                "type": "complexType",
                                "description": "Specifies the method according to which an amount or a date is determined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "grossPrice": {
                                "type": "complexType",
                                "description": "Specifies the price of the underlyer, before commissions.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "priceExpression": {
                                        "type": "simpleType",
                                        "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "netPrice": {
                                "type": "complexType",
                                "description": "Specifies the price of the underlyer, net of commissions.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "priceExpression": {
                                        "type": "simpleType",
                                        "description": "Specifies whether the price is expressed in absolute or relative terms.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "accruedInterestPrice": {
                                "type": "simpleType",
                                "description": "Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "fxConversion": {
                                "type": "complexType",
                                "description": "Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.",
                                "python_type": "unknownType",
                                "children": {
                                    "amountRelativeTo": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "fxRate": {
                                        "type": "complexType",
                                        "description": "Specifies a currency conversion rate.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "quotedCurrencyPair": {
                                                "type": "complexType",
                                                "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency1": {
                                                        "type": "complexType",
                                                        "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "currency2": {
                                                        "type": "complexType",
                                                        "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "quoteBasis": {
                                                        "type": "simpleType",
                                                        "description": "The method by which the exchange rate is quoted.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "rate": {
                                                "type": "simpleType",
                                                "description": "The rate of exchange between the two currencies of the leg of a deal. Must be specified with a quote basis.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "amountRelativeTo": {
                                "type": "complexType",
                                "description": "The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "cleanNetPrice": {
                                "type": "simpleType",
                                "description": "The net price excluding accrued interest. The \"Dirty Price\" for bonds is put in the \"netPrice\" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quotationCharacteristics": {
                                "type": "complexType",
                                "description": "Allows information about how the price was quoted to be provided.",
                                "python_type": "unknownType",
                                "children": {
                                    "measureType": {
                                        "type": "complexType",
                                        "description": "The type of the value that is measured. This could be an NPV, a cash flow, a clean price, etc.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "quoteUnits": {
                                        "type": "complexType",
                                        "description": "The optional units that the measure is expressed in. If not supplied, this is assumed to be a price/value in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "side": {
                                        "type": "simpleType",
                                        "description": "The side (bid/mid/ask) of the measure.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "currencyType": {
                                        "type": "complexType",
                                        "description": "The optional currency that the measure is expressed in. If not supplied, this is defaulted from the reportingCurrency in the valuationScenarioDefinition.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "timing": {
                                        "type": "complexType",
                                        "description": "When during a day the quote is for. Typically, if this element is supplied, the QuoteLocation needs also to be supplied.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "A city or other business center.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "exchangeId": {
                                        "type": "complexType",
                                        "description": "The exchange (e.g. stock or futures exchange) from which the quote is obtained.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "informationSource": {
                                        "type": "complexType",
                                        "description": "The information source where a published or displayed market rate will be obtained, e.g. Telerate Page 3750.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "rateSource": {
                                                "type": "complexType",
                                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePage": {
                                                "type": "complexType",
                                                "description": "A specific page for the rate source for obtaining a market rate.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "rateSourcePageHeading": {
                                                "type": "simpleType",
                                                "description": "The heading for the rate source on a given rate source page.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "pricingModel": {
                                        "type": "complexType",
                                        "description": ".",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "time": {
                                        "type": "simpleType",
                                        "description": "When the quote was observed or when a calculated value was generated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "valuationDate": {
                                        "type": "simpleType",
                                        "description": "When the quote was computed.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "expiryTime": {
                                        "type": "simpleType",
                                        "description": "When does the quote cease to be valid.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "cashflowType": {
                                        "type": "complexType",
                                        "description": "For cash flows, the type of the cash flows. Examples include: Coupon payment, Premium Fee, Settlement Fee, Brokerage Fee, etc.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "underlyerNotional": {
                        "type": "complexType",
                        "description": "Specifies the notional (i.e. price * quantity) that is associated with each of the basket constituents. This component is optional, as it is not absolutely required to accurately describe the economics of the trade, considering the notional that characterizes the equity swap is associated to the leg of the trade.",
                        "python_type": "unknownType",
                        "children": {
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "simpleType",
                                "description": "The monetary quantity in currency units.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "underlyerSpread": {
                        "type": "complexType",
                        "description": "Provides a link to the spread schedule used for this underlyer.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "couponPayment": {
                        "type": "complexType",
                        "description": "The next upcoming coupon payment.",
                        "python_type": "unknownType",
                        "children": {
                            "paymentDate": {
                                "type": "simpleType",
                                "description": "The date that the dividend or coupon is due.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "amount": {
                                "type": "complexType",
                                "description": "The amount of the dividend or coupon payment. Value of dividends or coupon between ex and pay date. Stock: if we are between ex-date and pay-date and the dividend is payable under the swap, then this should be the ex-div amount * # of securities. Bond: regardless of where we are vis-a-vis resets: (coupon % * face of bonds on swap * (bond day count fraction using days last coupon pay date of the bond through today).",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "accruedInterest": {
                                "type": "complexType",
                                "description": "Accrued interest on the dividend or coupon payment. When the TRS is structured to pay a dividend or coupon on reset after payable date, you may earn interest on these amounts. This field indicates the interest accrued on dividend/coupon from pay date to statement date. This will only apply to a handful of agreements where dividendss are held to the next reset AND you receive/pay interest on unpaid amounts.",
                                "python_type": "unknownType",
                                "children": {
                                    "currency": {
                                        "type": "complexType",
                                        "description": "The currency in which an amount is denominated.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "amount": {
                                        "type": "simpleType",
                                        "description": "The monetary quantity in currency units.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "underlyerFinancing": {
                        "type": "complexType",
                        "description": "Financing terms associated with this underlyer",
                        "python_type": "unknownType",
                        "children": {
                            "legIdentifier": {
                                "type": "complexType",
                                "description": "Version aware identification of this leg.",
                                "python_type": "unknownType",
                                "children": {
                                    "legId": {
                                        "type": "complexType",
                                        "description": "Identity of this leg.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "version": {
                                        "type": "simpleType",
                                        "description": "The version number",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "effectiveDate": {
                                        "type": "complexType",
                                        "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "payerPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the party responsible for making the payments defined by this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "payerAccountReference": {
                                "type": "complexType",
                                "description": "A reference to the account responsible for making the payments defined by this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "receiverPartyReference": {
                                "type": "complexType",
                                "description": "A reference to the party that receives the payments corresponding to this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "receiverAccountReference": {
                                "type": "complexType",
                                "description": "A reference to the account that receives the payments corresponding to this structure.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "effectiveDate": {
                                "type": "complexType",
                                "description": "Specifies the effective date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the effective date of the other leg of the swap.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDate": {
                                        "type": "complexType",
                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDate": {
                                        "type": "complexType",
                                        "description": "A date specified as an offset to another date (the anchor date).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "terminationDate": {
                                "type": "complexType",
                                "description": "Specifies the termination date of this leg of the swap. When defined in relation to a date specified somewhere else in the document (through the relativeDate component), this element will typically point to the termination date of the other leg of the swap.",
                                "python_type": "unknownType",
                                "children": {
                                    "adjustableDate": {
                                        "type": "complexType",
                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "unadjustedDate": {
                                                "type": "complexType",
                                                "description": "A date subject to adjustment.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dateAdjustments": {
                                                "type": "complexType",
                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessDayConvention": {
                                                        "type": "simpleType",
                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCentersReference": {
                                                        "type": "complexType",
                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "businessCenters": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "businessCenter": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "relativeDate": {
                                        "type": "complexType",
                                        "description": "A date specified as an offset to another date (the anchor date).",
                                        "python_type": "unknownType",
                                        "children": {
                                            "periodMultiplier": {
                                                "type": "simpleType",
                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "period": {
                                                "type": "simpleType",
                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "dayType": {
                                                "type": "simpleType",
                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessDayConvention": {
                                                "type": "simpleType",
                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCentersReference": {
                                                "type": "complexType",
                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "businessCenters": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "businessCenter": {
                                                        "type": "complexType",
                                                        "description": "",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "dateRelativeTo": {
                                                "type": "complexType",
                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "adjustedDate": {
                                                "type": "complexType",
                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "fixedRate": {
                                "type": "simpleType",
                                "description": "The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "spreadSchedule": {
                                "type": "complexType",
                                "description": "The ISDA Spread or a Spread schedule expressed as explicit spreads and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments. The spread is a per annum rate, expressed as a decimal. For purposes of determining a calculation period amount, if positive the spread will be added to the floating rate and if negative the spread will be subtracted from the floating rate. A positive 10 basis point (0.1%) spread would be represented as 0.001.",
                                "python_type": "unknownType",
                                "children": {
                                    "initialValue": {
                                        "type": "simpleType",
                                        "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "step": {
                                        "type": "complexType",
                                        "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "stepDate": {
                                                "type": "simpleType",
                                                "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            },
                                            "stepValue": {
                                                "type": "simpleType",
                                                "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    },
                                    "type": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "underlyerLoanRate": {
                        "type": "complexType",
                        "description": "Loan rate terms associated with this underlyer. Commonly used for stock loan. You must not duplicate data elements already contained within dividend conditions at transaction level",
                        "python_type": "unknownType",
                        "children": {
                            "lossOfStockBorrow": {
                                "type": "simpleType",
                                "description": "If true, then loss of stock borrow is applicable.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "maximumStockLoanRate": {
                                "type": "simpleType",
                                "description": "Specifies the maximum stock loan rate for Loss of Stock Borrow.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "increasedCostOfStockBorrow": {
                                "type": "simpleType",
                                "description": "If true, then increased cost of stock borrow is applicable.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "initialStockLoanRate": {
                                "type": "simpleType",
                                "description": "Specifies the initial stock loan rate for Increased Cost of Stock Borrow.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "underlyerCollateral": {
                        "type": "complexType",
                        "description": "Collateral associated with this underlyer. Note that this is not typical usage, collateral is more often at transaction level",
                        "python_type": "unknownType",
                        "children": {
                            "independentAmount": {
                                "type": "complexType",
                                "description": "Independent Amount is an amount that usually less creditworthy counterparties are asked to provide. It can either be a fixed amount or a percentage of the Transaction's value. The Independent Amount can be: (i) transferred before any trading between the parties occurs (as a deposit at a third party's account or with the counterparty) or (ii) callable after trading has occurred (typically because a downgrade has occurred). In situation (i), the Independent Amount is not included in the calculation of Exposure, but in situation (ii), it is included in the calculation of Exposure. Thus, for situation (ii), the Independent Amount may be transferred along with any collateral call. Independent Amount is a defined term in the ISDA Credit Support Annex. (\"with respect to a party, the amount specified as such for that party in Paragraph 13; if no amount is specified, zero\").",
                                "python_type": "unknownType",
                                "children": {
                                    "payerPartyReference": {
                                        "type": "complexType",
                                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "payerAccountReference": {
                                        "type": "complexType",
                                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "receiverPartyReference": {
                                        "type": "complexType",
                                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "receiverAccountReference": {
                                        "type": "complexType",
                                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "paymentDetail": {
                                        "type": "complexType",
                                        "description": "A container element allowing a schedule of payments associated with the Independent Amount.",
                                        "python_type": "unknownType",
                                        "children": {
                                            "paymentDate": {
                                                "type": "complexType",
                                                "description": "Payment date.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "adjustableDate": {
                                                        "type": "complexType",
                                                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "unadjustedDate": {
                                                                "type": "complexType",
                                                                "description": "A date subject to adjustment.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dateAdjustments": {
                                                                "type": "complexType",
                                                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessDayConvention": {
                                                                        "type": "simpleType",
                                                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCentersReference": {
                                                                        "type": "complexType",
                                                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    },
                                                                    "businessCenters": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {
                                                                            "businessCenter": {
                                                                                "type": "complexType",
                                                                                "description": "",
                                                                                "python_type": "unknownType",
                                                                                "children": {}
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "adjustedDate": {
                                                                "type": "complexType",
                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    },
                                                    "relativeDate": {
                                                        "type": "complexType",
                                                        "description": "A date specified as an offset to another date (the anchor date).",
                                                        "python_type": "unknownType",
                                                        "children": {
                                                            "periodMultiplier": {
                                                                "type": "simpleType",
                                                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "period": {
                                                                "type": "simpleType",
                                                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "dayType": {
                                                                "type": "simpleType",
                                                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessDayConvention": {
                                                                "type": "simpleType",
                                                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCentersReference": {
                                                                "type": "complexType",
                                                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "businessCenters": {
                                                                "type": "complexType",
                                                                "description": "",
                                                                "python_type": "unknownType",
                                                                "children": {
                                                                    "businessCenter": {
                                                                        "type": "complexType",
                                                                        "description": "",
                                                                        "python_type": "unknownType",
                                                                        "children": {}
                                                                    }
                                                                }
                                                            },
                                                            "dateRelativeTo": {
                                                                "type": "complexType",
                                                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            },
                                                            "adjustedDate": {
                                                                "type": "complexType",
                                                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                                                "python_type": "unknownType",
                                                                "children": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "paymentAmount": {
                                                "type": "complexType",
                                                "description": "A fixed payment amount.",
                                                "python_type": "unknownType",
                                                "children": {
                                                    "currency": {
                                                        "type": "complexType",
                                                        "description": "The currency in which an amount is denominated.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    },
                                                    "amount": {
                                                        "type": "simpleType",
                                                        "description": "The monetary quantity in currency units.",
                                                        "python_type": "unknownType",
                                                        "children": {}
                                                    }
                                                }
                                            },
                                            "paymentRule": {
                                                "type": "complexType",
                                                "description": "A structure defining the calculation rule of the independent amount. Users are supposed to use type substitution at PaymentRule. PaymentRule is abstract and it is supposed to be substituted by PercentageRule. There is the expectation that other rules will be created in the future to model other types of independent amount payment rules.",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "basketDivisor": {
                "type": "simpleType",
                "description": "Specifies the basket divisor amount. This value is normally used to adjust the constituent weight for pricing or to adjust for dividends, or other corporate actions.",
                "python_type": "unknownType",
                "children": {}
            },
            "basketVersion": {
                "type": "simpleType",
                "description": "Basket version, used to record changes in basket composition or weights",
                "python_type": "unknownType",
                "children": {}
            },
            "basketName": {
                "type": "complexType",
                "description": "The name of the basket expressed as a free format string. FpML does not define usage rules for this element.",
                "python_type": "unknownType",
                "children": {}
            },
            "basketId": {
                "type": "complexType",
                "description": "A CDS basket identifier",
                "python_type": "unknownType",
                "children": {}
            },
            "basketCurrency": {
                "type": "complexType",
                "description": "Specifies the currency for this basket.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "bond": {
        "type": "complexType",
        "description": "Identifies the underlying asset when it is a series or a class of bonds.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "issuerName": {
                "type": "simpleType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "issuerPartyReference": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "seniority": {
                "type": "complexType",
                "description": "The repayment precedence of a debt instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "creditQuality": {
                "type": "complexType",
                "description": "Credit quality type (e.g. 'INVG' - Investment grade; 'NIVG' - Non-investment grade; 'NOTR' - Non-rated). Classifies the risk of the security. Note: 'NOAP' - Not applicable value is indicated by the absence of the 'creditQuality' element.",
                "python_type": "unknownType",
                "children": {}
            },
            "creditRating": {
                "type": "complexType",
                "description": "The credit rating.",
                "python_type": "unknownType",
                "children": {}
            },
            "couponType": {
                "type": "complexType",
                "description": "Specifies if the bond has a variable coupon, step-up/down coupon or a zero-coupon.",
                "python_type": "unknownType",
                "children": {}
            },
            "couponRate": {
                "type": "simpleType",
                "description": "Specifies the coupon rate (expressed in percentage) of a fixed income security or convertible bond.",
                "python_type": "unknownType",
                "children": {}
            },
            "maturity": {
                "type": "simpleType",
                "description": "The date when the principal amount of a security becomes due and payable.",
                "python_type": "unknownType",
                "children": {}
            },
            "parValue": {
                "type": "simpleType",
                "description": "Specifies the nominal amount of a fixed income security or convertible bond.",
                "python_type": "unknownType",
                "children": {}
            },
            "faceAmount": {
                "type": "simpleType",
                "description": "Specifies the total amount of the issue. Corresponds to the par value multiplied by the number of issued security.",
                "python_type": "unknownType",
                "children": {}
            },
            "paymentFrequency": {
                "type": "complexType",
                "description": "Specifies the frequency at which the bond pays, e.g. 6M.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "dayCountFraction": {
                "type": "complexType",
                "description": "The day count basis for the bond.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "cash": {
        "type": "complexType",
        "description": "Identifies a simple underlying asset type that is a cash payment. Used for specifying discounting factors for future cash flows in the pricing and risk model.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "The currency in which an amount is denominated.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "commodity": {
        "type": "complexType",
        "description": "Identifies the underlying asset when it is a listed commodity.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "commodityBase": {
                "type": "complexType",
                "description": "A coding scheme value to identify the base type of the commodity being traded. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Oil'.",
                "python_type": "unknownType",
                "children": {}
            },
            "commodityDetails": {
                "type": "complexType",
                "description": "A coding scheme value to identify the commodity being traded more specifically. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions. For example, 'Brent'.",
                "python_type": "unknownType",
                "children": {}
            },
            "unit": {
                "type": "complexType",
                "description": "A coding scheme value to identify the unit of measure (e.g. Therms) in which the undelryer is denominated. Where possible, this should follow the naming convention used in the 2005 ISDA Commodity Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "The currency in which the Commodity Reference Price is published (e.g. GBP).",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "For those commodities being traded with reference to the price of a listed instrument, the exchange where that instrument is listed should be specified in the 'exchange' element.",
                "python_type": "unknownType",
                "children": {}
            },
            "publication": {
                "type": "complexType",
                "description": "For those commodities being traded with reference to a price distributed by a publication, that publication should be specified in the 'publication' element.",
                "python_type": "unknownType",
                "children": {
                    "rateSource": {
                        "type": "complexType",
                        "description": "The publication in which the rate, price, index or factor is to be found. (e.g Gas Daily, Platts Bloomberg.)",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "rateSourcePage": {
                        "type": "complexType",
                        "description": "A specific page or screen (in the case of electronically published information) on which the rate source is to be found.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "rateSourcePageHeading": {
                        "type": "simpleType",
                        "description": "The heading for the rate source on a given rate source page or screen.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "specifiedPrice": {
                "type": "simpleType",
                "description": "The 'specified Price' describes the nature of the underlying price that is observed. It must be be stated in the underlyer definition as it is not defined in the Commodity Reference Price. Example values of 'specifiedPrice' are 'Settlement' (for a futures contract) and 'WeightedAverage' (for some published prices and indices).",
                "python_type": "unknownType",
                "children": {}
            },
            "deliveryDates": {
                "type": "simpleType",
                "description": "Deprecated: The 'deliveryDates' element is applicable for a Commodity Reference Price that references a listed future contract (e.g. The Delivery Date is a NearbyMonth).",
                "python_type": "unknownType",
                "children": {}
            },
            "deliveryNearby": {
                "type": "complexType",
                "description": "A container for the parametric representation of nearby contracts.",
                "python_type": "unknownType",
                "children": {
                    "deliveryNearbyMultiplier": {
                        "type": "simpleType",
                        "description": "A time multiplier, e.g. 1, 2 or 3 etc. used in defining Delivery Nearby date.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "deliveryNearbyType": {
                        "type": "simpleType",
                        "description": "Defines a type of the delivery nearby qualifier, expect to be used in conjunction with a delivery nearby multiplier, e.g. 1NearByMonth, 1NearbyWeek, etc. If 'CalculationPeriod' is used, the delivery nearby multiplier is expected to be '0'. To represent 'Spot', the value of the delivery nearby type should be 'NearbyMonth' and the delivery period multiplier should be set to '0' (zero).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryDate": {
                "type": "complexType",
                "description": "The Delivery Date is a fixed, single day.",
                "python_type": "unknownType",
                "children": {
                    "unadjustedDate": {
                        "type": "complexType",
                        "description": "A date subject to adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dateAdjustments": {
                        "type": "complexType",
                        "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                        "python_type": "unknownType",
                        "children": {
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "adjustedDate": {
                        "type": "complexType",
                        "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryDateYearMonth": {
                "type": "simpleType",
                "description": "The Delivery Date is a fixed, single month.",
                "python_type": "unknownType",
                "children": {}
            },
            "deliveryDateRollConvention": {
                "type": "complexType",
                "description": "The 'deliveryDateRollConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will roll to the next nearby month prior to the expiration of the referenced future. If the future will not roll at all - i.e. the price will be taken from the expiring contract, 0 should be specified here. If the future will roll to the next nearby on the last trading day - i.e. the price will be taken from the next nearby on the last trading day, then 1 should be specified and so on.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayType": {
                        "type": "simpleType",
                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "deliveryDateExpirationConvention": {
                "type": "complexType",
                "description": "The 'deliveryDateExpirationConvention' specifies, for a Commodity Transaction that references a listed future via the 'deliveryDates' element, the day on which the specified future will expire ahead of the actual expiration of the referenced future. For example: Z21 Contract expires on 19Nov21, with an adjust of 2D the \"expire\" will be 16Nov21. DeliveryDateRollConvention takes precedence. Example: Pricing on the Z21 Contract with NearbyContractDay and a deliveryDateRoll of 10D, Sampling of the F22 Contract will occur on 8Nov21 through the last Date of the Z21 Contract. With an ExpConvention of 5D, the last sampling date on the F22 contract will be 12Nov21.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "dayType": {
                        "type": "simpleType",
                        "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "multiplier": {
                "type": "simpleType",
                "description": "The 'multiplier' specifies the multiplier associated with the Transaction. The 'multiplier' element has two uses: (1) for Freight Transactions or any Calculation Period specified for a Freight Transaction, if an amount is specified as the Multiplier then it is captured by this element and (2) if the Transaction is a heat rate option, the heat rate multiplier is represented in this element. If multiplier is not provided, multiplier is assumed to be 1. (i.e. rate source states 1 BBL of Oil as 90 Dollars. Multiplier of 10 will change the value to 900 dollars.)",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "convertibleBond": {
        "type": "complexType",
        "description": "Identifies the underlying asset when it is a convertible bond.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "issuerName": {
                "type": "simpleType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "issuerPartyReference": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "seniority": {
                "type": "complexType",
                "description": "The repayment precedence of a debt instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "creditQuality": {
                "type": "complexType",
                "description": "Credit quality type (e.g. 'INVG' - Investment grade; 'NIVG' - Non-investment grade; 'NOTR' - Non-rated). Classifies the risk of the security. Note: 'NOAP' - Not applicable value is indicated by the absence of the 'creditQuality' element.",
                "python_type": "unknownType",
                "children": {}
            },
            "creditRating": {
                "type": "complexType",
                "description": "The credit rating.",
                "python_type": "unknownType",
                "children": {}
            },
            "couponType": {
                "type": "complexType",
                "description": "Specifies if the bond has a variable coupon, step-up/down coupon or a zero-coupon.",
                "python_type": "unknownType",
                "children": {}
            },
            "couponRate": {
                "type": "simpleType",
                "description": "Specifies the coupon rate (expressed in percentage) of a fixed income security or convertible bond.",
                "python_type": "unknownType",
                "children": {}
            },
            "maturity": {
                "type": "simpleType",
                "description": "The date when the principal amount of a security becomes due and payable.",
                "python_type": "unknownType",
                "children": {}
            },
            "parValue": {
                "type": "simpleType",
                "description": "Specifies the nominal amount of a fixed income security or convertible bond.",
                "python_type": "unknownType",
                "children": {}
            },
            "faceAmount": {
                "type": "simpleType",
                "description": "Specifies the total amount of the issue. Corresponds to the par value multiplied by the number of issued security.",
                "python_type": "unknownType",
                "children": {}
            },
            "paymentFrequency": {
                "type": "complexType",
                "description": "Specifies the frequency at which the bond pays, e.g. 6M.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "dayCountFraction": {
                "type": "complexType",
                "description": "The day count basis for the bond.",
                "python_type": "unknownType",
                "children": {}
            },
            "underlyingEquity": {
                "type": "complexType",
                "description": "Specifies the equity in which the convertible bond can be converted.",
                "python_type": "unknownType",
                "children": {
                    "instrumentId": {
                        "type": "complexType",
                        "description": "Identification of the underlying asset, using public and/or private identifiers.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "instrumentType": {
                        "type": "complexType",
                        "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "description": {
                        "type": "simpleType",
                        "description": "Long name of the underlying asset.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "currency": {
                        "type": "complexType",
                        "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "exchangeId": {
                        "type": "complexType",
                        "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "clearanceSystem": {
                        "type": "complexType",
                        "description": "Identification of the clearance system associated with the transaction exchange.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "definition": {
                        "type": "complexType",
                        "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "relatedExchangeId": {
                        "type": "complexType",
                        "description": "A short form unique identifier for a related exchange. If the element is not present then the exchange shall be the primary exchange on which listed futures and options on the underlying are listed. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "optionsExchangeId": {
                        "type": "complexType",
                        "description": "A short form unique identifier for an exchange on which the reference option contract is listed. This is to address the case where the reference exchange for the future is different than the one for the option. The options Exchange is referenced on share options when Merger Elections are selected as Options Exchange Adjustment.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "specifiedExchangeId": {
                        "type": "complexType",
                        "description": "A short form unique identifier for a specified exchange. If the element is not present then the exchange shall be default terms as defined in the MCA; unless otherwise specified in the Transaction Supplement.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "redemptionDate": {
                "type": "simpleType",
                "description": "Earlier date between the convertible bond put dates and its maturity date.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "curveInstrument": {
        "type": "complexType",
        "description": "Defines the underlying asset when it is a curve instrument.",
        "python_type": "unknownType",
        "children": {}
    },
    "deposit": {
        "type": "complexType",
        "description": "Identifies a simple underlying asset that is a term deposit.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "term": {
                "type": "complexType",
                "description": "Specifies the term of the deposit, e.g. 5Y.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "paymentFrequency": {
                "type": "complexType",
                "description": "Specifies the frequency at which the deposit pays, e.g. 6M.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "dayCountFraction": {
                "type": "complexType",
                "description": "The day count basis for the deposit.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "equity": {
        "type": "complexType",
        "description": "Identifies the underlying asset when it is a listed equity.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "relatedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a related exchange. If the element is not present then the exchange shall be the primary exchange on which listed futures and options on the underlying are listed. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "optionsExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for an exchange on which the reference option contract is listed. This is to address the case where the reference exchange for the future is different than the one for the option. The options Exchange is referenced on share options when Merger Elections are selected as Options Exchange Adjustment.",
                "python_type": "unknownType",
                "children": {}
            },
            "specifiedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a specified exchange. If the element is not present then the exchange shall be default terms as defined in the MCA; unless otherwise specified in the Transaction Supplement.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "exchangeTradedFund": {
        "type": "complexType",
        "description": "Identifies the underlying asset when it is an exchange-traded fund.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "relatedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a related exchange. If the element is not present then the exchange shall be the primary exchange on which listed futures and options on the underlying are listed. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "optionsExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for an exchange on which the reference option contract is listed. This is to address the case where the reference exchange for the future is different than the one for the option. The options Exchange is referenced on share options when Merger Elections are selected as Options Exchange Adjustment.",
                "python_type": "unknownType",
                "children": {}
            },
            "specifiedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a specified exchange. If the element is not present then the exchange shall be default terms as defined in the MCA; unless otherwise specified in the Transaction Supplement.",
                "python_type": "unknownType",
                "children": {}
            },
            "constituentExchangeId": {
                "type": "complexType",
                "description": "Identification of all the exchanges where constituents are traded. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "fundManager": {
                "type": "simpleType",
                "description": "Specifies the fund manager that is in charge of the fund.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "future": {
        "type": "complexType",
        "description": "Identifies the underlying asset when it is a listed future contract.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "relatedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a related exchange. If the element is not present then the exchange shall be the primary exchange on which listed futures and options on the underlying are listed. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "optionsExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for an exchange on which the reference option contract is listed. This is to address the case where the reference exchange for the future is different than the one for the option. The options Exchange is referenced on share options when Merger Elections are selected as Options Exchange Adjustment.",
                "python_type": "unknownType",
                "children": {}
            },
            "specifiedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a specified exchange. If the element is not present then the exchange shall be default terms as defined in the MCA; unless otherwise specified in the Transaction Supplement.",
                "python_type": "unknownType",
                "children": {}
            },
            "multiplier": {
                "type": "simpleType",
                "description": "The multiplier is the minimum number of the underlying - index or stock - that a participant has to trade while taking a position in the Future contract. The purpose of the multiplier is to inflate the value of the contract to add leverage to the trade. The multiplier for the Dow is 10, for the Nasdaq it is 100 and it is 250 for the Standard and Poor's index.",
                "python_type": "unknownType",
                "children": {}
            },
            "futureContractReference": {
                "type": "simpleType",
                "description": "Native identifier for the contract on the listing exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "maturity": {
                "type": "simpleType",
                "description": "The date when the future contract expires.",
                "python_type": "unknownType",
                "children": {}
            },
            "contractYearMonth": {
                "type": "simpleType",
                "description": "The contract month of the futures contract. i.e. F13 WTI NYMEX Contract is 2013-01.",
                "python_type": "unknownType",
                "children": {}
            },
            "underlyer": {
                "type": "complexType",
                "description": "Underlyer of the option e.g. a listed future.",
                "python_type": "unknownType",
                "children": {
                    "floatingRateIndex": {
                        "type": "complexType",
                        "description": "The ISDA Floating Rate Option, i.e. the name of the floating rate.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "indexTenor": {
                        "type": "complexType",
                        "description": "The ISDA Designated Maturity, i.e. the tenor of the floating rate.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "quotedCurrencyPair": {
                        "type": "complexType",
                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                        "python_type": "unknownType",
                        "children": {
                            "currency1": {
                                "type": "complexType",
                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "currency2": {
                                "type": "complexType",
                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quoteBasis": {
                                "type": "simpleType",
                                "description": "The method by which the exchange rate is quoted.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "underlyingAsset": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementType": {
                "type": "simpleType",
                "description": "Settlement method for the contract (Cash, Physical). This value is used to populate the \"Delivery Type\" field for regulatory reporting (CFTC, ESMA).",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "fx": {
        "type": "complexType",
        "description": "Identifies a simple underlying asset type that is an FX rate. Used for specifying FX rates in the pricing and risk model.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "quotedCurrencyPair": {
                "type": "complexType",
                "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                "python_type": "unknownType",
                "children": {
                    "currency1": {
                        "type": "complexType",
                        "description": "The first currency specified when a pair of currencies is to be evaluated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "currency2": {
                        "type": "complexType",
                        "description": "The second currency specified when a pair of currencies is to be evaluated.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "quoteBasis": {
                        "type": "simpleType",
                        "description": "The method by which the exchange rate is quoted.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "rateSource": {
                "type": "complexType",
                "description": "Defines the source of the FX rate.",
                "python_type": "unknownType",
                "children": {
                    "primaryRateSource": {
                        "type": "complexType",
                        "description": "The primary source for where the rate observation will occur. Will typically be either a page or a reference bank published rate.",
                        "python_type": "unknownType",
                        "children": {
                            "rateSource": {
                                "type": "complexType",
                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePage": {
                                "type": "complexType",
                                "description": "A specific page for the rate source for obtaining a market rate.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePageHeading": {
                                "type": "simpleType",
                                "description": "The heading for the rate source on a given rate source page.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "secondaryRateSource": {
                        "type": "complexType",
                        "description": "An alternative, or secondary, source for where the rate observation will occur. Will typically be either a page or a reference bank published rate.",
                        "python_type": "unknownType",
                        "children": {
                            "rateSource": {
                                "type": "complexType",
                                "description": "An information source for obtaining a market rate. For example Bloomberg, Reuters, Telerate etc.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePage": {
                                "type": "complexType",
                                "description": "A specific page for the rate source for obtaining a market rate.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "rateSourcePageHeading": {
                                "type": "simpleType",
                                "description": "The heading for the rate source on a given rate source page.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "fixingTime": {
                        "type": "complexType",
                        "description": "The time at which the spot currency exchange rate will be observed. It is specified as a time in a business day calendar location, e.g. 11:00am London time.",
                        "python_type": "unknownType",
                        "children": {
                            "hourMinuteTime": {
                                "type": "simpleType",
                                "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenter": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "index": {
        "type": "complexType",
        "description": "Identifies the underlying asset when it is a financial index.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "relatedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a related exchange. If the element is not present then the exchange shall be the primary exchange on which listed futures and options on the underlying are listed. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "optionsExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for an exchange on which the reference option contract is listed. This is to address the case where the reference exchange for the future is different than the one for the option. The options Exchange is referenced on share options when Merger Elections are selected as Options Exchange Adjustment.",
                "python_type": "unknownType",
                "children": {}
            },
            "specifiedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a specified exchange. If the element is not present then the exchange shall be default terms as defined in the MCA; unless otherwise specified in the Transaction Supplement.",
                "python_type": "unknownType",
                "children": {}
            },
            "constituentExchangeId": {
                "type": "complexType",
                "description": "Identification of all the exchanges where constituents are traded. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "futureId": {
                "type": "complexType",
                "description": "A short form unique identifier for the reference future contract in the case of an index underlyer.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "loan": {
        "type": "complexType",
        "description": "Identifies a simple underlying asset that is a loan.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "borrower": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "entityName": {
                        "type": "complexType",
                        "description": "The name of the reference entity. A free format string. FpML does not define usage rules for this element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "entityId": {
                        "type": "complexType",
                        "description": "A legal entity identifier (e.g. RED entity code)..",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "borrowerReference": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "lien": {
                "type": "complexType",
                "description": "Specifies the seniority level of the lien.",
                "python_type": "unknownType",
                "children": {}
            },
            "facilityType": {
                "type": "complexType",
                "description": "The type of loan facility (letter of credit, revolving, ...).",
                "python_type": "unknownType",
                "children": {}
            },
            "maturity": {
                "type": "simpleType",
                "description": "The date when the principal amount of the loan becomes due and payable.",
                "python_type": "unknownType",
                "children": {}
            },
            "creditAgreementDate": {
                "type": "simpleType",
                "description": "The credit agreement date is the closing date (the date where the agreement has been signed) for the loans in the credit agreement. Funding of the facilities occurs on (or sometimes a little after) the Credit Agreement date. This underlyer attribute is used to help identify which of the company's outstanding loans are being referenced by knowing to which credit agreement it belongs. ISDA Standards Terms Supplement term: Date of Original Credit Agreement.",
                "python_type": "unknownType",
                "children": {}
            },
            "tranche": {
                "type": "complexType",
                "description": "The loan tranche that is subject to the derivative transaction. It will typically be referenced as the Bloomberg tranche number. ISDA Standards Terms Supplement term: Bloomberg Tranche Number.",
                "python_type": "unknownType",
                "children": {}
            },
            "seniority": {
                "type": "complexType",
                "description": "The seniority. E.g. senior, senior secured etc.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "mortgage": {
        "type": "complexType",
        "description": "Identifies a mortgage backed security.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "insurer": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {
                    "entityName": {
                        "type": "complexType",
                        "description": "The name of the reference entity. A free format string. FpML does not define usage rules for this element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "entityId": {
                        "type": "complexType",
                        "description": "A legal entity identifier (e.g. RED entity code)..",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "insurerReference": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "issuerName": {
                "type": "simpleType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "issuerPartyReference": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "seniority": {
                "type": "complexType",
                "description": "The repayment precedence of a debt instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "creditQuality": {
                "type": "complexType",
                "description": "Credit quality type (e.g. 'INVG' - Investment grade; 'NIVG' - Non-investment grade; 'NOTR' - Non-rated). Classifies the risk of the security. Note: 'NOAP' - Not applicable value is indicated by the absence of the 'creditQuality' element.",
                "python_type": "unknownType",
                "children": {}
            },
            "creditRating": {
                "type": "complexType",
                "description": "The credit rating.",
                "python_type": "unknownType",
                "children": {}
            },
            "couponType": {
                "type": "complexType",
                "description": "Specifies if the bond has a variable coupon, step-up/down coupon or a zero-coupon.",
                "python_type": "unknownType",
                "children": {}
            },
            "couponRate": {
                "type": "simpleType",
                "description": "Specifies the coupon rate (expressed in percentage) of a fixed income security or convertible bond.",
                "python_type": "unknownType",
                "children": {}
            },
            "maturity": {
                "type": "simpleType",
                "description": "The date when the principal amount of a security becomes due and payable.",
                "python_type": "unknownType",
                "children": {}
            },
            "paymentFrequency": {
                "type": "complexType",
                "description": "Specifies the frequency at which the bond pays, e.g. 6M.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. If the period value is T (Term) then periodMultiplier must contain the value 1.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month, year or term of the stream.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "dayCountFraction": {
                "type": "complexType",
                "description": "The day count basis for the bond.",
                "python_type": "unknownType",
                "children": {}
            },
            "originalPrincipalAmount": {
                "type": "simpleType",
                "description": "The initial issued amount of the mortgage obligation.",
                "python_type": "unknownType",
                "children": {}
            },
            "pool": {
                "type": "complexType",
                "description": "The morgage pool that is underneath the mortgage obligation.",
                "python_type": "unknownType",
                "children": {
                    "version": {
                        "type": "simpleType",
                        "description": "The version number",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "effectiveDate": {
                        "type": "complexType",
                        "description": "Optionally it is possible to specify a version effective date when a versionId is supplied.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "initialFactor": {
                        "type": "simpleType",
                        "description": "The part of the mortgage that is outstanding on trade inception, i.e. has not been repaid yet as principal. It is expressed as a multiplier factor to the morgage: 1 means that the whole mortage amount is outstanding, 0.8 means that 20% has been repaid.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "currentFactor": {
                        "type": "simpleType",
                        "description": "The part of the mortgage that is currently outstanding. It is expressed similarly to the initial factor, as factor multiplier to the mortgage. This term is formally defined as part of the \"ISDA Standard Terms Supplement for use with credit derivatives transactions on mortgage-backed security with pas-as-you-go or physical settlement\".",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "sector": {
                "type": "complexType",
                "description": "The sector classification of the mortgage obligation.",
                "python_type": "unknownType",
                "children": {}
            },
            "tranche": {
                "type": "simpleType",
                "description": "The mortgage obligation tranche that is subject to the derivative transaction.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "mutualFund": {
        "type": "complexType",
        "description": "Identifies the class of unit issued by a fund.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "openEndedFund": {
                "type": "simpleType",
                "description": "Boolean indicator to specify whether the mutual fund is an open-ended mutual fund.",
                "python_type": "unknownType",
                "children": {}
            },
            "fundManager": {
                "type": "simpleType",
                "description": "Specifies the fund manager that is in charge of the fund.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "option": {
        "type": "complexType",
        "description": "Identifies the underlying asset when it is a listed option contract.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "relatedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a related exchange. If the element is not present then the exchange shall be the primary exchange on which listed futures and options on the underlying are listed. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "optionsExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for an exchange on which the reference option contract is listed. This is to address the case where the reference exchange for the future is different than the one for the option. The options Exchange is referenced on share options when Merger Elections are selected as Options Exchange Adjustment.",
                "python_type": "unknownType",
                "children": {}
            },
            "specifiedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a specified exchange. If the element is not present then the exchange shall be default terms as defined in the MCA; unless otherwise specified in the Transaction Supplement.",
                "python_type": "unknownType",
                "children": {}
            },
            "multiplier": {
                "type": "simpleType",
                "description": "Specifies the contract multiplier that can be associated with the number of units.",
                "python_type": "unknownType",
                "children": {}
            },
            "contractReference": {
                "type": "simpleType",
                "description": "Specifies the contract that can be referenced, besides the undelyer type.",
                "python_type": "unknownType",
                "children": {}
            },
            "expirationDate": {
                "type": "complexType",
                "description": "The date when the contract expires.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "strike": {
                "type": "simpleType",
                "description": "Specifies the price at which the option can be exercised.",
                "python_type": "unknownType",
                "children": {}
            },
            "strikeCurrency": {
                "type": "complexType",
                "description": "The currency in which the strike of the option is expressed.",
                "python_type": "unknownType",
                "children": {}
            },
            "strikeUnits": {
                "type": "complexType",
                "description": "Units in which the option strike is expressed e.g. currency Amount, BasisPoints, Percentage, Rate. Reportable reference data under MiFID RTS 22",
                "python_type": "unknownType",
                "children": {}
            },
            "optionType": {
                "type": "simpleType",
                "description": "Specifies whether the option allows the holder to buy or sell tne underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "exerciseStyle": {
                "type": "simpleType",
                "description": "Specifies the exercise style of the option {American, Bermuda, European}",
                "python_type": "unknownType",
                "children": {}
            },
            "underlyer": {
                "type": "complexType",
                "description": "Underlyer of the option e.g. a listed future.",
                "python_type": "unknownType",
                "children": {
                    "floatingRateIndex": {
                        "type": "complexType",
                        "description": "The ISDA Floating Rate Option, i.e. the name of the floating rate.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "indexTenor": {
                        "type": "complexType",
                        "description": "The ISDA Designated Maturity, i.e. the tenor of the floating rate.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "quotedCurrencyPair": {
                        "type": "complexType",
                        "description": "Defines the two currencies for an FX trade and the quotation relationship between the two currencies.",
                        "python_type": "unknownType",
                        "children": {
                            "currency1": {
                                "type": "complexType",
                                "description": "The first currency specified when a pair of currencies is to be evaluated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "currency2": {
                                "type": "complexType",
                                "description": "The second currency specified when a pair of currencies is to be evaluated.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "quoteBasis": {
                                "type": "simpleType",
                                "description": "The method by which the exchange rate is quoted.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "underlyingAsset": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "settlementType": {
                "type": "simpleType",
                "description": "Settlement method for the contract (Cash, Physical). This value is used to populate the \"Delivery Type\" field for regulatory reporting (CFTC, ESMA).",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "rateIndex": {
        "type": "complexType",
        "description": "Identifies a simple underlying asset that is an interest rate index. Used for specifying benchmark assets in the market environment in the pricing and risk model.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "floatingRateIndex": {
                "type": "complexType",
                "description": "",
                "python_type": "unknownType",
                "children": {}
            },
            "term": {
                "type": "complexType",
                "description": "Specifies the term of the simple swap, e.g. 5Y.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "paymentFrequency": {
                "type": "complexType",
                "description": "Specifies the frequency at which the index pays, e.g. 6M.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "dayCountFraction": {
                "type": "complexType",
                "description": "The day count basis for the index.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "security": {
        "type": "complexType",
        "description": "Identifies a security of implicit type (derivable from the security reference data).",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "issuerPartyReference": {
                "type": "complexType",
                "description": "Specifies the issuer name of a fixed income security or convertible bond. The name is specified as an href into one of the party blocks.",
                "python_type": "unknownType",
                "children": {}
            },
            "creditQuality": {
                "type": "complexType",
                "description": "Credit quality type (e.g. SFTR specified types: 'INVG' - Investment grade; 'NIVG' - Non-investment grade; 'NOTR' - Non-rated). Classifies the risk of the security. Note: 'NOAP' - Not applicable value is indicated by the absence of the 'creditQuality' element.",
                "python_type": "unknownType",
                "children": {}
            },
            "maturity": {
                "type": "simpleType",
                "description": "Credit maturity. The date when the principal amount of a security becomes due and payable.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "simpleCreditDefaultSwap": {
        "type": "complexType",
        "description": "Identifies a simple underlying asset that is a credit default swap.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "referenceEntity": {
                "type": "complexType",
                "description": "The entity for which this is defined.",
                "python_type": "unknownType",
                "children": {
                    "entityName": {
                        "type": "complexType",
                        "description": "The name of the reference entity. A free format string. FpML does not define usage rules for this element.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "entityId": {
                        "type": "complexType",
                        "description": "A legal entity identifier (e.g. RED entity code)..",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "creditEntityReference": {
                "type": "complexType",
                "description": "An XML reference a credit entity defined elsewhere in the document.",
                "python_type": "unknownType",
                "children": {}
            },
            "term": {
                "type": "complexType",
                "description": "Specifies the term of the simple CD swap, e.g. 5Y.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "paymentFrequency": {
                "type": "complexType",
                "description": "Specifies the frequency at which the swap pays, e.g. 6M.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            }
        }
    },
    "simpleFra": {
        "type": "complexType",
        "description": "Identifies a simple underlying asset that is a forward rate agreement.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "startTerm": {
                "type": "complexType",
                "description": "Specifies the start term of the simple fra, e.g. 3M.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "endTerm": {
                "type": "complexType",
                "description": "Specifies the end term of the simple fra, e.g. 9M.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "dayCountFraction": {
                "type": "complexType",
                "description": "The day count basis for the FRA.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "simpleIrSwap": {
        "type": "complexType",
        "description": "Identifies a simple underlying asset that is a swap.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "term": {
                "type": "complexType",
                "description": "Specifies the term of the simple swap, e.g. 5Y.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "paymentFrequency": {
                "type": "complexType",
                "description": "Specifies the frequency at which the swap pays, e.g. 6M.",
                "python_type": "unknownType",
                "children": {
                    "periodMultiplier": {
                        "type": "simpleType",
                        "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "period": {
                        "type": "simpleType",
                        "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "dayCountFraction": {
                "type": "complexType",
                "description": "The day count basis for the swap.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    },
    "underlyingAsset": {
        "type": "complexType",
        "description": "Define the underlying asset, either a listed security or other instrument.",
        "python_type": "unknownType",
        "children": {}
    },
    "warrant": {
        "type": "complexType",
        "description": "Defines the underlying asset when it is a warrant.",
        "python_type": "unknownType",
        "children": {
            "instrumentId": {
                "type": "complexType",
                "description": "Identification of the underlying asset, using public and/or private identifiers.",
                "python_type": "unknownType",
                "children": {}
            },
            "instrumentType": {
                "type": "complexType",
                "description": "Classification of the asset, using public and/or private typologies e.g. ISO 10962 CFI code.",
                "python_type": "unknownType",
                "children": {}
            },
            "description": {
                "type": "simpleType",
                "description": "Long name of the underlying asset.",
                "python_type": "unknownType",
                "children": {}
            },
            "currency": {
                "type": "complexType",
                "description": "Trading currency of the underlyer when transacted as a cash instrument.",
                "python_type": "unknownType",
                "children": {}
            },
            "exchangeId": {
                "type": "complexType",
                "description": "Identification of the exchange on which this asset is transacted for the purposes of calculating a contractural payoff. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "clearanceSystem": {
                "type": "complexType",
                "description": "Identification of the clearance system associated with the transaction exchange.",
                "python_type": "unknownType",
                "children": {}
            },
            "definition": {
                "type": "complexType",
                "description": "An optional reference to a full FpML product that defines the simple product in greater detail. In case of inconsistency between the terms of the simple product and those of the detailed definition, the values in the simple product override those in the detailed definition.",
                "python_type": "unknownType",
                "children": {}
            },
            "relatedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a related exchange. If the element is not present then the exchange shall be the primary exchange on which listed futures and options on the underlying are listed. The term \"Exchange\" is assumed to have the meaning as defined in the ISDA 2002 Equity Derivatives Definitions.",
                "python_type": "unknownType",
                "children": {}
            },
            "optionsExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for an exchange on which the reference option contract is listed. This is to address the case where the reference exchange for the future is different than the one for the option. The options Exchange is referenced on share options when Merger Elections are selected as Options Exchange Adjustment.",
                "python_type": "unknownType",
                "children": {}
            },
            "specifiedExchangeId": {
                "type": "complexType",
                "description": "A short form unique identifier for a specified exchange. If the element is not present then the exchange shall be default terms as defined in the MCA; unless otherwise specified in the Transaction Supplement.",
                "python_type": "unknownType",
                "children": {}
            },
            "multiplier": {
                "type": "simpleType",
                "description": "Specifies the contract multiplier that can be associated with the number of units.",
                "python_type": "unknownType",
                "children": {}
            },
            "contractReference": {
                "type": "simpleType",
                "description": "Specifies the contract that can be referenced, besides the undelyer type.",
                "python_type": "unknownType",
                "children": {}
            },
            "expirationDate": {
                "type": "complexType",
                "description": "The date when the contract expires.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "americanExercise": {
        "type": "complexType",
        "description": "The parameters for defining the exercise period for an American style option together with any rules governing the notional amount of the underlying which can be exercised on any given exercise date and any associated exercise fees.",
        "python_type": "unknownType",
        "children": {
            "commencementDate": {
                "type": "complexType",
                "description": "The first day of the exercise period for an American style option.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "expirationDate": {
                "type": "complexType",
                "description": "The last day within an exercise period for an American style option. For a European style option it is the only day within the exercise period.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "relevantUnderlyingDate": {
                "type": "complexType",
                "description": "The date on the underlying set by the exercise of an option. What this date is depends on the option (e.g. in a swaption it is the swap effective date, in an extendible/cancelable provision it is the swap termination date).",
                "python_type": "unknownType",
                "children": {
                    "adjustableDates": {
                        "type": "complexType",
                        "description": "A series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDates": {
                        "type": "complexType",
                        "description": "A series of dates specified as some offset to another series of dates (the anchor dates).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "periodSkip": {
                                "type": "simpleType",
                                "description": "The number of periods in the referenced date schedule that are between each date in the relative date schedule. Thus a skip of 2 would mean that dates are relative to every second date in the referenced schedule. If present this should have a value greater than 1.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "scheduleBounds": {
                                "type": "complexType",
                                "description": "The first and last dates of a schedule. This can be used to restrict the range of values in a reference series of dates.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedFirstDate": {
                                        "type": "simpleType",
                                        "description": "The first date of a date range.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "unadjustedLastDate": {
                                        "type": "simpleType",
                                        "description": "The last date of a date range.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "earliestExerciseTime": {
                "type": "complexType",
                "description": "The earliest time at which notice of exercise can be given by the buyer to the seller (or seller's agent) i) on the expriation date, in the case of a European style option, (ii) on each bermuda option exercise date and the expiration date, in the case of a Bermuda style option the commencement date to, and including, the expiration date , in the case of an American option.",
                "python_type": "unknownType",
                "children": {
                    "hourMinuteTime": {
                        "type": "simpleType",
                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenter": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "latestExerciseTime": {
                "type": "complexType",
                "description": "For a Bermuda or American style option, the latest time on an exercise business day (excluding the expiration date) within the exercise period that notice can be given by the buyer to the seller or seller's agent. Notice of exercise given after this time will be deemed to have been given on the next exercise business day.",
                "python_type": "unknownType",
                "children": {
                    "hourMinuteTime": {
                        "type": "simpleType",
                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenter": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "expirationTime": {
                "type": "complexType",
                "description": "The latest time for exercise on expirationDate.",
                "python_type": "unknownType",
                "children": {
                    "hourMinuteTime": {
                        "type": "simpleType",
                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenter": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "multipleExercise": {
                "type": "complexType",
                "description": "As defined in the 2000 ISDA Definitions, Section 12.4. Multiple Exercise, the buyer of the option has the right to exercise all or less than all the unexercised notional amount of the underlying swap on one or more days in the exercise period, but on any such day may not exercise less than the minimum notional amount or more that the maximum notional amount, and if an integral multiple amount is specified, the notional amount exercised must be equal to, or be an intergral multiple of, the integral multiple amount.",
                "python_type": "unknownType",
                "children": {
                    "notionalReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the associated notional schedule defined elsewhere in the document. This element has been made optional as part of its integration in the OptionBaseExtended, because not required for the options on securities.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "integralMultipleAmount": {
                        "type": "simpleType",
                        "description": "A notional amount which restricts the amount of notional that can be exercised when partial exercise or multiple exercise is applicable. The integral multiple amount defines a lower limit of notional that can be exercised and also defines a unit multiple of notional that can be exercised, i.e. only integer multiples of this amount can be exercised.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumNotionalAmount": {
                        "type": "simpleType",
                        "description": "The minimum notional amount that can be exercised on a given exercise date. See multipleExercise.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumNumberOfOptions": {
                        "type": "simpleType",
                        "description": "The minimum number of options that can be exercised on a given exercise date.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "maximumNotionalAmount": {
                        "type": "simpleType",
                        "description": "The maximum notional amount that can be exercised on a given exercise date.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "maximumNumberOfOptions": {
                        "type": "simpleType",
                        "description": "The maximum number of options that can be exercised on a given exercise date. If the number is not specified, it means that the maximum number of options corresponds to the remaining unexercised options.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "exerciseFeeSchedule": {
                "type": "complexType",
                "description": "The fees associated with an exercise date. The fees are conditional on the exercise occuring. The fees can be specified as actual currency amounts or as percentages of the notional amount being exercised.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "notionalReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the associated notional schedule defined elsewhere in the document.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "feeAmountSchedule": {
                        "type": "complexType",
                        "description": "The exercise fee amount schedule. The fees are expressed as currency amounts. The currency of the fee is assumed to be that of the notional schedule referenced.",
                        "python_type": "unknownType",
                        "children": {
                            "initialValue": {
                                "type": "simpleType",
                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "step": {
                                "type": "complexType",
                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                "python_type": "unknownType",
                                "children": {
                                    "stepDate": {
                                        "type": "simpleType",
                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "stepValue": {
                                        "type": "simpleType",
                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "feeRateSchedule": {
                        "type": "complexType",
                        "description": "The exercise free rate schedule. The fees are expressed as percentage rates of the notional being exercised. The currency of the fee is assumed to be that of the notional schedule referenced.",
                        "python_type": "unknownType",
                        "children": {
                            "initialValue": {
                                "type": "simpleType",
                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "step": {
                                "type": "complexType",
                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                "python_type": "unknownType",
                                "children": {
                                    "stepDate": {
                                        "type": "simpleType",
                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "stepValue": {
                                        "type": "simpleType",
                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "feePaymentDate": {
                        "type": "complexType",
                        "description": "The date on which exercise fee(s) will be paid. It is specified as a relative date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "bermudaExercise": {
        "type": "complexType",
        "description": "The parameters for defining the exercise period for a Bermuda style option together with any rules governing the notional amount of the underlying which can be exercised on any given exercise date and any associated exercise fees.",
        "python_type": "unknownType",
        "children": {
            "bermudaExerciseDates": {
                "type": "complexType",
                "description": "The dates the define the Bermuda option exercise dates and the expiration date. The last specified date is assumed to be the expiration date. The dates can either be specified as a series of explicit dates and associated adjustments or as a series of dates defined relative to another schedule of dates, for example, the calculation period start dates. Where a relative series of dates are defined the first and last possible exercise dates can be separately specified.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDates": {
                        "type": "complexType",
                        "description": "A series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDates": {
                        "type": "complexType",
                        "description": "A series of dates specified as some offset to another series of dates (the anchor dates).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "periodSkip": {
                                "type": "simpleType",
                                "description": "The number of periods in the referenced date schedule that are between each date in the relative date schedule. Thus a skip of 2 would mean that dates are relative to every second date in the referenced schedule. If present this should have a value greater than 1.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "scheduleBounds": {
                                "type": "complexType",
                                "description": "The first and last dates of a schedule. This can be used to restrict the range of values in a reference series of dates.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedFirstDate": {
                                        "type": "simpleType",
                                        "description": "The first date of a date range.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "unadjustedLastDate": {
                                        "type": "simpleType",
                                        "description": "The last date of a date range.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "relevantUnderlyingDate": {
                "type": "complexType",
                "description": "The date on the underlying set by the exercise of an option. What this date is depends on the option (e.g. in a swaption it is the swap effective date, in an extendible/cancelable provision it is the swap termination date).",
                "python_type": "unknownType",
                "children": {
                    "adjustableDates": {
                        "type": "complexType",
                        "description": "A series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDates": {
                        "type": "complexType",
                        "description": "A series of dates specified as some offset to another series of dates (the anchor dates).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "periodSkip": {
                                "type": "simpleType",
                                "description": "The number of periods in the referenced date schedule that are between each date in the relative date schedule. Thus a skip of 2 would mean that dates are relative to every second date in the referenced schedule. If present this should have a value greater than 1.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "scheduleBounds": {
                                "type": "complexType",
                                "description": "The first and last dates of a schedule. This can be used to restrict the range of values in a reference series of dates.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedFirstDate": {
                                        "type": "simpleType",
                                        "description": "The first date of a date range.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "unadjustedLastDate": {
                                        "type": "simpleType",
                                        "description": "The last date of a date range.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "earliestExerciseTime": {
                "type": "complexType",
                "description": "The earliest time at which notice of exercise can be given by the buyer to the seller (or seller's agent) i) on the expriation date, in the case of a European style option, (ii) on each bermuda option exercise date and the expiration date, in the case of a Bermuda style option the commencement date to, and including, the expiration date , in the case of an American option.",
                "python_type": "unknownType",
                "children": {
                    "hourMinuteTime": {
                        "type": "simpleType",
                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenter": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "latestExerciseTime": {
                "type": "complexType",
                "description": "For a Bermuda or American style option, the latest time on an exercise business day (excluding the expiration date) within the exercise period that notice can be given by the buyer to the seller or seller's agent. Notice of exercise given after this time will be deemed to have been given on the next exercise business day.",
                "python_type": "unknownType",
                "children": {
                    "hourMinuteTime": {
                        "type": "simpleType",
                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenter": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "expirationTime": {
                "type": "complexType",
                "description": "The latest time for exercise on expirationDate.",
                "python_type": "unknownType",
                "children": {
                    "hourMinuteTime": {
                        "type": "simpleType",
                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenter": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "multipleExercise": {
                "type": "complexType",
                "description": "As defined in the 2000 ISDA Definitions, Section 12.4. Multiple Exercise, the buyer of the option has the right to exercise all or less than all the unexercised notional amount of the underlying swap on one or more days in the exercise period, but on any such day may not exercise less than the minimum notional amount or more that the maximum notional amount, and if an integral multiple amount is specified, the notional amount exercised must be equal to, or be an intergral multiple of, the integral multiple amount.",
                "python_type": "unknownType",
                "children": {
                    "notionalReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the associated notional schedule defined elsewhere in the document. This element has been made optional as part of its integration in the OptionBaseExtended, because not required for the options on securities.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "integralMultipleAmount": {
                        "type": "simpleType",
                        "description": "A notional amount which restricts the amount of notional that can be exercised when partial exercise or multiple exercise is applicable. The integral multiple amount defines a lower limit of notional that can be exercised and also defines a unit multiple of notional that can be exercised, i.e. only integer multiples of this amount can be exercised.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumNotionalAmount": {
                        "type": "simpleType",
                        "description": "The minimum notional amount that can be exercised on a given exercise date. See multipleExercise.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumNumberOfOptions": {
                        "type": "simpleType",
                        "description": "The minimum number of options that can be exercised on a given exercise date.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "maximumNotionalAmount": {
                        "type": "simpleType",
                        "description": "The maximum notional amount that can be exercised on a given exercise date.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "maximumNumberOfOptions": {
                        "type": "simpleType",
                        "description": "The maximum number of options that can be exercised on a given exercise date. If the number is not specified, it means that the maximum number of options corresponds to the remaining unexercised options.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "exerciseFeeSchedule": {
                "type": "complexType",
                "description": "The fees associated with an exercise date. The fees are conditional on the exercise occuring. The fees can be specified as actual currency amounts or as percentages of the notional amount being exercised.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "notionalReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the associated notional schedule defined elsewhere in the document.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "feeAmountSchedule": {
                        "type": "complexType",
                        "description": "The exercise fee amount schedule. The fees are expressed as currency amounts. The currency of the fee is assumed to be that of the notional schedule referenced.",
                        "python_type": "unknownType",
                        "children": {
                            "initialValue": {
                                "type": "simpleType",
                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "step": {
                                "type": "complexType",
                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                "python_type": "unknownType",
                                "children": {
                                    "stepDate": {
                                        "type": "simpleType",
                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "stepValue": {
                                        "type": "simpleType",
                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "currency": {
                                "type": "complexType",
                                "description": "The currency in which an amount is denominated.",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "feeRateSchedule": {
                        "type": "complexType",
                        "description": "The exercise free rate schedule. The fees are expressed as percentage rates of the notional being exercised. The currency of the fee is assumed to be that of the notional schedule referenced.",
                        "python_type": "unknownType",
                        "children": {
                            "initialValue": {
                                "type": "simpleType",
                                "description": "The initial rate or amount, as the case may be. An initial rate of 5% would be represented as 0.05.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "step": {
                                "type": "complexType",
                                "description": "The schedule of step date and value pairs. On each step date, the associated step value becomes effective. A list of steps may be ordered in the document by ascending step date. An FpML document containing an unordered list of steps is still regarded as a conformant document.",
                                "python_type": "unknownType",
                                "children": {
                                    "stepDate": {
                                        "type": "simpleType",
                                        "description": "The date on which the associated stepValue becomes effective. This day may be subject to adjustment in accordance with a business day convention.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "stepValue": {
                                        "type": "simpleType",
                                        "description": "The rate or amount which becomes effective on the associated stepDate. A rate of 5% would be represented as 0.05.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    },
                    "feePaymentDate": {
                        "type": "complexType",
                        "description": "The date on which exercise fee(s) will be paid. It is specified as a relative date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "europeanExercise": {
        "type": "complexType",
        "description": "The parameters for defining the exercise period for a European style option together with any rules governing the notional amount of the underlying which can be exercised on any given exercise date and any associated exercise fees.",
        "python_type": "unknownType",
        "children": {
            "expirationDate": {
                "type": "complexType",
                "description": "The last day within an exercise period for an American style option. For a European style option it is the only day within the exercise period.",
                "python_type": "unknownType",
                "children": {
                    "adjustableDate": {
                        "type": "complexType",
                        "description": "A date that is subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business date in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDate": {
                        "type": "complexType",
                        "description": "A date specified as an offset to another date (the anchor date).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            },
            "relevantUnderlyingDate": {
                "type": "complexType",
                "description": "The date on the underlying set by the exercise of an option. What this date is depends on the option (e.g. in a swaption it is the swap effective date, in an extendible/cancelable provision it is the swap termination date).",
                "python_type": "unknownType",
                "children": {
                    "adjustableDates": {
                        "type": "complexType",
                        "description": "A series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.",
                        "python_type": "unknownType",
                        "children": {
                            "unadjustedDate": {
                                "type": "complexType",
                                "description": "A date subject to adjustment.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dateAdjustments": {
                                "type": "complexType",
                                "description": "The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.",
                                "python_type": "unknownType",
                                "children": {
                                    "businessDayConvention": {
                                        "type": "simpleType",
                                        "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCentersReference": {
                                        "type": "complexType",
                                        "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "businessCenters": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {
                                            "businessCenter": {
                                                "type": "complexType",
                                                "description": "",
                                                "python_type": "unknownType",
                                                "children": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    },
                    "relativeDates": {
                        "type": "complexType",
                        "description": "A series of dates specified as some offset to another series of dates (the anchor dates).",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "periodSkip": {
                                "type": "simpleType",
                                "description": "The number of periods in the referenced date schedule that are between each date in the relative date schedule. Thus a skip of 2 would mean that dates are relative to every second date in the referenced schedule. If present this should have a value greater than 1.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "scheduleBounds": {
                                "type": "complexType",
                                "description": "The first and last dates of a schedule. This can be used to restrict the range of values in a reference series of dates.",
                                "python_type": "unknownType",
                                "children": {
                                    "unadjustedFirstDate": {
                                        "type": "simpleType",
                                        "description": "The first date of a date range.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    },
                                    "unadjustedLastDate": {
                                        "type": "simpleType",
                                        "description": "The last date of a date range.",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "earliestExerciseTime": {
                "type": "complexType",
                "description": "The earliest time at which notice of exercise can be given by the buyer to the seller (or seller's agent) i) on the expriation date, in the case of a European style option, (ii) on each bermuda option exercise date and the expiration date, in the case of a Bermuda style option the commencement date to, and including, the expiration date , in the case of an American option.",
                "python_type": "unknownType",
                "children": {
                    "hourMinuteTime": {
                        "type": "simpleType",
                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenter": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "expirationTime": {
                "type": "complexType",
                "description": "The latest time for exercise on expirationDate.",
                "python_type": "unknownType",
                "children": {
                    "hourMinuteTime": {
                        "type": "simpleType",
                        "description": "A time specified in hh:mm:ss format where the second component must be '00', e.g. 11am would be represented as 11:00:00.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "businessCenter": {
                        "type": "complexType",
                        "description": "",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "partialExercise": {
                "type": "complexType",
                "description": "As defined in the 2000 ISDA Definitions, Section 12.3. Partial Exercise, the buyer of the option has the right to exercise all or less than all the notional amount of the underlying swap on the expiration date, but may not exercise less than the minimum notional amount, and if an integral multiple amount is specified, the notional amount exercised must be equal to, or be an integral multiple of, the integral multiple amount.",
                "python_type": "unknownType",
                "children": {
                    "notionalReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the associated notional schedule defined elsewhere in the document. This element has been made optional as part of its integration in the OptionBaseExtended, because not required for the options on securities.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "integralMultipleAmount": {
                        "type": "simpleType",
                        "description": "A notional amount which restricts the amount of notional that can be exercised when partial exercise or multiple exercise is applicable. The integral multiple amount defines a lower limit of notional that can be exercised and also defines a unit multiple of notional that can be exercised, i.e. only integer multiples of this amount can be exercised.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumNotionalAmount": {
                        "type": "simpleType",
                        "description": "The minimum notional amount that can be exercised on a given exercise date. See multipleExercise.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "minimumNumberOfOptions": {
                        "type": "simpleType",
                        "description": "The minimum number of options that can be exercised on a given exercise date.",
                        "python_type": "unknownType",
                        "children": {}
                    }
                }
            },
            "exerciseFee": {
                "type": "complexType",
                "description": "A fee to be paid on exercise. This could be represented as an amount or a rate and notional reference on which to apply the rate.",
                "python_type": "unknownType",
                "children": {
                    "payerPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "payerAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account responsible for making the payments defined by this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverPartyReference": {
                        "type": "complexType",
                        "description": "A reference to the party that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "receiverAccountReference": {
                        "type": "complexType",
                        "description": "A reference to the account that receives the payments corresponding to this structure.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "notionalReference": {
                        "type": "complexType",
                        "description": "A pointer style reference to the associated notional schedule defined elsewhere in the document.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "feeAmount": {
                        "type": "simpleType",
                        "description": "The amount of fee to be paid on exercise. The fee currency is that of the referenced notional.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "feeRate": {
                        "type": "simpleType",
                        "description": "A fee represented as a percentage of some referenced notional. A percentage of 5% would be represented as 0.05.",
                        "python_type": "unknownType",
                        "children": {}
                    },
                    "feePaymentDate": {
                        "type": "complexType",
                        "description": "The date on which exercise fee(s) will be paid. It is specified as a relative date.",
                        "python_type": "unknownType",
                        "children": {
                            "periodMultiplier": {
                                "type": "simpleType",
                                "description": "A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "period": {
                                "type": "simpleType",
                                "description": "A time period, e.g. a day, week, month or year of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "dayType": {
                                "type": "simpleType",
                                "description": "In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessDayConvention": {
                                "type": "simpleType",
                                "description": "The convention for adjusting a date if it would otherwise fall on a day that is not a business day.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCentersReference": {
                                "type": "complexType",
                                "description": "A pointer style reference to a set of financial business centers defined elsewhere in the document. This set of business centers is used to determine whether a particular day is a business day or not.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "businessCenters": {
                                "type": "complexType",
                                "description": "",
                                "python_type": "unknownType",
                                "children": {
                                    "businessCenter": {
                                        "type": "complexType",
                                        "description": "",
                                        "python_type": "unknownType",
                                        "children": {}
                                    }
                                }
                            },
                            "dateRelativeTo": {
                                "type": "complexType",
                                "description": "Specifies the anchor as an href attribute. The href attribute value is a pointer style reference to the element or component elsewhere in the document where the anchor date is defined.",
                                "python_type": "unknownType",
                                "children": {}
                            },
                            "adjustedDate": {
                                "type": "complexType",
                                "description": "The date once the adjustment has been performed. (Note that this date may change if the business center holidays change).",
                                "python_type": "unknownType",
                                "children": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "exercise": {
        "type": "complexType",
        "description": "An placeholder for the actual option exercise definitions.",
        "python_type": "unknownType",
        "children": {}
    },
    "product": {
        "type": "complexType",
        "description": "An abstract element used as a place holder for the substituting product elements.",
        "python_type": "unknownType",
        "children": {
            "primaryAssetClass": {
                "type": "complexType",
                "description": "A classification of the most important risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "secondaryAssetClass": {
                "type": "complexType",
                "description": "A classification of additional risk classes of the trade, if any. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productType": {
                "type": "complexType",
                "description": "A classification of the type of product. FpML defines a simple product categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            },
            "productId": {
                "type": "complexType",
                "description": "A product reference identifier. The product ID is an identifier that describes the key economic characteristics of the trade type, with the exception of concepts such as size (notional, quantity, number of units) and price (fixed rate, strike, etc.) that are negotiated for each transaction. It can be used to hold identifiers such as the \"UPI\" (universal product identifier) required by certain regulatory reporting rules. It can also be used to hold identifiers of benchmark products or product temnplates used by certain trading systems or facilities. FpML does not define the domain values associated with this element. Note that the domain values for this element are not strictly an enumerated list.",
                "python_type": "unknownType",
                "children": {}
            },
            "assetClass": {
                "type": "complexType",
                "description": "A classification of the risk class of the trade. FpML defines a simple asset class categorization using a coding scheme.",
                "python_type": "unknownType",
                "children": {}
            }
        }
    }
}